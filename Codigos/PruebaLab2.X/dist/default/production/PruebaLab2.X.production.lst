

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Oct 21 20:15:47 2021

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34  0000                     
    35                           ; Version 1.41
    36                           ; Generated 25/01/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  000C64                     __pidataCOMRAM:
    72                           	opt stack 0
    73                           
    74                           ;initializer for _y
    75  000C64  0001               	dw	1
    76  0000                     _RCREG	set	4014
    77  0000                     _ADRESL	set	4035
    78  0000                     _ADRESH	set	4036
    79  0000                     _T2CONbits	set	4042
    80  0000                     _TMR2	set	4044
    81  0000                     _ADCON0bits	set	4034
    82  0000                     _TXSTA	set	4012
    83  0000                     _RCSTA	set	4011
    84  0000                     _SPBRG	set	4015
    85  0000                     _TRISCbits	set	3988
    86  0000                     _CCP2CON	set	4026
    87  0000                     _CCPR2L	set	4027
    88  0000                     _CCP1CON	set	4029
    89  0000                     _CCPR1L	set	4030
    90  0000                     _LATC	set	3979
    91  0000                     _TRISC	set	3988
    92  0000                     _T2CON	set	4042
    93  0000                     _PR2	set	4043
    94  0000                     _LATE	set	3981
    95  0000                     _TRISE	set	3990
    96  0000                     _LATA	set	3977
    97  0000                     _TRISA	set	3986
    98  0000                     _LATB	set	3978
    99  0000                     _TRISB	set	3987
   100  0000                     _ADCON2	set	4032
   101  0000                     _ADCON1	set	4033
   102  0000                     _ADCON0	set	4034
   103  0000                     _OSCCON	set	4051
   104  0000                     _LATB3	set	31827
   105  0000                     _LATB2	set	31826
   106  0000                     _LATB1	set	31825
   107  0000                     _LATB0	set	31824
   108  0000                     _GO	set	32273
   109  0000                     _RCIF	set	31989
   110  0000                     _RCIE	set	31981
   111  0000                     _PEIE	set	32662
   112  0000                     _GIE	set	32663
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  000BF4                     __pcinit:
   118                           	opt stack 0
   119  000BF4                     start_initialization:
   120                           	opt stack 0
   121  000BF4                     __initialization:
   122                           	opt stack 0
   123                           
   124                           ; Initialize objects allocated to COMRAM (2 bytes)
   125                           ; load TBLPTR registers with __pidataCOMRAM
   126  000BF4  0E64               	movlw	low __pidataCOMRAM
   127  000BF6  6EF6               	movwf	tblptrl,c
   128  000BF8  0E0C               	movlw	high __pidataCOMRAM
   129  000BFA  6EF7               	movwf	tblptrh,c
   130  000BFC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   131  000BFE  6EF8               	movwf	tblptru,c
   132  000C00  0009               	tblrd		*+	;fetch initializer
   133  000C02  CFF5 F04E          	movff	tablat,__pdataCOMRAM
   134  000C06  0009               	tblrd		*+	;fetch initializer
   135  000C08  CFF5 F04F          	movff	tablat,__pdataCOMRAM+1
   136                           
   137                           ; Clear objects allocated to COMRAM (40 bytes)
   138  000C0C  EE00  F001         	lfsr	0,__pbssCOMRAM
   139  000C10  0E28               	movlw	40
   140  000C12                     clear_0:
   141  000C12  6AEE               	clrf	postinc0,c
   142  000C14  06E8               	decf	wreg,f,c
   143  000C16  E1FD               	bnz	clear_0
   144  000C18                     end_of_initialization:
   145                           	opt stack 0
   146  000C18                     __end_of__initialization:
   147                           	opt stack 0
   148  000C18  9050               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   149  000C1A  9250               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   150  000C1C  0100               	movlb	0
   151  000C1E  EFDF  F000         	goto	_main	;jump to C main() function
   152                           tblptru	equ	0xFF8
   153                           tblptrh	equ	0xFF7
   154                           tblptrl	equ	0xFF6
   155                           tablat	equ	0xFF5
   156                           postinc0	equ	0xFEE
   157                           wreg	equ	0xFE8
   158                           
   159                           	psect	bssCOMRAM
   160  000001                     __pbssCOMRAM:
   161                           	opt stack 0
   162  000001                     _d2:
   163                           	opt stack 0
   164  000001                     	ds	3
   165  000004                     _d1:
   166                           	opt stack 0
   167  000004                     	ds	3
   168  000007                     _ciclo_util2:
   169                           	opt stack 0
   170  000007                     	ds	3
   171  00000A                     _ciclo_util1:
   172                           	opt stack 0
   173  00000A                     	ds	3
   174  00000D                     _conversion3:
   175                           	opt stack 0
   176  00000D                     	ds	3
   177  000010                     _conversion2:
   178                           	opt stack 0
   179  000010                     	ds	3
   180  000013                     _conversion1:
   181                           	opt stack 0
   182  000013                     	ds	3
   183  000016                     _a:
   184                           	opt stack 0
   185  000016                     	ds	2
   186  000018                     _PWM:
   187                           	opt stack 0
   188  000018                     	ds	2
   189  00001A                     _modo:
   190                           	opt stack 0
   191  00001A                     	ds	2
   192  00001C                     _x:
   193                           	opt stack 0
   194  00001C                     	ds	2
   195  00001E                     _i:
   196                           	opt stack 0
   197  00001E                     	ds	2
   198  000020                     _c:
   199                           	opt stack 0
   200  000020                     	ds	3
   201  000023                     _duty_cicle2:
   202                           	opt stack 0
   203  000023                     	ds	3
   204  000026                     _duty_cicle1:
   205                           	opt stack 0
   206  000026                     	ds	3
   207                           tblptru	equ	0xFF8
   208                           tblptrh	equ	0xFF7
   209                           tblptrl	equ	0xFF6
   210                           tablat	equ	0xFF5
   211                           postinc0	equ	0xFEE
   212                           wreg	equ	0xFE8
   213                           
   214                           	psect	dataCOMRAM
   215  00004E                     __pdataCOMRAM:
   216                           	opt stack 0
   217  00004E                     _y:
   218                           	opt stack 0
   219  00004E                     	ds	2
   220                           tblptru	equ	0xFF8
   221                           tblptrh	equ	0xFF7
   222                           tblptrl	equ	0xFF6
   223                           tablat	equ	0xFF5
   224                           postinc0	equ	0xFEE
   225                           wreg	equ	0xFE8
   226                           
   227                           	psect	cstackCOMRAM
   228  000029                     __pcstackCOMRAM:
   229                           	opt stack 0
   230  000029                     ??_UART_Rx:
   231                           
   232                           ; 1 bytes @ 0x0
   233  000029                     	ds	14
   234  000037                     ?___ftpack:
   235                           	opt stack 0
   236  000037                     ?___fttol:
   237                           	opt stack 0
   238  000037                     ___ftpack@arg:
   239                           	opt stack 0
   240  000037                     ___ftge@ff1:
   241                           	opt stack 0
   242  000037                     ___fttol@f1:
   243                           	opt stack 0
   244                           
   245                           ; 3 bytes @ 0xE
   246  000037                     	ds	3
   247  00003A                     ___ftpack@exp:
   248                           	opt stack 0
   249  00003A                     ___ftge@ff2:
   250                           	opt stack 0
   251                           
   252                           ; 3 bytes @ 0x11
   253  00003A                     	ds	1
   254  00003B                     ??___fttol:
   255  00003B                     ___ftpack@sign:
   256                           	opt stack 0
   257                           
   258                           ; 1 bytes @ 0x12
   259  00003B                     	ds	1
   260  00003C                     ??___ftpack:
   261                           
   262                           ; 1 bytes @ 0x13
   263  00003C                     	ds	1
   264  00003D                     ??___ftge:
   265                           
   266                           ; 1 bytes @ 0x14
   267  00003D                     	ds	2
   268  00003F                     ?___ftadd:
   269                           	opt stack 0
   270  00003F                     ?___ftmul:
   271                           	opt stack 0
   272  00003F                     ___ftadd@f1:
   273                           	opt stack 0
   274  00003F                     ___ftmul@f1:
   275                           	opt stack 0
   276                           
   277                           ; 3 bytes @ 0x16
   278  00003F                     	ds	1
   279  000040                     ___fttol@sign1:
   280                           	opt stack 0
   281                           
   282                           ; 1 bytes @ 0x17
   283  000040                     	ds	1
   284  000041                     ___fttol@lval:
   285                           	opt stack 0
   286                           
   287                           ; 4 bytes @ 0x18
   288  000041                     	ds	1
   289  000042                     ___ftadd@f2:
   290                           	opt stack 0
   291  000042                     ___ftmul@f2:
   292                           	opt stack 0
   293                           
   294                           ; 3 bytes @ 0x19
   295  000042                     	ds	3
   296  000045                     ??___ftadd:
   297  000045                     ??___ftmul:
   298  000045                     ___fttol@exp1:
   299                           	opt stack 0
   300                           
   301                           ; 1 bytes @ 0x1C
   302  000045                     	ds	3
   303  000048                     ___ftadd@sign:
   304                           	opt stack 0
   305  000048                     ___ftmul@exp:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x1F
   309  000048                     	ds	1
   310  000049                     ___ftadd@exp2:
   311                           	opt stack 0
   312  000049                     ___ftmul@f3_as_product:
   313                           	opt stack 0
   314                           
   315                           ; 3 bytes @ 0x20
   316  000049                     	ds	1
   317  00004A                     ___ftadd@exp1:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0x21
   321  00004A                     	ds	1
   322  00004B                     
   323                           ; 1 bytes @ 0x22
   324  00004B                     	ds	1
   325  00004C                     ___ftmul@cntr:
   326                           	opt stack 0
   327                           
   328                           ; 1 bytes @ 0x23
   329  00004C                     	ds	1
   330  00004D                     ___ftmul@sign:
   331                           	opt stack 0
   332                           
   333                           ; 1 bytes @ 0x24
   334  00004D                     	ds	1
   335  00004E                     tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           wreg	equ	0xFE8
   341                           
   342                           ; 1 bytes @ 0x25
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 56 in file "nexmain.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   362 ;;      Params:         0       0       0       0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0       0       0
   365 ;;      Totals:         0       0       0       0       0       0       0       0       0
   366 ;;Total ram usage:        0 bytes
   367 ;; Hardware stack levels required when called:    5
   368 ;; This function calls:
   369 ;;		_adelante
   370 ;;		_atras
   371 ;;		_derecha
   372 ;;		_freno
   373 ;;		_izquierda
   374 ;;		_pwmA1
   375 ;;		_pwmA2
   376 ;;		_pwmB1
   377 ;;		_pwmB2
   378 ;;		_settings
   379 ;; This function is called by:
   380 ;;		Startup code after reset
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           	psect	text0
   385  0001BE                     __ptext0:
   386                           	opt stack 0
   387  0001BE                     _main:
   388                           	opt stack 26
   389                           
   390                           ;nexmain.c: 57: settings();
   391                           
   392                           ;incstack = 0
   393  0001BE  EC35  F005         	call	_settings	;wreg free
   394  0001C2                     l1775:
   395                           
   396                           ;nexmain.c: 61: if (modo == 0) {
   397  0001C2  501A               	movf	_modo,w,c
   398  0001C4  101B               	iorwf	_modo+1,w,c
   399  0001C6  A4D8               	btfss	status,2,c
   400  0001C8  D003               	goto	l1779
   401                           
   402                           ;nexmain.c: 62: freno();
   403  0001CA  EC2D  F006         	call	_freno	;wreg free
   404                           
   405                           ;nexmain.c: 63: } else if (modo == 1) {
   406  0001CE  D7F9               	goto	l1775
   407  0001D0                     l1779:
   408  0001D0  041A               	decf	_modo,w,c
   409  0001D2  101B               	iorwf	_modo+1,w,c
   410  0001D4  A4D8               	btfss	status,2,c
   411  0001D6  D021               	goto	l1807
   412                           
   413                           ;nexmain.c: 64: adelante();
   414  0001D8  EC26  F006         	call	_adelante	;wreg free
   415                           
   416                           ;nexmain.c: 65: if (PWM == 1) {
   417  0001DC  0418               	decf	_PWM,w,c
   418  0001DE  1019               	iorwf	_PWM+1,w,c
   419  0001E0  A4D8               	btfss	status,2,c
   420  0001E2  D003               	goto	l1789
   421                           
   422                           ;nexmain.c: 66: pwmA1();
   423  0001E4  EC95  F005         	call	_pwmA1	;wreg free
   424  0001E8  D089               	goto	l1889
   425  0001EA                     l1789:
   426  0001EA  0E02               	movlw	2
   427  0001EC  1818               	xorwf	_PWM,w,c
   428  0001EE  1019               	iorwf	_PWM+1,w,c
   429  0001F0  A4D8               	btfss	status,2,c
   430  0001F2  D003               	goto	l1795
   431                           
   432                           ;nexmain.c: 69: pwmA2();
   433  0001F4  ECDD  F005         	call	_pwmA2	;wreg free
   434  0001F8  D081               	goto	l1889
   435  0001FA                     l1795:
   436  0001FA  0E03               	movlw	3
   437  0001FC  1818               	xorwf	_PWM,w,c
   438  0001FE  1019               	iorwf	_PWM+1,w,c
   439  000200  A4D8               	btfss	status,2,c
   440  000202  D003               	goto	l1801
   441                           
   442                           ;nexmain.c: 72: pwmB1();
   443  000204  EC6A  F005         	call	_pwmB1	;wreg free
   444  000208  D079               	goto	l1889
   445  00020A                     l1801:
   446  00020A  0E04               	movlw	4
   447  00020C  1818               	xorwf	_PWM,w,c
   448  00020E  1019               	iorwf	_PWM+1,w,c
   449  000210  A4D8               	btfss	status,2,c
   450  000212  D7D7               	goto	l1775
   451                           
   452                           ;nexmain.c: 75: pwmB2();
   453  000214  ECC0  F005         	call	_pwmB2	;wreg free
   454  000218  D071               	goto	l1889
   455  00021A                     l1807:
   456  00021A  0E02               	movlw	2
   457  00021C  181A               	xorwf	_modo,w,c
   458  00021E  101B               	iorwf	_modo+1,w,c
   459  000220  A4D8               	btfss	status,2,c
   460  000222  D021               	goto	l1835
   461                           
   462                           ;nexmain.c: 79: atras();
   463  000224  EC1F  F006         	call	_atras	;wreg free
   464                           
   465                           ;nexmain.c: 80: if (PWM == 1) {
   466  000228  0418               	decf	_PWM,w,c
   467  00022A  1019               	iorwf	_PWM+1,w,c
   468  00022C  A4D8               	btfss	status,2,c
   469  00022E  D003               	goto	l1817
   470                           
   471                           ;nexmain.c: 81: pwmA1();
   472  000230  EC95  F005         	call	_pwmA1	;wreg free
   473  000234  D063               	goto	l1889
   474  000236                     l1817:
   475  000236  0E02               	movlw	2
   476  000238  1818               	xorwf	_PWM,w,c
   477  00023A  1019               	iorwf	_PWM+1,w,c
   478  00023C  A4D8               	btfss	status,2,c
   479  00023E  D003               	goto	l1823
   480                           
   481                           ;nexmain.c: 84: pwmA2();
   482  000240  ECDD  F005         	call	_pwmA2	;wreg free
   483  000244  D05B               	goto	l1889
   484  000246                     l1823:
   485  000246  0E03               	movlw	3
   486  000248  1818               	xorwf	_PWM,w,c
   487  00024A  1019               	iorwf	_PWM+1,w,c
   488  00024C  A4D8               	btfss	status,2,c
   489  00024E  D003               	goto	l1829
   490                           
   491                           ;nexmain.c: 87: pwmB1();
   492  000250  EC6A  F005         	call	_pwmB1	;wreg free
   493  000254  D053               	goto	l1889
   494  000256                     l1829:
   495  000256  0E04               	movlw	4
   496  000258  1818               	xorwf	_PWM,w,c
   497  00025A  1019               	iorwf	_PWM+1,w,c
   498  00025C  A4D8               	btfss	status,2,c
   499  00025E  D7B1               	goto	l1775
   500                           
   501                           ;nexmain.c: 90: pwmB2();
   502  000260  ECC0  F005         	call	_pwmB2	;wreg free
   503  000264  D04B               	goto	l1889
   504  000266                     l1835:
   505  000266  0E03               	movlw	3
   506  000268  181A               	xorwf	_modo,w,c
   507  00026A  101B               	iorwf	_modo+1,w,c
   508  00026C  A4D8               	btfss	status,2,c
   509  00026E  D021               	goto	l1863
   510                           
   511                           ;nexmain.c: 94: derecha();
   512  000270  EC18  F006         	call	_derecha	;wreg free
   513                           
   514                           ;nexmain.c: 95: if (PWM == 1) {
   515  000274  0418               	decf	_PWM,w,c
   516  000276  1019               	iorwf	_PWM+1,w,c
   517  000278  A4D8               	btfss	status,2,c
   518  00027A  D003               	goto	l1845
   519                           
   520                           ;nexmain.c: 96: pwmA1();
   521  00027C  EC95  F005         	call	_pwmA1	;wreg free
   522  000280  D03D               	goto	l1889
   523  000282                     l1845:
   524  000282  0E02               	movlw	2
   525  000284  1818               	xorwf	_PWM,w,c
   526  000286  1019               	iorwf	_PWM+1,w,c
   527  000288  A4D8               	btfss	status,2,c
   528  00028A  D003               	goto	l1851
   529                           
   530                           ;nexmain.c: 99: pwmA2();
   531  00028C  ECDD  F005         	call	_pwmA2	;wreg free
   532  000290  D035               	goto	l1889
   533  000292                     l1851:
   534  000292  0E03               	movlw	3
   535  000294  1818               	xorwf	_PWM,w,c
   536  000296  1019               	iorwf	_PWM+1,w,c
   537  000298  A4D8               	btfss	status,2,c
   538  00029A  D003               	goto	l1857
   539                           
   540                           ;nexmain.c: 102: pwmB1();
   541  00029C  EC6A  F005         	call	_pwmB1	;wreg free
   542  0002A0  D02D               	goto	l1889
   543  0002A2                     l1857:
   544  0002A2  0E04               	movlw	4
   545  0002A4  1818               	xorwf	_PWM,w,c
   546  0002A6  1019               	iorwf	_PWM+1,w,c
   547  0002A8  A4D8               	btfss	status,2,c
   548  0002AA  D78B               	goto	l1775
   549                           
   550                           ;nexmain.c: 105: pwmB2();
   551  0002AC  ECC0  F005         	call	_pwmB2	;wreg free
   552  0002B0  D025               	goto	l1889
   553  0002B2                     l1863:
   554  0002B2  0E04               	movlw	4
   555  0002B4  181A               	xorwf	_modo,w,c
   556  0002B6  101B               	iorwf	_modo+1,w,c
   557  0002B8  A4D8               	btfss	status,2,c
   558  0002BA  D783               	goto	l1775
   559                           
   560                           ;nexmain.c: 109: izquierda();
   561  0002BC  EC11  F006         	call	_izquierda	;wreg free
   562                           
   563                           ;nexmain.c: 110: if (PWM == 1) {
   564  0002C0  0418               	decf	_PWM,w,c
   565  0002C2  1019               	iorwf	_PWM+1,w,c
   566  0002C4  A4D8               	btfss	status,2,c
   567  0002C6  D003               	goto	l1873
   568                           
   569                           ;nexmain.c: 111: pwmA1();
   570  0002C8  EC95  F005         	call	_pwmA1	;wreg free
   571  0002CC  D017               	goto	l1889
   572  0002CE                     l1873:
   573  0002CE  0E02               	movlw	2
   574  0002D0  1818               	xorwf	_PWM,w,c
   575  0002D2  1019               	iorwf	_PWM+1,w,c
   576  0002D4  A4D8               	btfss	status,2,c
   577  0002D6  D003               	goto	l1879
   578                           
   579                           ;nexmain.c: 114: pwmA2();
   580  0002D8  ECDD  F005         	call	_pwmA2	;wreg free
   581  0002DC  D00F               	goto	l1889
   582  0002DE                     l1879:
   583  0002DE  0E03               	movlw	3
   584  0002E0  1818               	xorwf	_PWM,w,c
   585  0002E2  1019               	iorwf	_PWM+1,w,c
   586  0002E4  A4D8               	btfss	status,2,c
   587  0002E6  D003               	goto	l1885
   588                           
   589                           ;nexmain.c: 117: pwmB1();
   590  0002E8  EC6A  F005         	call	_pwmB1	;wreg free
   591  0002EC  D007               	goto	l1889
   592  0002EE                     l1885:
   593  0002EE  0E04               	movlw	4
   594  0002F0  1818               	xorwf	_PWM,w,c
   595  0002F2  1019               	iorwf	_PWM+1,w,c
   596  0002F4  A4D8               	btfss	status,2,c
   597  0002F6  D765               	goto	l1775
   598                           
   599                           ;nexmain.c: 120: pwmB2();
   600  0002F8  ECC0  F005         	call	_pwmB2	;wreg free
   601  0002FC                     l1889:
   602                           
   603                           ;nexmain.c: 121: PWM = 0;
   604  0002FC  0E00               	movlw	0
   605  0002FE  6E19               	movwf	_PWM+1,c
   606  000300  0E00               	movlw	0
   607  000302  6E18               	movwf	_PWM,c
   608  000304  D75E               	goto	l1775
   609  000306                     __end_of_main:
   610                           	opt stack 0
   611                           tblptru	equ	0xFF8
   612                           tblptrh	equ	0xFF7
   613                           tblptrl	equ	0xFF6
   614                           tablat	equ	0xFF5
   615                           postinc0	equ	0xFEE
   616                           wreg	equ	0xFE8
   617                           status	equ	0xFD8
   618                           
   619 ;; *************** function _settings *****************
   620 ;; Defined at:
   621 ;;		line 132 in file "nexmain.c"
   622 ;; Parameters:    Size  Location     Type
   623 ;;		None
   624 ;; Auto vars:     Size  Location     Type
   625 ;;		None
   626 ;; Return value:  Size  Location     Type
   627 ;;                  1    wreg      void 
   628 ;; Registers used:
   629 ;;		wreg, status,2
   630 ;; Tracked objects:
   631 ;;		On entry : 0/0
   632 ;;		On exit  : 0/0
   633 ;;		Unchanged: 0/0
   634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   635 ;;      Params:         0       0       0       0       0       0       0       0       0
   636 ;;      Locals:         0       0       0       0       0       0       0       0       0
   637 ;;      Temps:          0       0       0       0       0       0       0       0       0
   638 ;;      Totals:         0       0       0       0       0       0       0       0       0
   639 ;;Total ram usage:        0 bytes
   640 ;; Hardware stack levels used:    1
   641 ;; Hardware stack levels required when called:    1
   642 ;; This function calls:
   643 ;;		Nothing
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           
   649                           	psect	text1
   650  000A6A                     __ptext1:
   651                           	opt stack 0
   652  000A6A                     _settings:
   653                           	opt stack 29
   654                           
   655                           ;nexmain.c: 133: OSCCON = 0x72;
   656                           
   657                           ;incstack = 0
   658  000A6A  0E72               	movlw	114
   659  000A6C  6ED3               	movwf	4051,c	;volatile
   660                           
   661                           ;nexmain.c: 135: ADCON0 = 0x01;
   662  000A6E  0E01               	movlw	1
   663  000A70  6EC2               	movwf	4034,c	;volatile
   664                           
   665                           ;nexmain.c: 136: ADCON1 = 0x0C;
   666  000A72  0E0C               	movlw	12
   667  000A74  6EC1               	movwf	4033,c	;volatile
   668                           
   669                           ;nexmain.c: 137: ADCON2 = 0x91;
   670  000A76  0E91               	movlw	145
   671  000A78  6EC0               	movwf	4032,c	;volatile
   672                           
   673                           ;nexmain.c: 139: TRISB = 0xF0;
   674  000A7A  0EF0               	movlw	240
   675  000A7C  6E93               	movwf	3987,c	;volatile
   676                           
   677                           ;nexmain.c: 140: LATB = 0xF0;
   678  000A7E  0EF0               	movlw	240
   679  000A80  6E8A               	movwf	3978,c	;volatile
   680                           
   681                           ;nexmain.c: 141: TRISA = 0x03;
   682  000A82  0E03               	movlw	3
   683  000A84  6E92               	movwf	3986,c	;volatile
   684                           
   685                           ;nexmain.c: 142: LATA = 0x03;
   686  000A86  0E03               	movlw	3
   687  000A88  6E89               	movwf	3977,c	;volatile
   688                           
   689                           ;nexmain.c: 143: TRISE = 0;
   690  000A8A  0E00               	movlw	0
   691  000A8C  6E96               	movwf	3990,c	;volatile
   692                           
   693                           ;nexmain.c: 144: LATE = 0;
   694  000A8E  0E00               	movlw	0
   695  000A90  6E8D               	movwf	3981,c	;volatile
   696                           
   697                           ;nexmain.c: 147: PR2 = 0x7C;
   698  000A92  0E7C               	movlw	124
   699  000A94  6ECB               	movwf	4043,c	;volatile
   700                           
   701                           ;nexmain.c: 148: T2CON = 0x03;
   702  000A96  0E03               	movlw	3
   703  000A98  6ECA               	movwf	4042,c	;volatile
   704                           
   705                           ;nexmain.c: 149: TRISC = 0;
   706  000A9A  0E00               	movlw	0
   707  000A9C  6E94               	movwf	3988,c	;volatile
   708                           
   709                           ;nexmain.c: 150: LATC = 0;
   710  000A9E  0E00               	movlw	0
   711  000AA0  6E8B               	movwf	3979,c	;volatile
   712                           
   713                           ;nexmain.c: 151: CCPR1L = 0x7D;
   714  000AA2  0E7D               	movlw	125
   715  000AA4  6EBE               	movwf	4030,c	;volatile
   716                           
   717                           ;nexmain.c: 152: CCP1CON = 0x0C;
   718  000AA6  0E0C               	movlw	12
   719  000AA8  6EBD               	movwf	4029,c	;volatile
   720                           
   721                           ;nexmain.c: 153: CCPR2L = 0x7D;
   722  000AAA  0E7D               	movlw	125
   723  000AAC  6EBB               	movwf	4027,c	;volatile
   724                           
   725                           ;nexmain.c: 154: CCP2CON = 0x0C;
   726  000AAE  0E0C               	movlw	12
   727  000AB0  6EBA               	movwf	4026,c	;volatile
   728                           
   729                           ;nexmain.c: 157: TRISCbits.RC7 = 1;
   730  000AB2  8E94               	bsf	3988,7,c	;volatile
   731                           
   732                           ;nexmain.c: 158: TRISCbits.RC6 = 0;
   733  000AB4  9C94               	bcf	3988,6,c	;volatile
   734                           
   735                           ;nexmain.c: 159: SPBRG = 0x0C;
   736  000AB6  0E0C               	movlw	12
   737  000AB8  6EAF               	movwf	4015,c	;volatile
   738                           
   739                           ;nexmain.c: 160: RCSTA = 0x90;
   740  000ABA  0E90               	movlw	144
   741  000ABC  6EAB               	movwf	4011,c	;volatile
   742                           
   743                           ;nexmain.c: 161: TXSTA = 0x20;
   744  000ABE  0E20               	movlw	32
   745  000AC0  6EAC               	movwf	4012,c	;volatile
   746                           
   747                           ;nexmain.c: 164: GIE = 1;
   748  000AC2  8EF2               	bsf	intcon,7,c	;volatile
   749                           
   750                           ;nexmain.c: 165: PEIE = 1;
   751  000AC4  8CF2               	bsf	intcon,6,c	;volatile
   752                           
   753                           ;nexmain.c: 166: RCIE = 1;
   754  000AC6  8A9D               	bsf	3997,5,c	;volatile
   755                           
   756                           ;nexmain.c: 167: RCIF = 0;
   757  000AC8  9A9E               	bcf	3998,5,c	;volatile
   758                           
   759                           ;nexmain.c: 170: ADCON0bits.GO = 1;
   760  000ACA  82C2               	bsf	4034,1,c	;volatile
   761                           
   762                           ;nexmain.c: 172: TMR2 = 0;
   763  000ACC  0E00               	movlw	0
   764  000ACE  6ECC               	movwf	4044,c	;volatile
   765                           
   766                           ;nexmain.c: 173: T2CONbits.TMR2ON = 1;
   767  000AD0  84CA               	bsf	4042,2,c	;volatile
   768  000AD2  0012               	return		;funcret
   769  000AD4                     __end_of_settings:
   770                           	opt stack 0
   771                           tblptru	equ	0xFF8
   772                           tblptrh	equ	0xFF7
   773                           tblptrl	equ	0xFF6
   774                           tablat	equ	0xFF5
   775                           intcon	equ	0xFF2
   776                           postinc0	equ	0xFEE
   777                           wreg	equ	0xFE8
   778                           status	equ	0xFD8
   779                           
   780 ;; *************** function _pwmB2 *****************
   781 ;; Defined at:
   782 ;;		line 345 in file "nexmain.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, status,2, status,0, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : 0/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   796 ;;      Params:         0       0       0       0       0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels used:    1
   802 ;; Hardware stack levels required when called:    3
   803 ;; This function calls:
   804 ;;		___ftadd
   805 ;; This function is called by:
   806 ;;		_main
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text2
   811  000B80                     __ptext2:
   812                           	opt stack 0
   813  000B80                     _pwmB2:
   814                           	opt stack 27
   815                           
   816                           ;nexmain.c: 346: duty_cicle2 = duty_cicle2 - 102.3;
   817                           
   818                           ;incstack = 0
   819  000B80  C023  F03F         	movff	_duty_cicle2,___ftadd@f1
   820  000B84  C024  F040         	movff	_duty_cicle2+1,___ftadd@f1+1
   821  000B88  C025  F041         	movff	_duty_cicle2+2,___ftadd@f1+2
   822  000B8C  0E9A               	movlw	154
   823  000B8E  6E42               	movwf	___ftadd@f2,c
   824  000B90  0ECC               	movlw	204
   825  000B92  6E43               	movwf	___ftadd@f2+1,c
   826  000B94  0EC2               	movlw	194
   827  000B96  6E44               	movwf	___ftadd@f2+2,c
   828  000B98  EC09  F000         	call	___ftadd	;wreg free
   829  000B9C  C03F  F023         	movff	?___ftadd,_duty_cicle2
   830  000BA0  C040  F024         	movff	?___ftadd+1,_duty_cicle2+1
   831  000BA4  C041  F025         	movff	?___ftadd+2,_duty_cicle2+2
   832                           
   833                           ;nexmain.c: 347: if (duty_cicle2 < 0) {
   834  000BA8  AE25               	btfss	_duty_cicle2+2,7,c
   835  000BAA  0012               	return	
   836                           
   837                           ;nexmain.c: 348: duty_cicle2 = 0;
   838  000BAC  0E00               	movlw	0
   839  000BAE  6E23               	movwf	_duty_cicle2,c
   840  000BB0  0E00               	movlw	0
   841  000BB2  6E24               	movwf	_duty_cicle2+1,c
   842  000BB4  0E00               	movlw	0
   843  000BB6  6E25               	movwf	_duty_cicle2+2,c
   844  000BB8  0012               	return	
   845  000BBA                     __end_of_pwmB2:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           tblptrh	equ	0xFF7
   849                           tblptrl	equ	0xFF6
   850                           tablat	equ	0xFF5
   851                           intcon	equ	0xFF2
   852                           postinc0	equ	0xFEE
   853                           wreg	equ	0xFE8
   854                           status	equ	0xFD8
   855                           
   856 ;; *************** function _pwmB1 *****************
   857 ;; Defined at:
   858 ;;		line 338 in file "nexmain.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   872 ;;      Params:         0       0       0       0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0
   875 ;;      Totals:         0       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    3
   879 ;; This function calls:
   880 ;;		___ftadd
   881 ;;		___ftge
   882 ;; This function is called by:
   883 ;;		_main
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text3
   888  000AD4                     __ptext3:
   889                           	opt stack 0
   890  000AD4                     _pwmB1:
   891                           	opt stack 27
   892                           
   893                           ;nexmain.c: 339: duty_cicle2 = duty_cicle2 + 102.3;
   894                           
   895                           ;incstack = 0
   896  000AD4  C023  F03F         	movff	_duty_cicle2,___ftadd@f1
   897  000AD8  C024  F040         	movff	_duty_cicle2+1,___ftadd@f1+1
   898  000ADC  C025  F041         	movff	_duty_cicle2+2,___ftadd@f1+2
   899  000AE0  0E9A               	movlw	154
   900  000AE2  6E42               	movwf	___ftadd@f2,c
   901  000AE4  0ECC               	movlw	204
   902  000AE6  6E43               	movwf	___ftadd@f2+1,c
   903  000AE8  0E42               	movlw	66
   904  000AEA  6E44               	movwf	___ftadd@f2+2,c
   905  000AEC  EC09  F000         	call	___ftadd	;wreg free
   906  000AF0  C03F  F023         	movff	?___ftadd,_duty_cicle2
   907  000AF4  C040  F024         	movff	?___ftadd+1,_duty_cicle2+1
   908  000AF8  C041  F025         	movff	?___ftadd+2,_duty_cicle2+2
   909                           
   910                           ;nexmain.c: 340: if (duty_cicle2 > 1023.0) {
   911  000AFC  0EC0               	movlw	192
   912  000AFE  6E37               	movwf	___ftge@ff1,c
   913  000B00  0E7F               	movlw	127
   914  000B02  6E38               	movwf	___ftge@ff1+1,c
   915  000B04  0E44               	movlw	68
   916  000B06  6E39               	movwf	___ftge@ff1+2,c
   917  000B08  C023  F03A         	movff	_duty_cicle2,___ftge@ff2
   918  000B0C  C024  F03B         	movff	_duty_cicle2+1,___ftge@ff2+1
   919  000B10  C025  F03C         	movff	_duty_cicle2+2,___ftge@ff2+2
   920  000B14  ECED  F004         	call	___ftge	;wreg free
   921  000B18  B0D8               	btfsc	status,0,c
   922  000B1A  0012               	return	
   923                           
   924                           ;nexmain.c: 341: duty_cicle2 = 1023.0;
   925  000B1C  0EC0               	movlw	192
   926  000B1E  6E23               	movwf	_duty_cicle2,c
   927  000B20  0E7F               	movlw	127
   928  000B22  6E24               	movwf	_duty_cicle2+1,c
   929  000B24  0E44               	movlw	68
   930  000B26  6E25               	movwf	_duty_cicle2+2,c
   931  000B28  0012               	return	
   932  000B2A                     __end_of_pwmB1:
   933                           	opt stack 0
   934                           tblptru	equ	0xFF8
   935                           tblptrh	equ	0xFF7
   936                           tblptrl	equ	0xFF6
   937                           tablat	equ	0xFF5
   938                           intcon	equ	0xFF2
   939                           postinc0	equ	0xFEE
   940                           wreg	equ	0xFE8
   941                           status	equ	0xFD8
   942                           
   943 ;; *************** function _pwmA2 *****************
   944 ;; Defined at:
   945 ;;		line 331 in file "nexmain.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   959 ;;      Params:         0       0       0       0       0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0       0       0
   962 ;;      Totals:         0       0       0       0       0       0       0       0       0
   963 ;;Total ram usage:        0 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; Hardware stack levels required when called:    3
   966 ;; This function calls:
   967 ;;		___ftadd
   968 ;; This function is called by:
   969 ;;		_main
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           	psect	text4
   974  000BBA                     __ptext4:
   975                           	opt stack 0
   976  000BBA                     _pwmA2:
   977                           	opt stack 27
   978                           
   979                           ;nexmain.c: 332: duty_cicle1 = duty_cicle1 - 102.3;
   980                           
   981                           ;incstack = 0
   982  000BBA  C026  F03F         	movff	_duty_cicle1,___ftadd@f1
   983  000BBE  C027  F040         	movff	_duty_cicle1+1,___ftadd@f1+1
   984  000BC2  C028  F041         	movff	_duty_cicle1+2,___ftadd@f1+2
   985  000BC6  0E9A               	movlw	154
   986  000BC8  6E42               	movwf	___ftadd@f2,c
   987  000BCA  0ECC               	movlw	204
   988  000BCC  6E43               	movwf	___ftadd@f2+1,c
   989  000BCE  0EC2               	movlw	194
   990  000BD0  6E44               	movwf	___ftadd@f2+2,c
   991  000BD2  EC09  F000         	call	___ftadd	;wreg free
   992  000BD6  C03F  F026         	movff	?___ftadd,_duty_cicle1
   993  000BDA  C040  F027         	movff	?___ftadd+1,_duty_cicle1+1
   994  000BDE  C041  F028         	movff	?___ftadd+2,_duty_cicle1+2
   995                           
   996                           ;nexmain.c: 333: if (duty_cicle1 < 0) {
   997  000BE2  AE28               	btfss	_duty_cicle1+2,7,c
   998  000BE4  0012               	return	
   999                           
  1000                           ;nexmain.c: 334: duty_cicle1 = 0;
  1001  000BE6  0E00               	movlw	0
  1002  000BE8  6E26               	movwf	_duty_cicle1,c
  1003  000BEA  0E00               	movlw	0
  1004  000BEC  6E27               	movwf	_duty_cicle1+1,c
  1005  000BEE  0E00               	movlw	0
  1006  000BF0  6E28               	movwf	_duty_cicle1+2,c
  1007  000BF2  0012               	return	
  1008  000BF4                     __end_of_pwmA2:
  1009                           	opt stack 0
  1010                           tblptru	equ	0xFF8
  1011                           tblptrh	equ	0xFF7
  1012                           tblptrl	equ	0xFF6
  1013                           tablat	equ	0xFF5
  1014                           intcon	equ	0xFF2
  1015                           postinc0	equ	0xFEE
  1016                           wreg	equ	0xFE8
  1017                           status	equ	0xFD8
  1018                           
  1019 ;; *************** function _pwmA1 *****************
  1020 ;; Defined at:
  1021 ;;		line 324 in file "nexmain.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;		None
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;		None
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1035 ;;      Params:         0       0       0       0       0       0       0       0       0
  1036 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1038 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1039 ;;Total ram usage:        0 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    3
  1042 ;; This function calls:
  1043 ;;		___ftadd
  1044 ;;		___ftge
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text5
  1051  000B2A                     __ptext5:
  1052                           	opt stack 0
  1053  000B2A                     _pwmA1:
  1054                           	opt stack 27
  1055                           
  1056                           ;nexmain.c: 325: duty_cicle1 = duty_cicle1 + 102.3;
  1057                           
  1058                           ;incstack = 0
  1059  000B2A  C026  F03F         	movff	_duty_cicle1,___ftadd@f1
  1060  000B2E  C027  F040         	movff	_duty_cicle1+1,___ftadd@f1+1
  1061  000B32  C028  F041         	movff	_duty_cicle1+2,___ftadd@f1+2
  1062  000B36  0E9A               	movlw	154
  1063  000B38  6E42               	movwf	___ftadd@f2,c
  1064  000B3A  0ECC               	movlw	204
  1065  000B3C  6E43               	movwf	___ftadd@f2+1,c
  1066  000B3E  0E42               	movlw	66
  1067  000B40  6E44               	movwf	___ftadd@f2+2,c
  1068  000B42  EC09  F000         	call	___ftadd	;wreg free
  1069  000B46  C03F  F026         	movff	?___ftadd,_duty_cicle1
  1070  000B4A  C040  F027         	movff	?___ftadd+1,_duty_cicle1+1
  1071  000B4E  C041  F028         	movff	?___ftadd+2,_duty_cicle1+2
  1072                           
  1073                           ;nexmain.c: 326: if (duty_cicle1 > 1023.0) {
  1074  000B52  0EC0               	movlw	192
  1075  000B54  6E37               	movwf	___ftge@ff1,c
  1076  000B56  0E7F               	movlw	127
  1077  000B58  6E38               	movwf	___ftge@ff1+1,c
  1078  000B5A  0E44               	movlw	68
  1079  000B5C  6E39               	movwf	___ftge@ff1+2,c
  1080  000B5E  C026  F03A         	movff	_duty_cicle1,___ftge@ff2
  1081  000B62  C027  F03B         	movff	_duty_cicle1+1,___ftge@ff2+1
  1082  000B66  C028  F03C         	movff	_duty_cicle1+2,___ftge@ff2+2
  1083  000B6A  ECED  F004         	call	___ftge	;wreg free
  1084  000B6E  B0D8               	btfsc	status,0,c
  1085  000B70  0012               	return	
  1086                           
  1087                           ;nexmain.c: 327: duty_cicle1 = 1023.0;
  1088  000B72  0EC0               	movlw	192
  1089  000B74  6E26               	movwf	_duty_cicle1,c
  1090  000B76  0E7F               	movlw	127
  1091  000B78  6E27               	movwf	_duty_cicle1+1,c
  1092  000B7A  0E44               	movlw	68
  1093  000B7C  6E28               	movwf	_duty_cicle1+2,c
  1094  000B7E  0012               	return	
  1095  000B80                     __end_of_pwmA1:
  1096                           	opt stack 0
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           intcon	equ	0xFF2
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           status	equ	0xFD8
  1105                           
  1106 ;; *************** function ___ftadd *****************
  1107 ;; Defined at:
  1108 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  1109 ;; Parameters:    Size  Location     Type
  1110 ;;  f1              3   22[COMRAM] float 
  1111 ;;  f2              3   25[COMRAM] float 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  exp1            1   33[COMRAM] unsigned char 
  1114 ;;  exp2            1   32[COMRAM] unsigned char 
  1115 ;;  sign            1   31[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  3   22[COMRAM] float 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1125 ;;      Params:         6       0       0       0       0       0       0       0       0
  1126 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1127 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1128 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:       12 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    2
  1132 ;; This function calls:
  1133 ;;		___ftpack
  1134 ;; This function is called by:
  1135 ;;		_pwmA1
  1136 ;;		_pwmA2
  1137 ;;		_pwmB1
  1138 ;;		_pwmB2
  1139 ;;		_start
  1140 ;;		_start1
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text6
  1145  000012                     __ptext6:
  1146                           	opt stack 0
  1147  000012                     ___ftadd:
  1148                           	opt stack 27
  1149                           
  1150                           ;incstack = 0
  1151  000012  C041  F045         	movff	___ftadd@f1+2,??___ftadd
  1152  000016  6A46               	clrf	(??___ftadd+1)& (0+255),c
  1153  000018  6A47               	clrf	(??___ftadd+2)& (0+255),c
  1154  00001A  3440               	rlcf	___ftadd@f1+1,w,c
  1155  00001C  3645               	rlcf	??___ftadd& (0+255),f,c
  1156  00001E  E301               	bnc	u1171
  1157  000020  8046               	bsf	(??___ftadd+1)& (0+255),0,c
  1158  000022                     u1171:
  1159  000022  5045               	movf	??___ftadd,w,c
  1160  000024  6E4A               	movwf	___ftadd@exp1,c
  1161  000026  C044  F045         	movff	___ftadd@f2+2,??___ftadd
  1162  00002A  6A46               	clrf	(??___ftadd+1)& (0+255),c
  1163  00002C  6A47               	clrf	(??___ftadd+2)& (0+255),c
  1164  00002E  3443               	rlcf	___ftadd@f2+1,w,c
  1165  000030  3645               	rlcf	??___ftadd& (0+255),f,c
  1166  000032  E301               	bnc	u1181
  1167  000034  8046               	bsf	(??___ftadd+1)& (0+255),0,c
  1168  000036                     u1181:
  1169  000036  5045               	movf	??___ftadd,w,c
  1170  000038  6E49               	movwf	___ftadd@exp2,c
  1171  00003A  504A               	movf	___ftadd@exp1,w,c
  1172  00003C  B4D8               	btfsc	status,2,c
  1173  00003E  D00B               	goto	l511
  1174  000040  5049               	movf	___ftadd@exp2,w,c
  1175  000042  5C4A               	subwf	___ftadd@exp1,w,c
  1176  000044  B0D8               	btfsc	status,0,c
  1177  000046  D00E               	goto	l1651
  1178  000048  504A               	movf	___ftadd@exp1,w,c
  1179  00004A  0800               	sublw	0
  1180  00004C  2449               	addwf	___ftadd@exp2,w,c
  1181  00004E  6E45               	movwf	??___ftadd& (0+255),c
  1182  000050  0E18               	movlw	24
  1183  000052  6445               	cpfsgt	??___ftadd,c
  1184  000054  D007               	goto	l1651
  1185  000056                     l511:
  1186  000056  C042  F03F         	movff	___ftadd@f2,?___ftadd
  1187  00005A  C043  F040         	movff	___ftadd@f2+1,?___ftadd+1
  1188  00005E  C044  F041         	movff	___ftadd@f2+2,?___ftadd+2
  1189  000062  0012               	return	
  1190  000064                     l1651:
  1191  000064  5049               	movf	___ftadd@exp2,w,c
  1192  000066  B4D8               	btfsc	status,2,c
  1193  000068  D00B               	goto	l515
  1194  00006A  504A               	movf	___ftadd@exp1,w,c
  1195  00006C  5C49               	subwf	___ftadd@exp2,w,c
  1196  00006E  B0D8               	btfsc	status,0,c
  1197  000070  D00E               	goto	l1657
  1198  000072  5049               	movf	___ftadd@exp2,w,c
  1199  000074  0800               	sublw	0
  1200  000076  244A               	addwf	___ftadd@exp1,w,c
  1201  000078  6E45               	movwf	??___ftadd& (0+255),c
  1202  00007A  0E18               	movlw	24
  1203  00007C  6445               	cpfsgt	??___ftadd,c
  1204  00007E  D007               	goto	l1657
  1205  000080                     l515:
  1206  000080  C03F  F03F         	movff	___ftadd@f1,?___ftadd
  1207  000084  C040  F040         	movff	___ftadd@f1+1,?___ftadd+1
  1208  000088  C041  F041         	movff	___ftadd@f1+2,?___ftadd+2
  1209  00008C  0012               	return	
  1210  00008E                     l1657:
  1211  00008E  0E06               	movlw	6
  1212  000090  6E48               	movwf	___ftadd@sign,c
  1213  000092  BE41               	btfsc	___ftadd@f1+2,7,c
  1214  000094  8E48               	bsf	___ftadd@sign,7,c
  1215  000096  BE44               	btfsc	___ftadd@f2+2,7,c
  1216  000098  8C48               	bsf	___ftadd@sign,6,c
  1217  00009A  8E40               	bsf	___ftadd@f1+1,7,c
  1218  00009C  0EFF               	movlw	255
  1219  00009E  163F               	andwf	___ftadd@f1,f,c
  1220  0000A0  0EFF               	movlw	255
  1221  0000A2  1640               	andwf	___ftadd@f1+1,f,c
  1222  0000A4  0E00               	movlw	0
  1223  0000A6  1641               	andwf	___ftadd@f1+2,f,c
  1224  0000A8  8E43               	bsf	___ftadd@f2+1,7,c
  1225  0000AA  0EFF               	movlw	255
  1226  0000AC  1642               	andwf	___ftadd@f2,f,c
  1227  0000AE  0EFF               	movlw	255
  1228  0000B0  1643               	andwf	___ftadd@f2+1,f,c
  1229  0000B2  0E00               	movlw	0
  1230  0000B4  1644               	andwf	___ftadd@f2+2,f,c
  1231  0000B6  5049               	movf	___ftadd@exp2,w,c
  1232  0000B8  5C4A               	subwf	___ftadd@exp1,w,c
  1233  0000BA  B0D8               	btfsc	status,0,c
  1234  0000BC  D01B               	goto	l1683
  1235  0000BE                     l1673:
  1236  0000BE  90D8               	bcf	status,0,c
  1237  0000C0  3642               	rlcf	___ftadd@f2,f,c
  1238  0000C2  3643               	rlcf	___ftadd@f2+1,f,c
  1239  0000C4  3644               	rlcf	___ftadd@f2+2,f,c
  1240  0000C6  0649               	decf	___ftadd@exp2,f,c
  1241  0000C8  504A               	movf	___ftadd@exp1,w,c
  1242  0000CA  1849               	xorwf	___ftadd@exp2,w,c
  1243  0000CC  B4D8               	btfsc	status,2,c
  1244  0000CE  D00D               	goto	l1681
  1245  0000D0  0648               	decf	___ftadd@sign,f,c
  1246  0000D2  C048  F045         	movff	___ftadd@sign,??___ftadd
  1247  0000D6  0E07               	movlw	7
  1248  0000D8  1645               	andwf	??___ftadd,f,c
  1249  0000DA  B4D8               	btfsc	status,2,c
  1250  0000DC  D006               	goto	l1681
  1251  0000DE  D7EF               	goto	l1673
  1252  0000E0                     l1679:
  1253  0000E0  90D8               	bcf	status,0,c
  1254  0000E2  3241               	rrcf	___ftadd@f1+2,f,c
  1255  0000E4  3240               	rrcf	___ftadd@f1+1,f,c
  1256  0000E6  323F               	rrcf	___ftadd@f1,f,c
  1257  0000E8  2A4A               	incf	___ftadd@exp1,f,c
  1258  0000EA                     l1681:
  1259  0000EA  5049               	movf	___ftadd@exp2,w,c
  1260  0000EC  184A               	xorwf	___ftadd@exp1,w,c
  1261  0000EE  B4D8               	btfsc	status,2,c
  1262  0000F0  D01F               	goto	l526
  1263  0000F2  D7F6               	goto	l1679
  1264  0000F4                     l1683:
  1265  0000F4  504A               	movf	___ftadd@exp1,w,c
  1266  0000F6  5C49               	subwf	___ftadd@exp2,w,c
  1267  0000F8  B0D8               	btfsc	status,0,c
  1268  0000FA  D01A               	goto	l526
  1269  0000FC                     l1685:
  1270  0000FC  90D8               	bcf	status,0,c
  1271  0000FE  363F               	rlcf	___ftadd@f1,f,c
  1272  000100  3640               	rlcf	___ftadd@f1+1,f,c
  1273  000102  3641               	rlcf	___ftadd@f1+2,f,c
  1274  000104  064A               	decf	___ftadd@exp1,f,c
  1275  000106  504A               	movf	___ftadd@exp1,w,c
  1276  000108  1849               	xorwf	___ftadd@exp2,w,c
  1277  00010A  B4D8               	btfsc	status,2,c
  1278  00010C  D00D               	goto	l1693
  1279  00010E  0648               	decf	___ftadd@sign,f,c
  1280  000110  C048  F045         	movff	___ftadd@sign,??___ftadd
  1281  000114  0E07               	movlw	7
  1282  000116  1645               	andwf	??___ftadd,f,c
  1283  000118  B4D8               	btfsc	status,2,c
  1284  00011A  D006               	goto	l1693
  1285  00011C  D7EF               	goto	l1685
  1286  00011E                     l1691:
  1287  00011E  90D8               	bcf	status,0,c
  1288  000120  3244               	rrcf	___ftadd@f2+2,f,c
  1289  000122  3243               	rrcf	___ftadd@f2+1,f,c
  1290  000124  3242               	rrcf	___ftadd@f2,f,c
  1291  000126  2A49               	incf	___ftadd@exp2,f,c
  1292  000128                     l1693:
  1293  000128  5049               	movf	___ftadd@exp2,w,c
  1294  00012A  184A               	xorwf	___ftadd@exp1,w,c
  1295  00012C  A4D8               	btfss	status,2,c
  1296  00012E  D7F7               	goto	l1691
  1297  000130                     l526:
  1298  000130  AE48               	btfss	___ftadd@sign,7,c
  1299  000132  D00C               	goto	l535
  1300  000134  0EFF               	movlw	255
  1301  000136  1A3F               	xorwf	___ftadd@f1,f,c
  1302  000138  0EFF               	movlw	255
  1303  00013A  1A40               	xorwf	___ftadd@f1+1,f,c
  1304  00013C  0EFF               	movlw	255
  1305  00013E  1A41               	xorwf	___ftadd@f1+2,f,c
  1306  000140  0E01               	movlw	1
  1307  000142  263F               	addwf	___ftadd@f1,f,c
  1308  000144  0E00               	movlw	0
  1309  000146  2240               	addwfc	___ftadd@f1+1,f,c
  1310  000148  0E00               	movlw	0
  1311  00014A  2241               	addwfc	___ftadd@f1+2,f,c
  1312  00014C                     l535:
  1313  00014C  AC48               	btfss	___ftadd@sign,6,c
  1314  00014E  D00C               	goto	l1699
  1315  000150  0EFF               	movlw	255
  1316  000152  1A42               	xorwf	___ftadd@f2,f,c
  1317  000154  0EFF               	movlw	255
  1318  000156  1A43               	xorwf	___ftadd@f2+1,f,c
  1319  000158  0EFF               	movlw	255
  1320  00015A  1A44               	xorwf	___ftadd@f2+2,f,c
  1321  00015C  0E01               	movlw	1
  1322  00015E  2642               	addwf	___ftadd@f2,f,c
  1323  000160  0E00               	movlw	0
  1324  000162  2243               	addwfc	___ftadd@f2+1,f,c
  1325  000164  0E00               	movlw	0
  1326  000166  2244               	addwfc	___ftadd@f2+2,f,c
  1327  000168                     l1699:
  1328  000168  0E00               	movlw	0
  1329  00016A  6E48               	movwf	___ftadd@sign,c
  1330  00016C  503F               	movf	___ftadd@f1,w,c
  1331  00016E  2642               	addwf	___ftadd@f2,f,c
  1332  000170  5040               	movf	___ftadd@f1+1,w,c
  1333  000172  2243               	addwfc	___ftadd@f2+1,f,c
  1334  000174  5041               	movf	___ftadd@f1+2,w,c
  1335  000176  2244               	addwfc	___ftadd@f2+2,f,c
  1336  000178  AE44               	btfss	___ftadd@f2+2,7,c
  1337  00017A  D00E               	goto	l1709
  1338  00017C  0EFF               	movlw	255
  1339  00017E  1A42               	xorwf	___ftadd@f2,f,c
  1340  000180  0EFF               	movlw	255
  1341  000182  1A43               	xorwf	___ftadd@f2+1,f,c
  1342  000184  0EFF               	movlw	255
  1343  000186  1A44               	xorwf	___ftadd@f2+2,f,c
  1344  000188  0E01               	movlw	1
  1345  00018A  2642               	addwf	___ftadd@f2,f,c
  1346  00018C  0E00               	movlw	0
  1347  00018E  2243               	addwfc	___ftadd@f2+1,f,c
  1348  000190  0E00               	movlw	0
  1349  000192  2244               	addwfc	___ftadd@f2+2,f,c
  1350  000194  0E01               	movlw	1
  1351  000196  6E48               	movwf	___ftadd@sign,c
  1352  000198                     l1709:
  1353  000198  C042  F037         	movff	___ftadd@f2,___ftpack@arg
  1354  00019C  C043  F038         	movff	___ftadd@f2+1,___ftpack@arg+1
  1355  0001A0  C044  F039         	movff	___ftadd@f2+2,___ftpack@arg+2
  1356  0001A4  C04A  F03A         	movff	___ftadd@exp1,___ftpack@exp
  1357  0001A8  C048  F03B         	movff	___ftadd@sign,___ftpack@sign
  1358  0001AC  EC96  F004         	call	___ftpack	;wreg free
  1359  0001B0  C037  F03F         	movff	?___ftpack,?___ftadd
  1360  0001B4  C038  F040         	movff	?___ftpack+1,?___ftadd+1
  1361  0001B8  C039  F041         	movff	?___ftpack+2,?___ftadd+2
  1362  0001BC  0012               	return	
  1363  0001BE                     __end_of___ftadd:
  1364                           	opt stack 0
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           intcon	equ	0xFF2
  1370                           postinc0	equ	0xFEE
  1371                           wreg	equ	0xFE8
  1372                           status	equ	0xFD8
  1373                           
  1374 ;; *************** function _izquierda *****************
  1375 ;; Defined at:
  1376 ;;		line 253 in file "nexmain.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, status,2, status,0, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1390 ;;      Params:         0       0       0       0       0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1393 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1394 ;;Total ram usage:        0 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    4
  1397 ;; This function calls:
  1398 ;;		_pwmI
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           	psect	text7
  1405  000C22                     __ptext7:
  1406                           	opt stack 0
  1407  000C22                     _izquierda:
  1408                           	opt stack 26
  1409                           
  1410                           ;nexmain.c: 254: pwmI();
  1411                           
  1412                           ;incstack = 0
  1413  000C22  EC83  F001         	call	_pwmI	;wreg free
  1414                           
  1415                           ;nexmain.c: 255: LATB0 = 1;
  1416  000C26  808A               	bsf	3978,0,c	;volatile
  1417                           
  1418                           ;nexmain.c: 256: LATB1 = 0;
  1419  000C28  928A               	bcf	3978,1,c	;volatile
  1420                           
  1421                           ;nexmain.c: 257: LATB2 = 1;
  1422  000C2A  848A               	bsf	3978,2,c	;volatile
  1423                           
  1424                           ;nexmain.c: 258: LATB3 = 0;
  1425  000C2C  968A               	bcf	3978,3,c	;volatile
  1426  000C2E  0012               	return		;funcret
  1427  000C30                     __end_of_izquierda:
  1428                           	opt stack 0
  1429                           tblptru	equ	0xFF8
  1430                           tblptrh	equ	0xFF7
  1431                           tblptrl	equ	0xFF6
  1432                           tablat	equ	0xFF5
  1433                           intcon	equ	0xFF2
  1434                           postinc0	equ	0xFEE
  1435                           wreg	equ	0xFE8
  1436                           status	equ	0xFD8
  1437                           
  1438 ;; *************** function _pwmI *****************
  1439 ;; Defined at:
  1440 ;;		line 288 in file "nexmain.c"
  1441 ;; Parameters:    Size  Location     Type
  1442 ;;		None
  1443 ;; Auto vars:     Size  Location     Type
  1444 ;;		None
  1445 ;; Return value:  Size  Location     Type
  1446 ;;                  1    wreg      void 
  1447 ;; Registers used:
  1448 ;;		wreg, status,2, status,0, cstack
  1449 ;; Tracked objects:
  1450 ;;		On entry : 0/0
  1451 ;;		On exit  : 0/0
  1452 ;;		Unchanged: 0/0
  1453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1454 ;;      Params:         0       0       0       0       0       0       0       0       0
  1455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1457 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1458 ;;Total ram usage:        0 bytes
  1459 ;; Hardware stack levels used:    1
  1460 ;; Hardware stack levels required when called:    3
  1461 ;; This function calls:
  1462 ;;		___ftge
  1463 ;;		___ftmul
  1464 ;;		___fttol
  1465 ;; This function is called by:
  1466 ;;		_izquierda
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           	psect	text8
  1471  000306                     __ptext8:
  1472                           	opt stack 0
  1473  000306                     _pwmI:
  1474                           	opt stack 26
  1475                           
  1476                           ;nexmain.c: 289: if (y == 2) {
  1477                           
  1478                           ;incstack = 0
  1479  000306  0E02               	movlw	2
  1480  000308  184E               	xorwf	_y,w,c
  1481  00030A  104F               	iorwf	_y+1,w,c
  1482  00030C  A4D8               	btfss	status,2,c
  1483  00030E  D014               	goto	l1629
  1484                           
  1485                           ;nexmain.c: 290: duty_cicle1 = 511.5;
  1486  000310  0EC0               	movlw	192
  1487  000312  6E26               	movwf	_duty_cicle1,c
  1488  000314  0EFF               	movlw	255
  1489  000316  6E27               	movwf	_duty_cicle1+1,c
  1490  000318  0E43               	movlw	67
  1491  00031A  6E28               	movwf	_duty_cicle1+2,c
  1492                           
  1493                           ;nexmain.c: 291: duty_cicle2 = 1023.0;
  1494  00031C  0EC0               	movlw	192
  1495  00031E  6E23               	movwf	_duty_cicle2,c
  1496  000320  0E7F               	movlw	127
  1497  000322  6E24               	movwf	_duty_cicle2+1,c
  1498  000324  0E44               	movlw	68
  1499  000326  6E25               	movwf	_duty_cicle2+2,c
  1500                           
  1501                           ;nexmain.c: 292: y = 1;
  1502  000328  0E00               	movlw	0
  1503  00032A  6E4F               	movwf	_y+1,c
  1504  00032C  0E01               	movlw	1
  1505  00032E  6E4E               	movwf	_y,c
  1506                           
  1507                           ;nexmain.c: 293: y = 3;
  1508  000330  0E00               	movlw	0
  1509  000332  6E4F               	movwf	_y+1,c
  1510  000334  0E03               	movlw	3
  1511  000336  6E4E               	movwf	_y,c
  1512  000338                     l1629:
  1513                           
  1514                           ;nexmain.c: 294: }
  1515                           ;nexmain.c: 295: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  1516  000338  C026  F03F         	movff	_duty_cicle1,___ftmul@f1
  1517  00033C  C027  F040         	movff	_duty_cicle1+1,___ftmul@f1+1
  1518  000340  C028  F041         	movff	_duty_cicle1+2,___ftmul@f1+2
  1519  000344  0E3F               	movlw	63
  1520  000346  6E42               	movwf	___ftmul@f2,c
  1521  000348  0EFA               	movlw	250
  1522  00034A  6E43               	movwf	___ftmul@f2+1,c
  1523  00034C  0E3E               	movlw	62
  1524  00034E  6E44               	movwf	___ftmul@f2+2,c
  1525  000350  ECB3  F003         	call	___ftmul	;wreg free
  1526  000354  C03F  F013         	movff	?___ftmul,_conversion1
  1527  000358  C040  F014         	movff	?___ftmul+1,_conversion1+1
  1528  00035C  C041  F015         	movff	?___ftmul+2,_conversion1+2
  1529                           
  1530                           ;nexmain.c: 296: CCPR1L = (int) conversion1 >> 2;
  1531  000360  C013  F037         	movff	_conversion1,___fttol@f1
  1532  000364  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  1533  000368  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  1534  00036C  EC39  F003         	call	___fttol	;wreg free
  1535  000370  3438               	rlcf	?___fttol+1,w,c
  1536  000372  3238               	rrcf	?___fttol+1,f,c
  1537  000374  3237               	rrcf	?___fttol,f,c
  1538  000376  3438               	rlcf	?___fttol+1,w,c
  1539  000378  3238               	rrcf	?___fttol+1,f,c
  1540  00037A  3237               	rrcf	?___fttol,f,c
  1541  00037C  5037               	movf	?___fttol,w,c
  1542  00037E  6EBE               	movwf	4030,c	;volatile
  1543                           
  1544                           ;nexmain.c: 297: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  1545  000380  C013  F037         	movff	_conversion1,___fttol@f1
  1546  000384  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  1547  000388  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  1548  00038C  EC39  F003         	call	___fttol	;wreg free
  1549  000390  0E03               	movlw	3
  1550  000392  1637               	andwf	?___fttol,f,c
  1551  000394  3A37               	swapf	?___fttol,f,c
  1552  000396  0EF0               	movlw	240
  1553  000398  1637               	andwf	?___fttol,f,c
  1554  00039A  50BD               	movf	4029,w,c	;volatile
  1555  00039C  0B0F               	andlw	15
  1556  00039E  1037               	iorwf	?___fttol,w,c
  1557  0003A0  6EBD               	movwf	4029,c	;volatile
  1558                           
  1559                           ;nexmain.c: 298: conversion2 = (float) duty_cicle2 * (500.0 / 1023.0);
  1560  0003A2  C023  F03F         	movff	_duty_cicle2,___ftmul@f1
  1561  0003A6  C024  F040         	movff	_duty_cicle2+1,___ftmul@f1+1
  1562  0003AA  C025  F041         	movff	_duty_cicle2+2,___ftmul@f1+2
  1563  0003AE  0E3F               	movlw	63
  1564  0003B0  6E42               	movwf	___ftmul@f2,c
  1565  0003B2  0EFA               	movlw	250
  1566  0003B4  6E43               	movwf	___ftmul@f2+1,c
  1567  0003B6  0E3E               	movlw	62
  1568  0003B8  6E44               	movwf	___ftmul@f2+2,c
  1569  0003BA  ECB3  F003         	call	___ftmul	;wreg free
  1570  0003BE  C03F  F010         	movff	?___ftmul,_conversion2
  1571  0003C2  C040  F011         	movff	?___ftmul+1,_conversion2+1
  1572  0003C6  C041  F012         	movff	?___ftmul+2,_conversion2+2
  1573                           
  1574                           ;nexmain.c: 299: CCPR2L = (int) conversion2 >> 2;
  1575  0003CA  C010  F037         	movff	_conversion2,___fttol@f1
  1576  0003CE  C011  F038         	movff	_conversion2+1,___fttol@f1+1
  1577  0003D2  C012  F039         	movff	_conversion2+2,___fttol@f1+2
  1578  0003D6  EC39  F003         	call	___fttol	;wreg free
  1579  0003DA  3438               	rlcf	?___fttol+1,w,c
  1580  0003DC  3238               	rrcf	?___fttol+1,f,c
  1581  0003DE  3237               	rrcf	?___fttol,f,c
  1582  0003E0  3438               	rlcf	?___fttol+1,w,c
  1583  0003E2  3238               	rrcf	?___fttol+1,f,c
  1584  0003E4  3237               	rrcf	?___fttol,f,c
  1585  0003E6  5037               	movf	?___fttol,w,c
  1586  0003E8  6EBB               	movwf	4027,c	;volatile
  1587                           
  1588                           ;nexmain.c: 300: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  1589  0003EA  C010  F037         	movff	_conversion2,___fttol@f1
  1590  0003EE  C011  F038         	movff	_conversion2+1,___fttol@f1+1
  1591  0003F2  C012  F039         	movff	_conversion2+2,___fttol@f1+2
  1592  0003F6  EC39  F003         	call	___fttol	;wreg free
  1593  0003FA  0E03               	movlw	3
  1594  0003FC  1637               	andwf	?___fttol,f,c
  1595  0003FE  3A37               	swapf	?___fttol,f,c
  1596  000400  0EF0               	movlw	240
  1597  000402  1637               	andwf	?___fttol,f,c
  1598  000404  50BD               	movf	4029,w,c	;volatile
  1599  000406  0B0F               	andlw	15
  1600  000408  1037               	iorwf	?___fttol,w,c
  1601  00040A  6EBA               	movwf	4026,c	;volatile
  1602                           
  1603                           ;nexmain.c: 301: if ( conversion1 >= conversion2 ) {
  1604  00040C  C013  F037         	movff	_conversion1,___ftge@ff1
  1605  000410  C014  F038         	movff	_conversion1+1,___ftge@ff1+1
  1606  000414  C015  F039         	movff	_conversion1+2,___ftge@ff1+2
  1607  000418  C010  F03A         	movff	_conversion2,___ftge@ff2
  1608  00041C  C011  F03B         	movff	_conversion2+1,___ftge@ff2+1
  1609  000420  C012  F03C         	movff	_conversion2+2,___ftge@ff2+2
  1610  000424  ECED  F004         	call	___ftge	;wreg free
  1611  000428  0012               	return	
  1612  00042A                     __end_of_pwmI:
  1613                           	opt stack 0
  1614                           tblptru	equ	0xFF8
  1615                           tblptrh	equ	0xFF7
  1616                           tblptrl	equ	0xFF6
  1617                           tablat	equ	0xFF5
  1618                           intcon	equ	0xFF2
  1619                           postinc0	equ	0xFEE
  1620                           wreg	equ	0xFE8
  1621                           status	equ	0xFD8
  1622                           
  1623 ;; *************** function _freno *****************
  1624 ;; Defined at:
  1625 ;;		line 261 in file "nexmain.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		None
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used:    1
  1645 ;; Hardware stack levels required when called:    1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text9
  1654  000C5A                     __ptext9:
  1655                           	opt stack 0
  1656  000C5A                     _freno:
  1657                           	opt stack 29
  1658                           
  1659                           ;nexmain.c: 262: LATB0 = 0;
  1660                           
  1661                           ;incstack = 0
  1662  000C5A  908A               	bcf	3978,0,c	;volatile
  1663                           
  1664                           ;nexmain.c: 263: LATB1 = 0;
  1665  000C5C  928A               	bcf	3978,1,c	;volatile
  1666                           
  1667                           ;nexmain.c: 264: LATB2 = 0;
  1668  000C5E  948A               	bcf	3978,2,c	;volatile
  1669                           
  1670                           ;nexmain.c: 265: LATB3 = 0;
  1671  000C60  968A               	bcf	3978,3,c	;volatile
  1672  000C62  0012               	return		;funcret
  1673  000C64                     __end_of_freno:
  1674                           	opt stack 0
  1675                           tblptru	equ	0xFF8
  1676                           tblptrh	equ	0xFF7
  1677                           tblptrl	equ	0xFF6
  1678                           tablat	equ	0xFF5
  1679                           intcon	equ	0xFF2
  1680                           postinc0	equ	0xFEE
  1681                           wreg	equ	0xFE8
  1682                           status	equ	0xFD8
  1683                           
  1684 ;; *************** function _derecha *****************
  1685 ;; Defined at:
  1686 ;;		line 245 in file "nexmain.c"
  1687 ;; Parameters:    Size  Location     Type
  1688 ;;		None
  1689 ;; Auto vars:     Size  Location     Type
  1690 ;;		None
  1691 ;; Return value:  Size  Location     Type
  1692 ;;                  1    wreg      void 
  1693 ;; Registers used:
  1694 ;;		wreg, status,2, status,0, cstack
  1695 ;; Tracked objects:
  1696 ;;		On entry : 0/0
  1697 ;;		On exit  : 0/0
  1698 ;;		Unchanged: 0/0
  1699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1700 ;;      Params:         0       0       0       0       0       0       0       0       0
  1701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1704 ;;Total ram usage:        0 bytes
  1705 ;; Hardware stack levels used:    1
  1706 ;; Hardware stack levels required when called:    4
  1707 ;; This function calls:
  1708 ;;		_pwmD
  1709 ;; This function is called by:
  1710 ;;		_main
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text10
  1715  000C30                     __ptext10:
  1716                           	opt stack 0
  1717  000C30                     _derecha:
  1718                           	opt stack 26
  1719                           
  1720                           ;nexmain.c: 246: pwmD();
  1721                           
  1722                           ;incstack = 0
  1723  000C30  EC15  F002         	call	_pwmD	;wreg free
  1724                           
  1725                           ;nexmain.c: 247: LATB0 = 1;
  1726  000C34  808A               	bsf	3978,0,c	;volatile
  1727                           
  1728                           ;nexmain.c: 248: LATB1 = 0;
  1729  000C36  928A               	bcf	3978,1,c	;volatile
  1730                           
  1731                           ;nexmain.c: 249: LATB2 = 1;
  1732  000C38  848A               	bsf	3978,2,c	;volatile
  1733                           
  1734                           ;nexmain.c: 250: LATB3 = 0;
  1735  000C3A  968A               	bcf	3978,3,c	;volatile
  1736  000C3C  0012               	return		;funcret
  1737  000C3E                     __end_of_derecha:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           intcon	equ	0xFF2
  1744                           postinc0	equ	0xFEE
  1745                           wreg	equ	0xFE8
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _pwmD *****************
  1749 ;; Defined at:
  1750 ;;		line 306 in file "nexmain.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2, status,0, cstack
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1764 ;;      Params:         0       0       0       0       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    3
  1771 ;; This function calls:
  1772 ;;		___ftge
  1773 ;;		___ftmul
  1774 ;;		___fttol
  1775 ;; This function is called by:
  1776 ;;		_derecha
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text11
  1781  00042A                     __ptext11:
  1782                           	opt stack 0
  1783  00042A                     _pwmD:
  1784                           	opt stack 26
  1785                           
  1786                           ;nexmain.c: 307: if (y == 3) {
  1787                           
  1788                           ;incstack = 0
  1789  00042A  0E03               	movlw	3
  1790  00042C  184E               	xorwf	_y,w,c
  1791  00042E  104F               	iorwf	_y+1,w,c
  1792  000430  A4D8               	btfss	status,2,c
  1793  000432  D014               	goto	l1611
  1794                           
  1795                           ;nexmain.c: 308: duty_cicle1 = 1023.0;
  1796  000434  0EC0               	movlw	192
  1797  000436  6E26               	movwf	_duty_cicle1,c
  1798  000438  0E7F               	movlw	127
  1799  00043A  6E27               	movwf	_duty_cicle1+1,c
  1800  00043C  0E44               	movlw	68
  1801  00043E  6E28               	movwf	_duty_cicle1+2,c
  1802                           
  1803                           ;nexmain.c: 309: duty_cicle2 = 511.5;
  1804  000440  0EC0               	movlw	192
  1805  000442  6E23               	movwf	_duty_cicle2,c
  1806  000444  0EFF               	movlw	255
  1807  000446  6E24               	movwf	_duty_cicle2+1,c
  1808  000448  0E43               	movlw	67
  1809  00044A  6E25               	movwf	_duty_cicle2+2,c
  1810                           
  1811                           ;nexmain.c: 310: y = 1;
  1812  00044C  0E00               	movlw	0
  1813  00044E  6E4F               	movwf	_y+1,c
  1814  000450  0E01               	movlw	1
  1815  000452  6E4E               	movwf	_y,c
  1816                           
  1817                           ;nexmain.c: 311: y = 2;
  1818  000454  0E00               	movlw	0
  1819  000456  6E4F               	movwf	_y+1,c
  1820  000458  0E02               	movlw	2
  1821  00045A  6E4E               	movwf	_y,c
  1822  00045C                     l1611:
  1823                           
  1824                           ;nexmain.c: 312: }
  1825                           ;nexmain.c: 313: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  1826  00045C  C026  F03F         	movff	_duty_cicle1,___ftmul@f1
  1827  000460  C027  F040         	movff	_duty_cicle1+1,___ftmul@f1+1
  1828  000464  C028  F041         	movff	_duty_cicle1+2,___ftmul@f1+2
  1829  000468  0E3F               	movlw	63
  1830  00046A  6E42               	movwf	___ftmul@f2,c
  1831  00046C  0EFA               	movlw	250
  1832  00046E  6E43               	movwf	___ftmul@f2+1,c
  1833  000470  0E3E               	movlw	62
  1834  000472  6E44               	movwf	___ftmul@f2+2,c
  1835  000474  ECB3  F003         	call	___ftmul	;wreg free
  1836  000478  C03F  F013         	movff	?___ftmul,_conversion1
  1837  00047C  C040  F014         	movff	?___ftmul+1,_conversion1+1
  1838  000480  C041  F015         	movff	?___ftmul+2,_conversion1+2
  1839                           
  1840                           ;nexmain.c: 314: CCPR1L = (int) conversion1 >> 2;
  1841  000484  C013  F037         	movff	_conversion1,___fttol@f1
  1842  000488  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  1843  00048C  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  1844  000490  EC39  F003         	call	___fttol	;wreg free
  1845  000494  3438               	rlcf	?___fttol+1,w,c
  1846  000496  3238               	rrcf	?___fttol+1,f,c
  1847  000498  3237               	rrcf	?___fttol,f,c
  1848  00049A  3438               	rlcf	?___fttol+1,w,c
  1849  00049C  3238               	rrcf	?___fttol+1,f,c
  1850  00049E  3237               	rrcf	?___fttol,f,c
  1851  0004A0  5037               	movf	?___fttol,w,c
  1852  0004A2  6EBE               	movwf	4030,c	;volatile
  1853                           
  1854                           ;nexmain.c: 315: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  1855  0004A4  C013  F037         	movff	_conversion1,___fttol@f1
  1856  0004A8  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  1857  0004AC  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  1858  0004B0  EC39  F003         	call	___fttol	;wreg free
  1859  0004B4  0E03               	movlw	3
  1860  0004B6  1637               	andwf	?___fttol,f,c
  1861  0004B8  3A37               	swapf	?___fttol,f,c
  1862  0004BA  0EF0               	movlw	240
  1863  0004BC  1637               	andwf	?___fttol,f,c
  1864  0004BE  50BD               	movf	4029,w,c	;volatile
  1865  0004C0  0B0F               	andlw	15
  1866  0004C2  1037               	iorwf	?___fttol,w,c
  1867  0004C4  6EBD               	movwf	4029,c	;volatile
  1868                           
  1869                           ;nexmain.c: 316: conversion2 = (float) duty_cicle2 * (500.0 / 1023.0);
  1870  0004C6  C023  F03F         	movff	_duty_cicle2,___ftmul@f1
  1871  0004CA  C024  F040         	movff	_duty_cicle2+1,___ftmul@f1+1
  1872  0004CE  C025  F041         	movff	_duty_cicle2+2,___ftmul@f1+2
  1873  0004D2  0E3F               	movlw	63
  1874  0004D4  6E42               	movwf	___ftmul@f2,c
  1875  0004D6  0EFA               	movlw	250
  1876  0004D8  6E43               	movwf	___ftmul@f2+1,c
  1877  0004DA  0E3E               	movlw	62
  1878  0004DC  6E44               	movwf	___ftmul@f2+2,c
  1879  0004DE  ECB3  F003         	call	___ftmul	;wreg free
  1880  0004E2  C03F  F010         	movff	?___ftmul,_conversion2
  1881  0004E6  C040  F011         	movff	?___ftmul+1,_conversion2+1
  1882  0004EA  C041  F012         	movff	?___ftmul+2,_conversion2+2
  1883                           
  1884                           ;nexmain.c: 317: CCPR2L = (int) conversion2 >> 2;
  1885  0004EE  C010  F037         	movff	_conversion2,___fttol@f1
  1886  0004F2  C011  F038         	movff	_conversion2+1,___fttol@f1+1
  1887  0004F6  C012  F039         	movff	_conversion2+2,___fttol@f1+2
  1888  0004FA  EC39  F003         	call	___fttol	;wreg free
  1889  0004FE  3438               	rlcf	?___fttol+1,w,c
  1890  000500  3238               	rrcf	?___fttol+1,f,c
  1891  000502  3237               	rrcf	?___fttol,f,c
  1892  000504  3438               	rlcf	?___fttol+1,w,c
  1893  000506  3238               	rrcf	?___fttol+1,f,c
  1894  000508  3237               	rrcf	?___fttol,f,c
  1895  00050A  5037               	movf	?___fttol,w,c
  1896  00050C  6EBB               	movwf	4027,c	;volatile
  1897                           
  1898                           ;nexmain.c: 318: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  1899  00050E  C010  F037         	movff	_conversion2,___fttol@f1
  1900  000512  C011  F038         	movff	_conversion2+1,___fttol@f1+1
  1901  000516  C012  F039         	movff	_conversion2+2,___fttol@f1+2
  1902  00051A  EC39  F003         	call	___fttol	;wreg free
  1903  00051E  0E03               	movlw	3
  1904  000520  1637               	andwf	?___fttol,f,c
  1905  000522  3A37               	swapf	?___fttol,f,c
  1906  000524  0EF0               	movlw	240
  1907  000526  1637               	andwf	?___fttol,f,c
  1908  000528  50BD               	movf	4029,w,c	;volatile
  1909  00052A  0B0F               	andlw	15
  1910  00052C  1037               	iorwf	?___fttol,w,c
  1911  00052E  6EBA               	movwf	4026,c	;volatile
  1912                           
  1913                           ;nexmain.c: 319: if (conversion1 <= conversion2 ) {
  1914  000530  C010  F037         	movff	_conversion2,___ftge@ff1
  1915  000534  C011  F038         	movff	_conversion2+1,___ftge@ff1+1
  1916  000538  C012  F039         	movff	_conversion2+2,___ftge@ff1+2
  1917  00053C  C013  F03A         	movff	_conversion1,___ftge@ff2
  1918  000540  C014  F03B         	movff	_conversion1+1,___ftge@ff2+1
  1919  000544  C015  F03C         	movff	_conversion1+2,___ftge@ff2+2
  1920  000548  ECED  F004         	call	___ftge	;wreg free
  1921  00054C  0012               	return	
  1922  00054E                     __end_of_pwmD:
  1923                           	opt stack 0
  1924                           tblptru	equ	0xFF8
  1925                           tblptrh	equ	0xFF7
  1926                           tblptrl	equ	0xFF6
  1927                           tablat	equ	0xFF5
  1928                           intcon	equ	0xFF2
  1929                           postinc0	equ	0xFEE
  1930                           wreg	equ	0xFE8
  1931                           status	equ	0xFD8
  1932                           
  1933 ;; *************** function ___ftge *****************
  1934 ;; Defined at:
  1935 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  ff1             3   14[COMRAM] float 
  1938 ;;  ff2             3   17[COMRAM] float 
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;		None               void
  1943 ;; Registers used:
  1944 ;;		wreg, status,2, status,0
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         6       0       0       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1952 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1953 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1954 ;;Total ram usage:        9 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    1
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_pwmI
  1961 ;;		_pwmD
  1962 ;;		_pwmA1
  1963 ;;		_pwmB1
  1964 ;; This function uses a non-reentrant model
  1965 ;;
  1966                           
  1967                           	psect	text12
  1968  0009DA                     __ptext12:
  1969                           	opt stack 0
  1970  0009DA                     ___ftge:
  1971                           	opt stack 28
  1972                           
  1973                           ;incstack = 0
  1974  0009DA  AE39               	btfss	___ftge@ff1+2,7,c
  1975  0009DC  D016               	goto	l1533
  1976  0009DE  C037  F03D         	movff	___ftge@ff1,??___ftge
  1977  0009E2  C038  F03E         	movff	___ftge@ff1+1,??___ftge+1
  1978  0009E6  C039  F03F         	movff	___ftge@ff1+2,??___ftge+2
  1979  0009EA  1E3D               	comf	??___ftge,f,c
  1980  0009EC  1E3E               	comf	??___ftge+1,f,c
  1981  0009EE  1E3F               	comf	??___ftge+2,f,c
  1982  0009F0  2A3D               	incf	??___ftge,f,c
  1983  0009F2  0E00               	movlw	0
  1984  0009F4  223E               	addwfc	??___ftge+1,f,c
  1985  0009F6  223F               	addwfc	??___ftge+2,f,c
  1986  0009F8  0E00               	movlw	0
  1987  0009FA  243D               	addwf	??___ftge,w,c
  1988  0009FC  6E37               	movwf	___ftge@ff1,c
  1989  0009FE  0E00               	movlw	0
  1990  000A00  203E               	addwfc	??___ftge+1,w,c
  1991  000A02  6E38               	movwf	___ftge@ff1+1,c
  1992  000A04  0E80               	movlw	128
  1993  000A06  203F               	addwfc	??___ftge+2,w,c
  1994  000A08  6E39               	movwf	___ftge@ff1+2,c
  1995  000A0A                     l1533:
  1996  000A0A  AE3C               	btfss	___ftge@ff2+2,7,c
  1997  000A0C  D016               	goto	l1537
  1998  000A0E  C03A  F03D         	movff	___ftge@ff2,??___ftge
  1999  000A12  C03B  F03E         	movff	___ftge@ff2+1,??___ftge+1
  2000  000A16  C03C  F03F         	movff	___ftge@ff2+2,??___ftge+2
  2001  000A1A  1E3D               	comf	??___ftge,f,c
  2002  000A1C  1E3E               	comf	??___ftge+1,f,c
  2003  000A1E  1E3F               	comf	??___ftge+2,f,c
  2004  000A20  2A3D               	incf	??___ftge,f,c
  2005  000A22  0E00               	movlw	0
  2006  000A24  223E               	addwfc	??___ftge+1,f,c
  2007  000A26  223F               	addwfc	??___ftge+2,f,c
  2008  000A28  0E00               	movlw	0
  2009  000A2A  243D               	addwf	??___ftge,w,c
  2010  000A2C  6E3A               	movwf	___ftge@ff2,c
  2011  000A2E  0E00               	movlw	0
  2012  000A30  203E               	addwfc	??___ftge+1,w,c
  2013  000A32  6E3B               	movwf	___ftge@ff2+1,c
  2014  000A34  0E80               	movlw	128
  2015  000A36  203F               	addwfc	??___ftge+2,w,c
  2016  000A38  6E3C               	movwf	___ftge@ff2+2,c
  2017  000A3A                     l1537:
  2018  000A3A  0E00               	movlw	0
  2019  000A3C  1A37               	xorwf	___ftge@ff1,f,c
  2020  000A3E  0E00               	movlw	0
  2021  000A40  1A38               	xorwf	___ftge@ff1+1,f,c
  2022  000A42  0E80               	movlw	128
  2023  000A44  1A39               	xorwf	___ftge@ff1+2,f,c
  2024  000A46  0E00               	movlw	0
  2025  000A48  1A3A               	xorwf	___ftge@ff2,f,c
  2026  000A4A  0E00               	movlw	0
  2027  000A4C  1A3B               	xorwf	___ftge@ff2+1,f,c
  2028  000A4E  0E80               	movlw	128
  2029  000A50  1A3C               	xorwf	___ftge@ff2+2,f,c
  2030  000A52  503A               	movf	___ftge@ff2,w,c
  2031  000A54  5C37               	subwf	___ftge@ff1,w,c
  2032  000A56  503B               	movf	___ftge@ff2+1,w,c
  2033  000A58  5838               	subwfb	___ftge@ff1+1,w,c
  2034  000A5A  503C               	movf	___ftge@ff2+2,w,c
  2035  000A5C  5839               	subwfb	___ftge@ff1+2,w,c
  2036  000A5E  B0D8               	btfsc	status,0,c
  2037  000A60  D002               	goto	l1543
  2038  000A62  90D8               	bcf	status,0,c
  2039  000A64  0012               	return	
  2040  000A66                     l1543:
  2041  000A66  80D8               	bsf	status,0,c
  2042  000A68  0012               	return	
  2043  000A6A                     __end_of___ftge:
  2044                           	opt stack 0
  2045                           tblptru	equ	0xFF8
  2046                           tblptrh	equ	0xFF7
  2047                           tblptrl	equ	0xFF6
  2048                           tablat	equ	0xFF5
  2049                           intcon	equ	0xFF2
  2050                           postinc0	equ	0xFEE
  2051                           wreg	equ	0xFE8
  2052                           status	equ	0xFD8
  2053                           
  2054 ;; *************** function _atras *****************
  2055 ;; Defined at:
  2056 ;;		line 237 in file "nexmain.c"
  2057 ;; Parameters:    Size  Location     Type
  2058 ;;		None
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;		None
  2061 ;; Return value:  Size  Location     Type
  2062 ;;                  1    wreg      void 
  2063 ;; Registers used:
  2064 ;;		wreg, status,2, status,0, cstack
  2065 ;; Tracked objects:
  2066 ;;		On entry : 0/0
  2067 ;;		On exit  : 0/0
  2068 ;;		Unchanged: 0/0
  2069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2070 ;;      Params:         0       0       0       0       0       0       0       0       0
  2071 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2072 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2073 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2074 ;;Total ram usage:        0 bytes
  2075 ;; Hardware stack levels used:    1
  2076 ;; Hardware stack levels required when called:    4
  2077 ;; This function calls:
  2078 ;;		_pwm
  2079 ;; This function is called by:
  2080 ;;		_main
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text13
  2085  000C3E                     __ptext13:
  2086                           	opt stack 0
  2087  000C3E                     _atras:
  2088                           	opt stack 26
  2089                           
  2090                           ;nexmain.c: 238: pwm();
  2091                           
  2092                           ;incstack = 0
  2093  000C3E  EC2D  F004         	call	_pwm	;wreg free
  2094                           
  2095                           ;nexmain.c: 239: LATB0 = 0;
  2096  000C42  908A               	bcf	3978,0,c	;volatile
  2097                           
  2098                           ;nexmain.c: 240: LATB1 = 1;
  2099  000C44  828A               	bsf	3978,1,c	;volatile
  2100                           
  2101                           ;nexmain.c: 241: LATB2 = 0;
  2102  000C46  948A               	bcf	3978,2,c	;volatile
  2103                           
  2104                           ;nexmain.c: 242: LATB3 = 1;
  2105  000C48  868A               	bsf	3978,3,c	;volatile
  2106  000C4A  0012               	return		;funcret
  2107  000C4C                     __end_of_atras:
  2108                           	opt stack 0
  2109                           tblptru	equ	0xFF8
  2110                           tblptrh	equ	0xFF7
  2111                           tblptrl	equ	0xFF6
  2112                           tablat	equ	0xFF5
  2113                           intcon	equ	0xFF2
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function _adelante *****************
  2119 ;; Defined at:
  2120 ;;		line 229 in file "nexmain.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;		None
  2123 ;; Auto vars:     Size  Location     Type
  2124 ;;		None
  2125 ;; Return value:  Size  Location     Type
  2126 ;;                  1    wreg      void 
  2127 ;; Registers used:
  2128 ;;		wreg, status,2, status,0, cstack
  2129 ;; Tracked objects:
  2130 ;;		On entry : 0/0
  2131 ;;		On exit  : 0/0
  2132 ;;		Unchanged: 0/0
  2133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2134 ;;      Params:         0       0       0       0       0       0       0       0       0
  2135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2138 ;;Total ram usage:        0 bytes
  2139 ;; Hardware stack levels used:    1
  2140 ;; Hardware stack levels required when called:    4
  2141 ;; This function calls:
  2142 ;;		_pwm
  2143 ;; This function is called by:
  2144 ;;		_main
  2145 ;; This function uses a non-reentrant model
  2146 ;;
  2147                           
  2148                           	psect	text14
  2149  000C4C                     __ptext14:
  2150                           	opt stack 0
  2151  000C4C                     _adelante:
  2152                           	opt stack 26
  2153                           
  2154                           ;nexmain.c: 230: pwm();
  2155                           
  2156                           ;incstack = 0
  2157  000C4C  EC2D  F004         	call	_pwm	;wreg free
  2158                           
  2159                           ;nexmain.c: 231: LATB0 = 1;
  2160  000C50  808A               	bsf	3978,0,c	;volatile
  2161                           
  2162                           ;nexmain.c: 232: LATB1 = 0;
  2163  000C52  928A               	bcf	3978,1,c	;volatile
  2164                           
  2165                           ;nexmain.c: 233: LATB2 = 1;
  2166  000C54  848A               	bsf	3978,2,c	;volatile
  2167                           
  2168                           ;nexmain.c: 234: LATB3 = 0;
  2169  000C56  968A               	bcf	3978,3,c	;volatile
  2170  000C58  0012               	return		;funcret
  2171  000C5A                     __end_of_adelante:
  2172                           	opt stack 0
  2173                           tblptru	equ	0xFF8
  2174                           tblptrh	equ	0xFF7
  2175                           tblptrl	equ	0xFF6
  2176                           tablat	equ	0xFF5
  2177                           intcon	equ	0xFF2
  2178                           postinc0	equ	0xFEE
  2179                           wreg	equ	0xFE8
  2180                           status	equ	0xFD8
  2181                           
  2182 ;; *************** function _pwm *****************
  2183 ;; Defined at:
  2184 ;;		line 275 in file "nexmain.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    3
  2205 ;; This function calls:
  2206 ;;		___ftmul
  2207 ;;		___fttol
  2208 ;; This function is called by:
  2209 ;;		_adelante
  2210 ;;		_atras
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text15
  2215  00085A                     __ptext15:
  2216                           	opt stack 0
  2217  00085A                     _pwm:
  2218                           	opt stack 26
  2219                           
  2220                           ;nexmain.c: 276: if (y == 1) {
  2221                           
  2222                           ;incstack = 0
  2223  00085A  044E               	decf	_y,w,c
  2224  00085C  104F               	iorwf	_y+1,w,c
  2225  00085E  A4D8               	btfss	status,2,c
  2226  000860  D00E               	goto	l1597
  2227                           
  2228                           ;nexmain.c: 277: duty_cicle1 = 1023.0;
  2229  000862  0EC0               	movlw	192
  2230  000864  6E26               	movwf	_duty_cicle1,c
  2231  000866  0E7F               	movlw	127
  2232  000868  6E27               	movwf	_duty_cicle1+1,c
  2233  00086A  0E44               	movlw	68
  2234  00086C  6E28               	movwf	_duty_cicle1+2,c
  2235                           
  2236                           ;nexmain.c: 278: y = 2;
  2237  00086E  0E00               	movlw	0
  2238  000870  6E4F               	movwf	_y+1,c
  2239  000872  0E02               	movlw	2
  2240  000874  6E4E               	movwf	_y,c
  2241                           
  2242                           ;nexmain.c: 279: y = 3;
  2243  000876  0E00               	movlw	0
  2244  000878  6E4F               	movwf	_y+1,c
  2245  00087A  0E03               	movlw	3
  2246  00087C  6E4E               	movwf	_y,c
  2247  00087E                     l1597:
  2248                           
  2249                           ;nexmain.c: 280: }
  2250                           ;nexmain.c: 281: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  2251  00087E  C026  F03F         	movff	_duty_cicle1,___ftmul@f1
  2252  000882  C027  F040         	movff	_duty_cicle1+1,___ftmul@f1+1
  2253  000886  C028  F041         	movff	_duty_cicle1+2,___ftmul@f1+2
  2254  00088A  0E3F               	movlw	63
  2255  00088C  6E42               	movwf	___ftmul@f2,c
  2256  00088E  0EFA               	movlw	250
  2257  000890  6E43               	movwf	___ftmul@f2+1,c
  2258  000892  0E3E               	movlw	62
  2259  000894  6E44               	movwf	___ftmul@f2+2,c
  2260  000896  ECB3  F003         	call	___ftmul	;wreg free
  2261  00089A  C03F  F013         	movff	?___ftmul,_conversion1
  2262  00089E  C040  F014         	movff	?___ftmul+1,_conversion1+1
  2263  0008A2  C041  F015         	movff	?___ftmul+2,_conversion1+2
  2264                           
  2265                           ;nexmain.c: 282: CCPR1L = (int) conversion1 >> 2;
  2266  0008A6  C013  F037         	movff	_conversion1,___fttol@f1
  2267  0008AA  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  2268  0008AE  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  2269  0008B2  EC39  F003         	call	___fttol	;wreg free
  2270  0008B6  3438               	rlcf	?___fttol+1,w,c
  2271  0008B8  3238               	rrcf	?___fttol+1,f,c
  2272  0008BA  3237               	rrcf	?___fttol,f,c
  2273  0008BC  3438               	rlcf	?___fttol+1,w,c
  2274  0008BE  3238               	rrcf	?___fttol+1,f,c
  2275  0008C0  3237               	rrcf	?___fttol,f,c
  2276  0008C2  5037               	movf	?___fttol,w,c
  2277  0008C4  6EBE               	movwf	4030,c	;volatile
  2278                           
  2279                           ;nexmain.c: 283: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  2280  0008C6  C013  F037         	movff	_conversion1,___fttol@f1
  2281  0008CA  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  2282  0008CE  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  2283  0008D2  EC39  F003         	call	___fttol	;wreg free
  2284  0008D6  0E03               	movlw	3
  2285  0008D8  1637               	andwf	?___fttol,f,c
  2286  0008DA  3A37               	swapf	?___fttol,f,c
  2287  0008DC  0EF0               	movlw	240
  2288  0008DE  1637               	andwf	?___fttol,f,c
  2289  0008E0  50BD               	movf	4029,w,c	;volatile
  2290  0008E2  0B0F               	andlw	15
  2291  0008E4  1037               	iorwf	?___fttol,w,c
  2292  0008E6  6EBD               	movwf	4029,c	;volatile
  2293                           
  2294                           ;nexmain.c: 284: CCPR2L = (int) conversion1 >> 2;
  2295  0008E8  C013  F037         	movff	_conversion1,___fttol@f1
  2296  0008EC  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  2297  0008F0  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  2298  0008F4  EC39  F003         	call	___fttol	;wreg free
  2299  0008F8  3438               	rlcf	?___fttol+1,w,c
  2300  0008FA  3238               	rrcf	?___fttol+1,f,c
  2301  0008FC  3237               	rrcf	?___fttol,f,c
  2302  0008FE  3438               	rlcf	?___fttol+1,w,c
  2303  000900  3238               	rrcf	?___fttol+1,f,c
  2304  000902  3237               	rrcf	?___fttol,f,c
  2305  000904  5037               	movf	?___fttol,w,c
  2306  000906  6EBB               	movwf	4027,c	;volatile
  2307                           
  2308                           ;nexmain.c: 285: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  2309  000908  C013  F037         	movff	_conversion1,___fttol@f1
  2310  00090C  C014  F038         	movff	_conversion1+1,___fttol@f1+1
  2311  000910  C015  F039         	movff	_conversion1+2,___fttol@f1+2
  2312  000914  EC39  F003         	call	___fttol	;wreg free
  2313  000918  0E03               	movlw	3
  2314  00091A  1637               	andwf	?___fttol,f,c
  2315  00091C  3A37               	swapf	?___fttol,f,c
  2316  00091E  0EF0               	movlw	240
  2317  000920  1637               	andwf	?___fttol,f,c
  2318  000922  50BD               	movf	4029,w,c	;volatile
  2319  000924  0B0F               	andlw	15
  2320  000926  1037               	iorwf	?___fttol,w,c
  2321  000928  6EBA               	movwf	4026,c	;volatile
  2322  00092A  0012               	return		;funcret
  2323  00092C                     __end_of_pwm:
  2324                           	opt stack 0
  2325                           tblptru	equ	0xFF8
  2326                           tblptrh	equ	0xFF7
  2327                           tblptrl	equ	0xFF6
  2328                           tablat	equ	0xFF5
  2329                           intcon	equ	0xFF2
  2330                           postinc0	equ	0xFEE
  2331                           wreg	equ	0xFE8
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function ___fttol *****************
  2335 ;; Defined at:
  2336 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;  f1              3   14[COMRAM] float 
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  lval            4   24[COMRAM] unsigned long 
  2341 ;;  exp1            1   28[COMRAM] unsigned char 
  2342 ;;  sign1           1   23[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  4   14[COMRAM] long 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2352 ;;      Params:         4       0       0       0       0       0       0       0       0
  2353 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2354 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2355 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2356 ;;Total ram usage:       15 bytes
  2357 ;; Hardware stack levels used:    1
  2358 ;; Hardware stack levels required when called:    1
  2359 ;; This function calls:
  2360 ;;		Nothing
  2361 ;; This function is called by:
  2362 ;;		_pwm
  2363 ;;		_pwmI
  2364 ;;		_pwmD
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           	psect	text16
  2369  000672                     __ptext16:
  2370                           	opt stack 0
  2371  000672                     ___fttol:
  2372                           	opt stack 27
  2373                           
  2374                           ;incstack = 0
  2375  000672  C039  F03B         	movff	___fttol@f1+2,??___fttol
  2376  000676  6A3C               	clrf	(??___fttol+1)& (0+255),c
  2377  000678  6A3D               	clrf	(??___fttol+2)& (0+255),c
  2378  00067A  3438               	rlcf	___fttol@f1+1,w,c
  2379  00067C  363B               	rlcf	??___fttol& (0+255),f,c
  2380  00067E  E301               	bnc	u1061
  2381  000680  803C               	bsf	(??___fttol+1)& (0+255),0,c
  2382  000682                     u1061:
  2383  000682  503B               	movf	??___fttol,w,c
  2384  000684  6E45               	movwf	___fttol@exp1,c
  2385  000686  5045               	movf	___fttol@exp1,w,c
  2386  000688  A4D8               	btfss	status,2,c
  2387  00068A  D009               	goto	l1553
  2388  00068C  0E00               	movlw	0
  2389  00068E  6E37               	movwf	?___fttol,c
  2390  000690  0E00               	movlw	0
  2391  000692  6E38               	movwf	?___fttol+1,c
  2392  000694  0E00               	movlw	0
  2393  000696  6E39               	movwf	?___fttol+2,c
  2394  000698  0E00               	movlw	0
  2395  00069A  6E3A               	movwf	?___fttol+3,c
  2396  00069C  0012               	return	
  2397  00069E                     l1553:
  2398  00069E  0E17               	movlw	23
  2399  0006A0  6E3B               	movwf	??___fttol& (0+255),c
  2400  0006A2  C037  F03C         	movff	___fttol@f1,??___fttol+1
  2401  0006A6  C038  F03D         	movff	___fttol@f1+1,??___fttol+2
  2402  0006AA  C039  F03E         	movff	___fttol@f1+2,??___fttol+3
  2403  0006AE  283B               	incf	??___fttol,w,c
  2404  0006B0  6E3F               	movwf	(??___fttol+4)& (0+255),c
  2405  0006B2  D004               	goto	u1080
  2406  0006B4                     u1085:
  2407  0006B4  90D8               	bcf	status,0,c
  2408  0006B6  323E               	rrcf	??___fttol+3,f,c
  2409  0006B8  323D               	rrcf	??___fttol+2,f,c
  2410  0006BA  323C               	rrcf	??___fttol+1,f,c
  2411  0006BC                     u1080:
  2412  0006BC  2E3F               	decfsz	(??___fttol+4)& (0+255),f,c
  2413  0006BE  D7FA               	goto	u1085
  2414  0006C0  503C               	movf	??___fttol+1,w,c
  2415  0006C2  6E40               	movwf	___fttol@sign1,c
  2416  0006C4  8E38               	bsf	___fttol@f1+1,7,c
  2417  0006C6  0EFF               	movlw	255
  2418  0006C8  1637               	andwf	___fttol@f1,f,c
  2419  0006CA  0EFF               	movlw	255
  2420  0006CC  1638               	andwf	___fttol@f1+1,f,c
  2421  0006CE  0E00               	movlw	0
  2422  0006D0  1639               	andwf	___fttol@f1+2,f,c
  2423  0006D2  5037               	movf	___fttol@f1,w,c
  2424  0006D4  6E41               	movwf	___fttol@lval,c
  2425  0006D6  5038               	movf	___fttol@f1+1,w,c
  2426  0006D8  6E42               	movwf	___fttol@lval+1,c
  2427  0006DA  5039               	movf	___fttol@f1+2,w,c
  2428  0006DC  6E43               	movwf	___fttol@lval+2,c
  2429  0006DE  6A44               	clrf	___fttol@lval+3,c
  2430  0006E0  0E8E               	movlw	142
  2431  0006E2  5E45               	subwf	___fttol@exp1,f,c
  2432  0006E4  AE45               	btfss	___fttol@exp1,7,c
  2433  0006E6  D016               	goto	l1575
  2434  0006E8  5045               	movf	___fttol@exp1,w,c
  2435  0006EA  0A80               	xorlw	128
  2436  0006EC  0F8F               	addlw	143
  2437  0006EE  B0D8               	btfsc	status,0,c
  2438  0006F0  D009               	goto	l1571
  2439  0006F2  0E00               	movlw	0
  2440  0006F4  6E37               	movwf	?___fttol,c
  2441  0006F6  0E00               	movlw	0
  2442  0006F8  6E38               	movwf	?___fttol+1,c
  2443  0006FA  0E00               	movlw	0
  2444  0006FC  6E39               	movwf	?___fttol+2,c
  2445  0006FE  0E00               	movlw	0
  2446  000700  6E3A               	movwf	?___fttol+3,c
  2447  000702  0012               	return	
  2448  000704                     l1571:
  2449  000704  90D8               	bcf	status,0,c
  2450  000706  3244               	rrcf	___fttol@lval+3,f,c
  2451  000708  3243               	rrcf	___fttol@lval+2,f,c
  2452  00070A  3242               	rrcf	___fttol@lval+1,f,c
  2453  00070C  3241               	rrcf	___fttol@lval,f,c
  2454  00070E  3E45               	incfsz	___fttol@exp1,f,c
  2455  000710  D7F9               	goto	l1571
  2456  000712  D015               	goto	l1585
  2457  000714                     l1575:
  2458  000714  0E17               	movlw	23
  2459  000716  6445               	cpfsgt	___fttol@exp1,c
  2460  000718  D00F               	goto	l1583
  2461  00071A  0E00               	movlw	0
  2462  00071C  6E37               	movwf	?___fttol,c
  2463  00071E  0E00               	movlw	0
  2464  000720  6E38               	movwf	?___fttol+1,c
  2465  000722  0E00               	movlw	0
  2466  000724  6E39               	movwf	?___fttol+2,c
  2467  000726  0E00               	movlw	0
  2468  000728  6E3A               	movwf	?___fttol+3,c
  2469  00072A  0012               	return	
  2470  00072C                     l1581:
  2471  00072C  90D8               	bcf	status,0,c
  2472  00072E  3641               	rlcf	___fttol@lval,f,c
  2473  000730  3642               	rlcf	___fttol@lval+1,f,c
  2474  000732  3643               	rlcf	___fttol@lval+2,f,c
  2475  000734  3644               	rlcf	___fttol@lval+3,f,c
  2476  000736  0645               	decf	___fttol@exp1,f,c
  2477  000738                     l1583:
  2478  000738  5045               	movf	___fttol@exp1,w,c
  2479  00073A  A4D8               	btfss	status,2,c
  2480  00073C  D7F7               	goto	l1581
  2481  00073E                     l1585:
  2482  00073E  5040               	movf	___fttol@sign1,w,c
  2483  000740  B4D8               	btfsc	status,2,c
  2484  000742  D008               	goto	l1589
  2485  000744  1E44               	comf	___fttol@lval+3,f,c
  2486  000746  1E43               	comf	___fttol@lval+2,f,c
  2487  000748  1E42               	comf	___fttol@lval+1,f,c
  2488  00074A  6C41               	negf	___fttol@lval,c
  2489  00074C  0E00               	movlw	0
  2490  00074E  2242               	addwfc	___fttol@lval+1,f,c
  2491  000750  2243               	addwfc	___fttol@lval+2,f,c
  2492  000752  2244               	addwfc	___fttol@lval+3,f,c
  2493  000754                     l1589:
  2494  000754  C041  F037         	movff	___fttol@lval,?___fttol
  2495  000758  C042  F038         	movff	___fttol@lval+1,?___fttol+1
  2496  00075C  C043  F039         	movff	___fttol@lval+2,?___fttol+2
  2497  000760  C044  F03A         	movff	___fttol@lval+3,?___fttol+3
  2498  000764  0012               	return	
  2499  000766                     __end_of___fttol:
  2500                           	opt stack 0
  2501                           tblptru	equ	0xFF8
  2502                           tblptrh	equ	0xFF7
  2503                           tblptrl	equ	0xFF6
  2504                           tablat	equ	0xFF5
  2505                           intcon	equ	0xFF2
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function ___ftmul *****************
  2511 ;; Defined at:
  2512 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  f1              3   22[COMRAM] float 
  2515 ;;  f2              3   25[COMRAM] float 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  f3_as_produc    3   32[COMRAM] unsigned um
  2518 ;;  sign            1   36[COMRAM] unsigned char 
  2519 ;;  cntr            1   35[COMRAM] unsigned char 
  2520 ;;  exp             1   31[COMRAM] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  3   22[COMRAM] float 
  2523 ;; Registers used:
  2524 ;;		wreg, status,2, status,0, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         6       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2532 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2533 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2534 ;;Total ram usage:       15 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    2
  2537 ;; This function calls:
  2538 ;;		___ftpack
  2539 ;; This function is called by:
  2540 ;;		_pwm
  2541 ;;		_pwmI
  2542 ;;		_pwmD
  2543 ;;		_start
  2544 ;;		_start1
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text17
  2549  000766                     __ptext17:
  2550                           	opt stack 0
  2551  000766                     ___ftmul:
  2552                           	opt stack 26
  2553                           
  2554                           ;incstack = 0
  2555  000766  C041  F045         	movff	___ftmul@f1+2,??___ftmul
  2556  00076A  6A46               	clrf	(??___ftmul+1)& (0+255),c
  2557  00076C  6A47               	clrf	(??___ftmul+2)& (0+255),c
  2558  00076E  3440               	rlcf	___ftmul@f1+1,w,c
  2559  000770  3645               	rlcf	??___ftmul& (0+255),f,c
  2560  000772  E301               	bnc	u971
  2561  000774  8046               	bsf	(??___ftmul+1)& (0+255),0,c
  2562  000776                     u971:
  2563  000776  5045               	movf	??___ftmul,w,c
  2564  000778  6E48               	movwf	___ftmul@exp,c
  2565  00077A  5048               	movf	___ftmul@exp,w,c
  2566  00077C  A4D8               	btfss	status,2,c
  2567  00077E  D007               	goto	l1487
  2568  000780  0E00               	movlw	0
  2569  000782  6E3F               	movwf	?___ftmul,c
  2570  000784  0E00               	movlw	0
  2571  000786  6E40               	movwf	?___ftmul+1,c
  2572  000788  0E00               	movlw	0
  2573  00078A  6E41               	movwf	?___ftmul+2,c
  2574  00078C  0012               	return	
  2575  00078E                     l1487:
  2576  00078E  C044  F045         	movff	___ftmul@f2+2,??___ftmul
  2577  000792  6A46               	clrf	(??___ftmul+1)& (0+255),c
  2578  000794  6A47               	clrf	(??___ftmul+2)& (0+255),c
  2579  000796  3443               	rlcf	___ftmul@f2+1,w,c
  2580  000798  3645               	rlcf	??___ftmul& (0+255),f,c
  2581  00079A  E301               	bnc	u991
  2582  00079C  8046               	bsf	(??___ftmul+1)& (0+255),0,c
  2583  00079E                     u991:
  2584  00079E  5045               	movf	??___ftmul,w,c
  2585  0007A0  6E4D               	movwf	___ftmul@sign,c
  2586  0007A2  504D               	movf	___ftmul@sign,w,c
  2587  0007A4  A4D8               	btfss	status,2,c
  2588  0007A6  D007               	goto	l1493
  2589  0007A8  0E00               	movlw	0
  2590  0007AA  6E3F               	movwf	?___ftmul,c
  2591  0007AC  0E00               	movlw	0
  2592  0007AE  6E40               	movwf	?___ftmul+1,c
  2593  0007B0  0E00               	movlw	0
  2594  0007B2  6E41               	movwf	?___ftmul+2,c
  2595  0007B4  0012               	return	
  2596  0007B6                     l1493:
  2597  0007B6  504D               	movf	___ftmul@sign,w,c
  2598  0007B8  0F7B               	addlw	123
  2599  0007BA  2648               	addwf	___ftmul@exp,f,c
  2600  0007BC  C041  F04D         	movff	___ftmul@f1+2,___ftmul@sign
  2601  0007C0  5044               	movf	___ftmul@f2+2,w,c
  2602  0007C2  1A4D               	xorwf	___ftmul@sign,f,c
  2603  0007C4  0E80               	movlw	128
  2604  0007C6  164D               	andwf	___ftmul@sign,f,c
  2605  0007C8  8E40               	bsf	___ftmul@f1+1,7,c
  2606  0007CA  8E43               	bsf	___ftmul@f2+1,7,c
  2607  0007CC  0EFF               	movlw	255
  2608  0007CE  1642               	andwf	___ftmul@f2,f,c
  2609  0007D0  0EFF               	movlw	255
  2610  0007D2  1643               	andwf	___ftmul@f2+1,f,c
  2611  0007D4  0E00               	movlw	0
  2612  0007D6  1644               	andwf	___ftmul@f2+2,f,c
  2613  0007D8  0E00               	movlw	0
  2614  0007DA  6E49               	movwf	___ftmul@f3_as_product,c
  2615  0007DC  0E00               	movlw	0
  2616  0007DE  6E4A               	movwf	___ftmul@f3_as_product+1,c
  2617  0007E0  0E00               	movlw	0
  2618  0007E2  6E4B               	movwf	___ftmul@f3_as_product+2,c
  2619  0007E4  0E07               	movlw	7
  2620  0007E6  6E4C               	movwf	___ftmul@cntr,c
  2621  0007E8                     l1507:
  2622  0007E8  A03F               	btfss	___ftmul@f1,0,c
  2623  0007EA  D006               	goto	l1511
  2624  0007EC  5042               	movf	___ftmul@f2,w,c
  2625  0007EE  2649               	addwf	___ftmul@f3_as_product,f,c
  2626  0007F0  5043               	movf	___ftmul@f2+1,w,c
  2627  0007F2  224A               	addwfc	___ftmul@f3_as_product+1,f,c
  2628  0007F4  5044               	movf	___ftmul@f2+2,w,c
  2629  0007F6  224B               	addwfc	___ftmul@f3_as_product+2,f,c
  2630  0007F8                     l1511:
  2631  0007F8  90D8               	bcf	status,0,c
  2632  0007FA  3241               	rrcf	___ftmul@f1+2,f,c
  2633  0007FC  3240               	rrcf	___ftmul@f1+1,f,c
  2634  0007FE  323F               	rrcf	___ftmul@f1,f,c
  2635  000800  90D8               	bcf	status,0,c
  2636  000802  3642               	rlcf	___ftmul@f2,f,c
  2637  000804  3643               	rlcf	___ftmul@f2+1,f,c
  2638  000806  3644               	rlcf	___ftmul@f2+2,f,c
  2639  000808  2E4C               	decfsz	___ftmul@cntr,f,c
  2640  00080A  D7EE               	goto	l1507
  2641  00080C  0E09               	movlw	9
  2642  00080E  6E4C               	movwf	___ftmul@cntr,c
  2643  000810                     l1517:
  2644  000810  A03F               	btfss	___ftmul@f1,0,c
  2645  000812  D006               	goto	l1521
  2646  000814  5042               	movf	___ftmul@f2,w,c
  2647  000816  2649               	addwf	___ftmul@f3_as_product,f,c
  2648  000818  5043               	movf	___ftmul@f2+1,w,c
  2649  00081A  224A               	addwfc	___ftmul@f3_as_product+1,f,c
  2650  00081C  5044               	movf	___ftmul@f2+2,w,c
  2651  00081E  224B               	addwfc	___ftmul@f3_as_product+2,f,c
  2652  000820                     l1521:
  2653  000820  90D8               	bcf	status,0,c
  2654  000822  3241               	rrcf	___ftmul@f1+2,f,c
  2655  000824  3240               	rrcf	___ftmul@f1+1,f,c
  2656  000826  323F               	rrcf	___ftmul@f1,f,c
  2657  000828  90D8               	bcf	status,0,c
  2658  00082A  324B               	rrcf	___ftmul@f3_as_product+2,f,c
  2659  00082C  324A               	rrcf	___ftmul@f3_as_product+1,f,c
  2660  00082E  3249               	rrcf	___ftmul@f3_as_product,f,c
  2661  000830  2E4C               	decfsz	___ftmul@cntr,f,c
  2662  000832  D7EE               	goto	l1517
  2663  000834  C049  F037         	movff	___ftmul@f3_as_product,___ftpack@arg
  2664  000838  C04A  F038         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2665  00083C  C04B  F039         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2666  000840  C048  F03A         	movff	___ftmul@exp,___ftpack@exp
  2667  000844  C04D  F03B         	movff	___ftmul@sign,___ftpack@sign
  2668  000848  EC96  F004         	call	___ftpack	;wreg free
  2669  00084C  C037  F03F         	movff	?___ftpack,?___ftmul
  2670  000850  C038  F040         	movff	?___ftpack+1,?___ftmul+1
  2671  000854  C039  F041         	movff	?___ftpack+2,?___ftmul+2
  2672  000858  0012               	return	
  2673  00085A                     __end_of___ftmul:
  2674                           	opt stack 0
  2675                           tblptru	equ	0xFF8
  2676                           tblptrh	equ	0xFF7
  2677                           tblptrl	equ	0xFF6
  2678                           tablat	equ	0xFF5
  2679                           intcon	equ	0xFF2
  2680                           postinc0	equ	0xFEE
  2681                           wreg	equ	0xFE8
  2682                           status	equ	0xFD8
  2683                           
  2684 ;; *************** function ___ftpack *****************
  2685 ;; Defined at:
  2686 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  2687 ;; Parameters:    Size  Location     Type
  2688 ;;  arg             3   14[COMRAM] unsigned um
  2689 ;;  exp             1   17[COMRAM] unsigned char 
  2690 ;;  sign            1   18[COMRAM] unsigned char 
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  3   14[COMRAM] float 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2, status,0
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2702 ;;      Params:         5       0       0       0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2704 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2705 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2706 ;;Total ram usage:        8 bytes
  2707 ;; Hardware stack levels used:    1
  2708 ;; Hardware stack levels required when called:    1
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		___ftadd
  2713 ;;		___ftmul
  2714 ;; This function uses a non-reentrant model
  2715 ;;
  2716                           
  2717                           	psect	text18
  2718  00092C                     __ptext18:
  2719                           	opt stack 0
  2720  00092C                     ___ftpack:
  2721                           	opt stack 27
  2722                           
  2723                           ;incstack = 0
  2724  00092C  503A               	movf	___ftpack@exp,w,c
  2725  00092E  B4D8               	btfsc	status,2,c
  2726  000930  D005               	goto	l1449
  2727  000932  5037               	movf	___ftpack@arg,w,c
  2728  000934  1038               	iorwf	___ftpack@arg+1,w,c
  2729  000936  1039               	iorwf	___ftpack@arg+2,w,c
  2730  000938  A4D8               	btfss	status,2,c
  2731  00093A  D00C               	goto	l1455
  2732  00093C                     l1449:
  2733  00093C  0E00               	movlw	0
  2734  00093E  6E37               	movwf	?___ftpack,c
  2735  000940  0E00               	movlw	0
  2736  000942  6E38               	movwf	?___ftpack+1,c
  2737  000944  0E00               	movlw	0
  2738  000946  6E39               	movwf	?___ftpack+2,c
  2739  000948  0012               	return	
  2740  00094A                     l1453:
  2741  00094A  2A3A               	incf	___ftpack@exp,f,c
  2742  00094C  90D8               	bcf	status,0,c
  2743  00094E  3239               	rrcf	___ftpack@arg+2,f,c
  2744  000950  3238               	rrcf	___ftpack@arg+1,f,c
  2745  000952  3237               	rrcf	___ftpack@arg,f,c
  2746  000954                     l1455:
  2747  000954  0E00               	movlw	0
  2748  000956  1437               	andwf	___ftpack@arg,w,c
  2749  000958  6E3C               	movwf	??___ftpack& (0+255),c
  2750  00095A  0E00               	movlw	0
  2751  00095C  1438               	andwf	___ftpack@arg+1,w,c
  2752  00095E  6E3D               	movwf	(??___ftpack+1)& (0+255),c
  2753  000960  0EFE               	movlw	254
  2754  000962  1439               	andwf	___ftpack@arg+2,w,c
  2755  000964  6E3E               	movwf	(??___ftpack+2)& (0+255),c
  2756  000966  503C               	movf	??___ftpack,w,c
  2757  000968  103D               	iorwf	??___ftpack+1,w,c
  2758  00096A  103E               	iorwf	??___ftpack+2,w,c
  2759  00096C  B4D8               	btfsc	status,2,c
  2760  00096E  D00C               	goto	l1461
  2761  000970  D7EC               	goto	l1453
  2762  000972                     l1457:
  2763  000972  2A3A               	incf	___ftpack@exp,f,c
  2764  000974  0E01               	movlw	1
  2765  000976  2637               	addwf	___ftpack@arg,f,c
  2766  000978  0E00               	movlw	0
  2767  00097A  2238               	addwfc	___ftpack@arg+1,f,c
  2768  00097C  0E00               	movlw	0
  2769  00097E  2239               	addwfc	___ftpack@arg+2,f,c
  2770  000980  90D8               	bcf	status,0,c
  2771  000982  3239               	rrcf	___ftpack@arg+2,f,c
  2772  000984  3238               	rrcf	___ftpack@arg+1,f,c
  2773  000986  3237               	rrcf	___ftpack@arg,f,c
  2774  000988                     l1461:
  2775  000988  0E00               	movlw	0
  2776  00098A  1437               	andwf	___ftpack@arg,w,c
  2777  00098C  6E3C               	movwf	??___ftpack& (0+255),c
  2778  00098E  0E00               	movlw	0
  2779  000990  1438               	andwf	___ftpack@arg+1,w,c
  2780  000992  6E3D               	movwf	(??___ftpack+1)& (0+255),c
  2781  000994  0EFF               	movlw	255
  2782  000996  1439               	andwf	___ftpack@arg+2,w,c
  2783  000998  6E3E               	movwf	(??___ftpack+2)& (0+255),c
  2784  00099A  503C               	movf	??___ftpack,w,c
  2785  00099C  103D               	iorwf	??___ftpack+1,w,c
  2786  00099E  103E               	iorwf	??___ftpack+2,w,c
  2787  0009A0  B4D8               	btfsc	status,2,c
  2788  0009A2  D006               	goto	l1465
  2789  0009A4  D7E6               	goto	l1457
  2790  0009A6                     l1463:
  2791  0009A6  063A               	decf	___ftpack@exp,f,c
  2792  0009A8  90D8               	bcf	status,0,c
  2793  0009AA  3637               	rlcf	___ftpack@arg,f,c
  2794  0009AC  3638               	rlcf	___ftpack@arg+1,f,c
  2795  0009AE  3639               	rlcf	___ftpack@arg+2,f,c
  2796  0009B0                     l1465:
  2797  0009B0  BE38               	btfsc	___ftpack@arg+1,7,c
  2798  0009B2  D003               	goto	l488
  2799  0009B4  0E02               	movlw	2
  2800  0009B6  603A               	cpfslt	___ftpack@exp,c
  2801  0009B8  D7F6               	goto	l1463
  2802  0009BA                     l488:
  2803  0009BA  A03A               	btfss	___ftpack@exp,0,c
  2804  0009BC  9E38               	bcf	___ftpack@arg+1,7,c
  2805  0009BE  90D8               	bcf	status,0,c
  2806  0009C0  323A               	rrcf	___ftpack@exp,f,c
  2807  0009C2  503A               	movf	___ftpack@exp,w,c
  2808  0009C4  1239               	iorwf	___ftpack@arg+2,f,c
  2809  0009C6  503B               	movf	___ftpack@sign,w,c
  2810  0009C8  A4D8               	btfss	status,2,c
  2811  0009CA  8E39               	bsf	___ftpack@arg+2,7,c
  2812  0009CC  C037  F037         	movff	___ftpack@arg,?___ftpack
  2813  0009D0  C038  F038         	movff	___ftpack@arg+1,?___ftpack+1
  2814  0009D4  C039  F039         	movff	___ftpack@arg+2,?___ftpack+2
  2815  0009D8  0012               	return	
  2816  0009DA                     __end_of___ftpack:
  2817                           	opt stack 0
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           intcon	equ	0xFF2
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _UART_Rx *****************
  2828 ;; Defined at:
  2829 ;;		line 204 in file "nexmain.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2845 ;;      Temps:         14       0       0       0       0       0       0       0       0
  2846 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2847 ;;Total ram usage:       14 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		Interrupt level 2
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           	psect	intcode
  2857  000008                     __pintcode:
  2858                           	opt stack 0
  2859  000008                     _UART_Rx:
  2860                           	opt stack 26
  2861                           
  2862                           ;incstack = 0
  2863  000008  8250               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2864  00000A  EDA7  F002         	call	int_func,f	;refresh shadow registers
  2865                           tblptru	equ	0xFF8
  2866                           tblptrh	equ	0xFF7
  2867                           tblptrl	equ	0xFF6
  2868                           tablat	equ	0xFF5
  2869                           intcon	equ	0xFF2
  2870                           postinc0	equ	0xFEE
  2871                           wreg	equ	0xFE8
  2872                           status	equ	0xFD8
  2873                           
  2874                           	psect	intcode_body
  2875  00054E                     __pintcode_body:
  2876                           	opt stack 26
  2877  00054E                     int_func:
  2878                           	opt stack 26
  2879  00054E  0006               	pop		; remove dummy address from shadow register refresh
  2880  000550  CFFA F029          	movff	pclath,??_UART_Rx
  2881  000554  CFFB F02A          	movff	pclatu,??_UART_Rx+1
  2882  000558  CFE9 F02B          	movff	fsr0l,??_UART_Rx+2
  2883  00055C  CFEA F02C          	movff	fsr0h,??_UART_Rx+3
  2884  000560  CFE1 F02D          	movff	fsr1l,??_UART_Rx+4
  2885  000564  CFE2 F02E          	movff	fsr1h,??_UART_Rx+5
  2886  000568  CFD9 F02F          	movff	fsr2l,??_UART_Rx+6
  2887  00056C  CFDA F030          	movff	fsr2h,??_UART_Rx+7
  2888  000570  CFF3 F031          	movff	prodl,??_UART_Rx+8
  2889  000574  CFF4 F032          	movff	prodh,??_UART_Rx+9
  2890  000578  CFF6 F033          	movff	tblptrl,??_UART_Rx+10
  2891  00057C  CFF7 F034          	movff	tblptrh,??_UART_Rx+11
  2892  000580  CFF8 F035          	movff	tblptru,??_UART_Rx+12
  2893  000584  CFF5 F036          	movff	tablat,??_UART_Rx+13
  2894                           
  2895                           ;nexmain.c: 205: if (RCIF == 1) {
  2896  000588  AA9E               	btfss	3998,5,c	;volatile
  2897  00058A  D055               	goto	i2l215
  2898                           
  2899                           ;nexmain.c: 206: a = RCREG;
  2900  00058C  CFAE F016          	movff	4014,_a	;volatile
  2901  000590  6A17               	clrf	_a+1,c
  2902                           
  2903                           ;nexmain.c: 207: if (a == '0') {
  2904  000592  0E30               	movlw	48
  2905  000594  1816               	xorwf	_a,w,c
  2906  000596  1017               	iorwf	_a+1,w,c
  2907  000598  A4D8               	btfss	status,2,c
  2908  00059A  D004               	goto	i2l1407
  2909                           
  2910                           ;nexmain.c: 208: modo = 0;
  2911  00059C  0E00               	movlw	0
  2912  00059E  6E1B               	movwf	_modo+1,c
  2913  0005A0  0E00               	movlw	0
  2914  0005A2  D023               	goto	L4
  2915  0005A4                     i2l1407:
  2916  0005A4  0E31               	movlw	49
  2917  0005A6  1816               	xorwf	_a,w,c
  2918  0005A8  1017               	iorwf	_a+1,w,c
  2919  0005AA  A4D8               	btfss	status,2,c
  2920  0005AC  D004               	goto	i2l1411
  2921                           
  2922                           ;nexmain.c: 210: modo = 1;
  2923  0005AE  0E00               	movlw	0
  2924  0005B0  6E1B               	movwf	_modo+1,c
  2925  0005B2  0E01               	movlw	1
  2926  0005B4  D01A               	goto	L4
  2927  0005B6                     i2l1411:
  2928  0005B6  0E32               	movlw	50
  2929  0005B8  1816               	xorwf	_a,w,c
  2930  0005BA  1017               	iorwf	_a+1,w,c
  2931  0005BC  A4D8               	btfss	status,2,c
  2932  0005BE  D004               	goto	i2l1415
  2933                           
  2934                           ;nexmain.c: 212: modo = 2;
  2935  0005C0  0E00               	movlw	0
  2936  0005C2  6E1B               	movwf	_modo+1,c
  2937  0005C4  0E02               	movlw	2
  2938  0005C6  D011               	goto	L4
  2939  0005C8                     i2l1415:
  2940  0005C8  0E33               	movlw	51
  2941  0005CA  1816               	xorwf	_a,w,c
  2942  0005CC  1017               	iorwf	_a+1,w,c
  2943  0005CE  A4D8               	btfss	status,2,c
  2944  0005D0  D004               	goto	i2l1419
  2945                           
  2946                           ;nexmain.c: 214: modo = 3;
  2947  0005D2  0E00               	movlw	0
  2948  0005D4  6E1B               	movwf	_modo+1,c
  2949  0005D6  0E03               	movlw	3
  2950  0005D8  D008               	goto	L4
  2951  0005DA                     i2l1419:
  2952  0005DA  0E34               	movlw	52
  2953  0005DC  1816               	xorwf	_a,w,c
  2954  0005DE  1017               	iorwf	_a+1,w,c
  2955  0005E0  A4D8               	btfss	status,2,c
  2956  0005E2  D005               	goto	i2l1423
  2957                           
  2958                           ;nexmain.c: 216: modo = 4;
  2959  0005E4  0E00               	movlw	0
  2960  0005E6  6E1B               	movwf	_modo+1,c
  2961  0005E8  0E04               	movlw	4
  2962  0005EA                     L4:
  2963  0005EA  6E1A               	movwf	_modo,c
  2964                           
  2965                           ;nexmain.c: 217: } else if (a == '5') {
  2966  0005EC  D024               	goto	i2l215
  2967  0005EE                     i2l1423:
  2968  0005EE  0E35               	movlw	53
  2969  0005F0  1816               	xorwf	_a,w,c
  2970  0005F2  1017               	iorwf	_a+1,w,c
  2971  0005F4  A4D8               	btfss	status,2,c
  2972  0005F6  D004               	goto	i2l1427
  2973                           
  2974                           ;nexmain.c: 218: PWM = 1;
  2975  0005F8  0E00               	movlw	0
  2976  0005FA  6E19               	movwf	_PWM+1,c
  2977  0005FC  0E01               	movlw	1
  2978  0005FE  D01A               	goto	L7
  2979  000600                     i2l1427:
  2980  000600  0E36               	movlw	54
  2981  000602  1816               	xorwf	_a,w,c
  2982  000604  1017               	iorwf	_a+1,w,c
  2983  000606  A4D8               	btfss	status,2,c
  2984  000608  D004               	goto	i2l1431
  2985                           
  2986                           ;nexmain.c: 220: PWM = 2;
  2987  00060A  0E00               	movlw	0
  2988  00060C  6E19               	movwf	_PWM+1,c
  2989  00060E  0E02               	movlw	2
  2990  000610  D011               	goto	L7
  2991  000612                     i2l1431:
  2992  000612  0E37               	movlw	55
  2993  000614  1816               	xorwf	_a,w,c
  2994  000616  1017               	iorwf	_a+1,w,c
  2995  000618  A4D8               	btfss	status,2,c
  2996  00061A  D004               	goto	i2l1435
  2997                           
  2998                           ;nexmain.c: 222: PWM = 3;
  2999  00061C  0E00               	movlw	0
  3000  00061E  6E19               	movwf	_PWM+1,c
  3001  000620  0E03               	movlw	3
  3002  000622  D008               	goto	L7
  3003  000624                     i2l1435:
  3004  000624  0E38               	movlw	56
  3005  000626  1816               	xorwf	_a,w,c
  3006  000628  1017               	iorwf	_a+1,w,c
  3007  00062A  A4D8               	btfss	status,2,c
  3008  00062C  D004               	goto	i2l215
  3009                           
  3010                           ;nexmain.c: 224: PWM = 4;
  3011  00062E  0E00               	movlw	0
  3012  000630  6E19               	movwf	_PWM+1,c
  3013  000632  0E04               	movlw	4
  3014  000634                     L7:
  3015  000634  6E18               	movwf	_PWM,c
  3016  000636                     i2l215:
  3017  000636  C036  FFF5         	movff	??_UART_Rx+13,tablat
  3018  00063A  C035  FFF8         	movff	??_UART_Rx+12,tblptru
  3019  00063E  C034  FFF7         	movff	??_UART_Rx+11,tblptrh
  3020  000642  C033  FFF6         	movff	??_UART_Rx+10,tblptrl
  3021  000646  C032  FFF4         	movff	??_UART_Rx+9,prodh
  3022  00064A  C031  FFF3         	movff	??_UART_Rx+8,prodl
  3023  00064E  C030  FFDA         	movff	??_UART_Rx+7,fsr2h
  3024  000652  C02F  FFD9         	movff	??_UART_Rx+6,fsr2l
  3025  000656  C02E  FFE2         	movff	??_UART_Rx+5,fsr1h
  3026  00065A  C02D  FFE1         	movff	??_UART_Rx+4,fsr1l
  3027  00065E  C02C  FFEA         	movff	??_UART_Rx+3,fsr0h
  3028  000662  C02B  FFE9         	movff	??_UART_Rx+2,fsr0l
  3029  000666  C02A  FFFB         	movff	??_UART_Rx+1,pclatu
  3030  00066A  C029  FFFA         	movff	??_UART_Rx,pclath
  3031  00066E  9250               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3032  000670  0011               	retfie		f
  3033  000672                     __end_of_UART_Rx:
  3034                           	opt stack 0
  3035  0000                     pclatu	equ	0xFFB
  3036                           pclath	equ	0xFFA
  3037                           tblptru	equ	0xFF8
  3038                           tblptrh	equ	0xFF7
  3039                           tblptrl	equ	0xFF6
  3040                           tablat	equ	0xFF5
  3041                           prodh	equ	0xFF4
  3042                           prodl	equ	0xFF3
  3043                           intcon	equ	0xFF2
  3044                           postinc0	equ	0xFEE
  3045                           fsr0h	equ	0xFEA
  3046                           fsr0l	equ	0xFE9
  3047                           wreg	equ	0xFE8
  3048                           fsr1h	equ	0xFE2
  3049                           fsr1l	equ	0xFE1
  3050                           fsr2h	equ	0xFDA
  3051                           fsr2l	equ	0xFD9
  3052                           status	equ	0xFD8
  3053                           pclatu	equ	0xFFB
  3054                           pclath	equ	0xFFA
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           prodh	equ	0xFF4
  3060                           prodl	equ	0xFF3
  3061                           intcon	equ	0xFF2
  3062                           postinc0	equ	0xFEE
  3063                           fsr0h	equ	0xFEA
  3064                           fsr0l	equ	0xFE9
  3065                           wreg	equ	0xFE8
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           fsr2h	equ	0xFDA
  3069                           fsr2l	equ	0xFD9
  3070                           status	equ	0xFD8
  3071                           
  3072                           	psect	rparam
  3073  0000                     pclatu	equ	0xFFB
  3074                           pclath	equ	0xFFA
  3075                           tblptru	equ	0xFF8
  3076                           tblptrh	equ	0xFF7
  3077                           tblptrl	equ	0xFF6
  3078                           tablat	equ	0xFF5
  3079                           prodh	equ	0xFF4
  3080                           prodl	equ	0xFF3
  3081                           intcon	equ	0xFF2
  3082                           postinc0	equ	0xFEE
  3083                           fsr0h	equ	0xFEA
  3084                           fsr0l	equ	0xFE9
  3085                           wreg	equ	0xFE8
  3086                           fsr1h	equ	0xFE2
  3087                           fsr1l	equ	0xFE1
  3088                           fsr2h	equ	0xFDA
  3089                           fsr2l	equ	0xFD9
  3090                           status	equ	0xFD8
  3091                           
  3092                           	psect	temp
  3093  000050                     btemp:
  3094                           	opt stack 0
  3095  000050                     	ds	1
  3096  0000                     int$flags	set	btemp
  3097                           pclatu	equ	0xFFB
  3098                           pclath	equ	0xFFA
  3099                           tblptru	equ	0xFF8
  3100                           tblptrh	equ	0xFF7
  3101                           tblptrl	equ	0xFF6
  3102                           tablat	equ	0xFF5
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           intcon	equ	0xFF2
  3106                           postinc0	equ	0xFEE
  3107                           fsr0h	equ	0xFEA
  3108                           fsr0l	equ	0xFE9
  3109                           wreg	equ	0xFE8
  3110                           fsr1h	equ	0xFE2
  3111                           fsr1l	equ	0xFE1
  3112                           fsr2h	equ	0xFDA
  3113                           fsr2l	equ	0xFD9
  3114                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     37      79
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _pwmB2->___ftadd
    _pwmB1->___ftadd
    _pwmA2->___ftadd
    _pwmA1->___ftadd
    ___ftadd->___ftpack
    _pwmI->___ftmul
    _pwmD->___ftmul
    _pwm->___ftmul
    ___ftmul->___ftpack

Critical Paths under _UART_Rx in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _UART_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _UART_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _UART_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _UART_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _UART_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _UART_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _UART_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _UART_Rx in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39248
                           _adelante
                              _atras
                            _derecha
                              _freno
                          _izquierda
                              _pwmA1
                              _pwmA2
                              _pwmB1
                              _pwmB2
                           _settings
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pwmB2                                                0     0      0    4060
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) _pwmB1                                                0     0      0    4708
                            ___ftadd
                             ___ftge
 ---------------------------------------------------------------------------------
 (1) _pwmA2                                                0     0      0    4060
                            ___ftadd
 ---------------------------------------------------------------------------------
 (1) _pwmA1                                                0     0      0    4708
                            ___ftadd
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    4060
                                             22 COMRAM    12     6      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _izquierda                                            0     0      0    5752
                               _pwmI
 ---------------------------------------------------------------------------------
 (2) _pwmI                                                 0     0      0    5752
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _freno                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _derecha                                              0     0      0    5752
                               _pwmD
 ---------------------------------------------------------------------------------
 (2) _pwmD                                                 0     0      0    5752
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     648
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _atras                                                0     0      0    5104
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _adelante                                             0     0      0    5104
                                _pwm
 ---------------------------------------------------------------------------------
 (2) _pwm                                                  0     0      0    5104
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4    1020
                                             14 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    4084
                                             22 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    1992
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _UART_Rx                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adelante
     _pwm
       ___ftmul
         ___ftpack
       ___fttol
   _atras
     _pwm
       ___ftmul
         ___ftpack
       ___fttol
   _derecha
     _pwmD
       ___ftge
       ___ftmul
         ___ftpack
       ___fttol
   _freno
   _izquierda
     _pwmI
       ___ftge
       ___ftmul
         ___ftpack
       ___fttol
   _pwmA1
     ___ftadd
       ___ftpack
     ___ftge
   _pwmA2
     ___ftadd
       ___ftpack
   _pwmB1
     ___ftadd
       ___ftpack
     ___ftge
   _pwmB2
     ___ftadd
       ___ftpack
   _settings

 _UART_Rx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     25      4F       1       84.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4F      20        0.0%
DATA                 0      0      4F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Oct 21 20:15:47 2021

                      _a 0016                        _c 0020                        _i 001E  
                      _x 001C                        _y 004E                       _GO 007E11  
                     _d1 0004                       _d2 0001             ___ftadd@exp1 004A  
           ___ftadd@exp2 0049             ___ftadd@sign 0048                      l511 0056  
                    l515 0080                      l526 0130                      l535 014C  
                    l488 09BA                      _GIE 007F97                      _PR2 000FCB  
                    u971 0776                      u991 079E                      _PWM 0018  
                    _pwm 085A                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l1511 07F8                     l1521 0820  
                   l1507 07E8                     l1611 045C                     l1461 0988  
                   l1453 094A                     l1517 0810                     l1533 0A0A  
                   l1463 09A6                     l1455 0954                     l1543 0A66  
                   l1465 09B0                     l1457 0972                     l1449 093C  
                   l1553 069E                     l1537 0A3A                     l1801 020A  
                   l1571 0704                     l1651 0064                     l1493 07B6  
                   l1581 072C                     l1629 0338                     l1709 0198  
                   l1487 078E                     l1583 0738                     l1575 0714  
                   l1823 0246                     l1807 021A                     l1585 073E  
                   l1681 00EA                     l1673 00BE                     l1657 008E  
                   l1817 0236                     l1691 011E                     l1683 00F4  
                   l1851 0292                     l1835 0266                     l1589 0754  
                   l1597 087E                     l1693 0128                     l1685 00FC  
                   l1845 0282                     l1829 0256                     l1679 00E0  
                   l1863 02B2                     l1775 01C2                     l1873 02CE  
                   l1857 02A2                     l1699 0168                     l1795 01FA  
                   l1779 01D0                     l1885 02EE                     l1789 01EA  
                   l1879 02DE                     l1889 02FC                     ?_pwm 0029  
                   u1061 0682                     u1080 06BC                     u1171 0022  
                   u1085 06B4                     u1181 0036                     _LATA 000F89  
                   _LATB 000F8A                     _LATC 000F8B                     _LATE 000F8D  
                   _PEIE 007F96                     _RCIE 007CED                     _RCIF 007CF5  
                   _TMR2 000FCC          __end_of_UART_Rx 0672                     _main 01BE  
           ___ftpack@arg 0037                     _modo 001A             ___ftpack@exp 003A  
                   _pwmD 042A                     _pwmI 0306                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0050  
                   prodh 000FF4                     prodl 000FF3                     start 000E  
           ___ftmul@cntr 004C             ___param_bank 000000             ___ftmul@sign 004D  
           ___fttol@exp1 0045             ___fttol@lval 0041                    ??_pwm 004E  
                  ?_main 0029          __end_of___ftadd 01BE                    ?_pwmD 0029  
                  ?_pwmI 0029          __end_of___ftmul 085A          __end_of___fttol 0766  
                  _T2CON 000FCA                    _LATB0 007C50                    _LATB1 007C51  
                  _LATB2 007C52                    _LATB3 007C53                    i2l215 0636  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISE 000F96                    _TXSTA 000FAC          __end_of_derecha 0C3E  
                  _atras 0C3E                    _freno 0C5A                    _pwmA1 0B2A  
                  _pwmA2 0BBA                    _pwmB1 0AD4                    _pwmB2 0B80  
          ___ftpack@sign 003B                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 0BF4             __end_of_main 0306  
           __end_of_pwmD 054E             __end_of_pwmI 042A                   ??_main 004E  
          ___fttol@sign1 0040                   ??_pwmD 004E                   ??_pwmI 004E  
          __activetblptr 000000                ??_UART_Rx 0029                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_atras 0029  
                 ?_freno 0029                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_pwmA1 0029                   ?_pwmA2 0029                   ?_pwmB1 0029  
                 ?_pwmB2 0029                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       __end_of___ftpack 09DA                   i2l1411 05B6                   i2l1431 0612  
                 i2l1423 05EE                   i2l1415 05C8                   i2l1407 05A4  
                 i2l1435 0624                   i2l1427 0600                   i2l1419 05DA  
       __end_of_adelante 0C5A                   _OSCCON 000FD3                   ___ftge 09DA  
              ??___ftadd 0045                ??___ftmul 0045                ??___fttol 003B  
                 clear_0 0C12                ??_derecha 004E    ___ftmul@f3_as_product 0049  
           __pdataCOMRAM 004E         __end_of_settings 0AD4                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0C18               ___ftadd@f1 003F               ___ftadd@f2 0042  
             ___ftge@ff1 0037               ___ftge@ff2 003A            ___rparam_used 000001  
             ___ftmul@f1 003F               ___ftmul@f2 0042               ___fttol@f1 0037  
         __pcstackCOMRAM 0029            __end_of_atras 0C4C            __end_of_freno 0C64  
          __end_of_pwmA1 0B80            __end_of_pwmA2 0BF4            __end_of_pwmB1 0B2A  
          __end_of_pwmB2 0BBA                  ??_atras 004E                  ??_freno 0037  
                ??_pwmA1 004B                  ??_pwmA2 004B                  ??_pwmB1 004B  
                ??_pwmB2 004B                  ?___ftge 0037                  _CCP1CON 000FBD  
                _CCP2CON 000FBA                ?___ftpack 0037                ?_adelante 0029  
     __size_of_izquierda 000E                  _UART_Rx 0008                  __Hparam 0000  
                __Lparam 0000                ?_settings 0029          __size_of___ftge 0090  
                ___ftadd 0012                  ___ftmul 0766                  ___fttol 0672  
                __pcinit 0BF4               ??___ftpack 003C                  __ramtop 0800  
                _derecha 0C30                  __ptext0 01BE                  __ptext1 0A6A  
                __ptext2 0B80                  __ptext3 0AD4                  __ptext4 0BBA  
                __ptext5 0B2A                  __ptext6 0012                  __ptext7 0C22  
                __ptext8 0306                  __ptext9 0C5A               ??_adelante 004E  
              _T2CONbits 000FCA             __size_of_pwm 00D2           __pintcode_body 054E  
   end_of_initialization 0C18                  int_func 054E        __end_of_izquierda 0C30  
             ??_settings 0037                  postinc0 000FEE                _TRISCbits 000F94  
            ___ftmul@exp 0048           __end_of___ftge 0A6A            __pidataCOMRAM 0C64  
    start_initialization 0BF4              __end_of_pwm 092C                 ??___ftge 003D  
      __size_of___ftpack 00AE              __pbssCOMRAM 0001        __size_of_adelante 000E  
               ?_UART_Rx 0029              _ciclo_util1 000A              _ciclo_util2 0007  
              __pintcode 0008                 ?___ftadd 003F                 ?___ftmul 003F  
               ?___fttol 0037        __size_of_settings 006A                 ?_derecha 0029  
         __size_of_atras 000E           __size_of_freno 000A           __size_of_pwmA1 0056  
         __size_of_pwmA2 003A           __size_of_pwmB1 0056           __size_of_pwmB2 003A  
              _izquierda 0C22               _ADCON0bits 000FC2              _conversion1 0013  
            _conversion2 0010              _conversion3 000D         __size_of_UART_Rx 066A  
               __Hrparam 0000                 __Lrparam 0000               ?_izquierda 0029  
       __size_of___ftadd 01AC         __size_of___ftmul 00F4         __size_of___fttol 00F4  
               ___ftpack 092C         __size_of_derecha 000E                 _adelante 0C4C  
               __ptext10 0C30                 __ptext11 042A                 __ptext12 09DA  
               __ptext13 0C3E                 __ptext14 0C4C                 __ptext15 085A  
               __ptext16 0672                 __ptext17 0766                 __ptext18 092C  
            _duty_cicle1 0026              _duty_cicle2 0023            __size_of_main 0148  
          __size_of_pwmD 0124            __size_of_pwmI 0124                 _settings 0A6A  
               int$flags 0050                 intlevel2 0000              ??_izquierda 004E  
    __CFG_FOSC$INTOSC_HS 000000  
