

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Mar 14 15:47:55 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    44  0000                     
    45                           ; Version 1.41
    46                           ; Generated 25/01/2017 GMT
    47                           ; 
    48                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001820                     __pidataCOMRAM:
    82                           	opt stack 0
    83                           
    84                           ;initializer for _y
    85  001820  0001               	dw	1
    86  0000                     _RCREG	set	4014
    87  0000                     _ADRESL	set	4035
    88  0000                     _ADRESH	set	4036
    89  0000                     _T2CONbits	set	4042
    90  0000                     _TMR2	set	4044
    91  0000                     _ADCON0bits	set	4034
    92  0000                     _TXSTA	set	4012
    93  0000                     _RCSTA	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _TRISCbits	set	3988
    96  0000                     _CCP2CON	set	4026
    97  0000                     _CCPR2L	set	4027
    98  0000                     _CCP1CON	set	4029
    99  0000                     _CCPR1L	set	4030
   100  0000                     _LATC	set	3979
   101  0000                     _TRISC	set	3988
   102  0000                     _T2CON	set	4042
   103  0000                     _PR2	set	4043
   104  0000                     _LATD	set	3980
   105  0000                     _TRISD	set	3989
   106  0000                     _LATE	set	3981
   107  0000                     _TRISE	set	3990
   108  0000                     _LATA	set	3977
   109  0000                     _TRISA	set	3986
   110  0000                     _LATB	set	3978
   111  0000                     _TRISB	set	3987
   112  0000                     _ADCON2	set	4032
   113  0000                     _ADCON1	set	4033
   114  0000                     _ADCON0	set	4034
   115  0000                     _OSCCON	set	4051
   116  0000                     _LATEbits	set	3981
   117  0000                     _LATAbits	set	3977
   118  0000                     _LATD3	set	31843
   119  0000                     _LATD2	set	31842
   120  0000                     _LATD1	set	31841
   121  0000                     _LATD0	set	31840
   122  0000                     _GO	set	32273
   123  0000                     _INT2IP	set	32647
   124  0000                     _INTEDG2	set	32652
   125  0000                     _INT2IF	set	32641
   126  0000                     _INT2IE	set	32644
   127  0000                     _INT1IP	set	32646
   128  0000                     _INTEDG1	set	32653
   129  0000                     _INT1IF	set	32640
   130  0000                     _INT1IE	set	32643
   131  0000                     _RCIP	set	31997
   132  0000                     _RCIF	set	31989
   133  0000                     _RCIE	set	31981
   134  0000                     _PEIE	set	32662
   135  0000                     _GIE	set	32663
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  00175E                     __pcinit:
   141                           	opt stack 0
   142  00175E                     start_initialization:
   143                           	opt stack 0
   144  00175E                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (2 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  00175E  0E20               	movlw	low __pidataCOMRAM
   150  001760  6EF6               	movwf	tblptrl,c
   151  001762  0E18               	movlw	high __pidataCOMRAM
   152  001764  6EF7               	movwf	tblptrh,c
   153  001766  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  001768  6EF8               	movwf	tblptru,c
   155  00176A  0009               	tblrd		*+	;fetch initializer
   156  00176C  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   157  001770  0009               	tblrd		*+	;fetch initializer
   158  001772  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   159                           
   160                           ; Clear objects allocated to BANK0 (22 bytes)
   161  001776  EE00  F090         	lfsr	0,__pbssBANK0
   162  00177A  0E16               	movlw	22
   163  00177C                     clear_0:
   164  00177C  6AEE               	clrf	postinc0,c
   165  00177E  06E8               	decf	wreg,f,c
   166  001780  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to COMRAM (29 bytes)
   169  001782  EE00  F021         	lfsr	0,__pbssCOMRAM
   170  001786  0E1D               	movlw	29
   171  001788                     clear_1:
   172  001788  6AEE               	clrf	postinc0,c
   173  00178A  06E8               	decf	wreg,f,c
   174  00178C  E1FD               	bnz	clear_1
   175  00178E                     end_of_initialization:
   176                           	opt stack 0
   177  00178E                     __end_of__initialization:
   178                           	opt stack 0
   179  00178E  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  001790  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  001792  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182  001794  6EF8               	movwf	tblptru,c
   183  001796  0100               	movlb	0
   184  001798  EF25  F00B         	goto	_main	;jump to C main() function
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssCOMRAM
   193  000021                     __pbssCOMRAM:
   194                           	opt stack 0
   195  000021                     _b:
   196                           	opt stack 0
   197  000021                     	ds	3
   198  000024                     _ciclo_util1:
   199                           	opt stack 0
   200  000024                     	ds	3
   201  000027                     _conversion3:
   202                           	opt stack 0
   203  000027                     	ds	3
   204  00002A                     _conversion2:
   205                           	opt stack 0
   206  00002A                     	ds	3
   207  00002D                     _conversion1:
   208                           	opt stack 0
   209  00002D                     	ds	3
   210  000030                     _n:
   211                           	opt stack 0
   212  000030                     	ds	2
   213  000032                     _s:
   214                           	opt stack 0
   215  000032                     	ds	2
   216  000034                     _z:
   217                           	opt stack 0
   218  000034                     	ds	2
   219  000036                     _i:
   220                           	opt stack 0
   221  000036                     	ds	2
   222  000038                     _duty_cicle2:
   223                           	opt stack 0
   224  000038                     	ds	3
   225  00003B                     _duty_cicle1:
   226                           	opt stack 0
   227  00003B                     	ds	3
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	dataCOMRAM
   236  00003E                     __pdataCOMRAM:
   237                           	opt stack 0
   238  00003E                     _y:
   239                           	opt stack 0
   240  00003E                     	ds	2
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           
   248                           	psect	bssBANK0
   249  000090                     __pbssBANK0:
   250                           	opt stack 0
   251  000090                     _d2:
   252                           	opt stack 0
   253  000090                     	ds	3
   254  000093                     _d1:
   255                           	opt stack 0
   256  000093                     	ds	3
   257  000096                     _ciclo_util2:
   258                           	opt stack 0
   259  000096                     	ds	3
   260  000099                     _a:
   261                           	opt stack 0
   262  000099                     	ds	2
   263  00009B                     _mood:
   264                           	opt stack 0
   265  00009B                     	ds	2
   266  00009D                     _PWM:
   267                           	opt stack 0
   268  00009D                     	ds	2
   269  00009F                     _modo:
   270                           	opt stack 0
   271  00009F                     	ds	2
   272  0000A1                     _x:
   273                           	opt stack 0
   274  0000A1                     	ds	2
   275  0000A3                     _c:
   276                           	opt stack 0
   277  0000A3                     	ds	3
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285                           	psect	cstackBANK0
   286  000060                     __pcstackBANK0:
   287                           	opt stack 0
   288  000060                     ?___ftpack:
   289                           	opt stack 0
   290  000060                     ?___fttol:
   291                           	opt stack 0
   292  000060                     ___ftpack@arg:
   293                           	opt stack 0
   294  000060                     ___ftge@ff1:
   295                           	opt stack 0
   296  000060                     ___fttol@f1:
   297                           	opt stack 0
   298                           
   299                           ; 3 bytes @ 0x0
   300  000060                     	ds	3
   301  000063                     ___ftpack@exp:
   302                           	opt stack 0
   303  000063                     ___ftge@ff2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0x3
   307  000063                     	ds	1
   308  000064                     ??___fttol:
   309  000064                     ___ftpack@sign:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x4
   313  000064                     	ds	1
   314  000065                     ??___ftpack:
   315                           
   316                           ; 1 bytes @ 0x5
   317  000065                     	ds	1
   318  000066                     ??___ftge:
   319                           
   320                           ; 1 bytes @ 0x6
   321  000066                     	ds	2
   322  000068                     ?___awtoft:
   323                           	opt stack 0
   324  000068                     ___awtoft@c:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x8
   328  000068                     	ds	1
   329  000069                     ___fttol@sign1:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x9
   333  000069                     	ds	1
   334  00006A                     ___fttol@lval:
   335                           	opt stack 0
   336                           
   337                           ; 4 bytes @ 0xA
   338  00006A                     	ds	1
   339  00006B                     ?___ftmul:
   340                           	opt stack 0
   341  00006B                     ___ftmul@f1:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0xB
   345  00006B                     	ds	3
   346  00006E                     ___fttol@exp1:
   347                           	opt stack 0
   348  00006E                     ___ftmul@f2:
   349                           	opt stack 0
   350                           
   351                           ; 3 bytes @ 0xE
   352  00006E                     	ds	3
   353  000071                     ??___ftmul:
   354                           
   355                           ; 1 bytes @ 0x11
   356  000071                     	ds	3
   357  000074                     ___ftmul@exp:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x14
   361  000074                     	ds	1
   362  000075                     ___ftmul@f3_as_product:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x15
   366  000075                     	ds	3
   367  000078                     ___ftmul@cntr:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x18
   371  000078                     	ds	1
   372  000079                     ___ftmul@sign:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x19
   376  000079                     	ds	1
   377  00007A                     ??_adelante:
   378  00007A                     ??_atras:
   379  00007A                     ??_start2:
   380  00007A                     ?___ftadd:
   381                           	opt stack 0
   382  00007A                     ___ftadd@f1:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1A
   386  00007A                     	ds	2
   387  00007C                     ??_automatico:
   388                           
   389                           ; 1 bytes @ 0x1C
   390  00007C                     	ds	1
   391  00007D                     ___ftadd@f2:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x1D
   395  00007D                     	ds	3
   396  000080                     ??___ftadd:
   397                           
   398                           ; 1 bytes @ 0x20
   399  000080                     	ds	3
   400  000083                     ___ftadd@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x23
   404  000083                     	ds	1
   405  000084                     ___ftadd@exp2:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x24
   409  000084                     	ds	1
   410  000085                     ___ftadd@exp1:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x25
   414  000085                     	ds	1
   415  000086                     ??_start:
   416  000086                     ??_start1:
   417                           
   418                           ; 1 bytes @ 0x26
   419  000086                     	ds	2
   420  000088                     _start$932:
   421                           	opt stack 0
   422  000088                     _start1$934:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x28
   426  000088                     	ds	3
   427  00008B                     _start$933:
   428                           	opt stack 0
   429  00008B                     _start1$935:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x2B
   433  00008B                     	ds	3
   434  00008E                     ??_main:
   435                           
   436                           ; 1 bytes @ 0x2E
   437  00008E                     	ds	2
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445                           	psect	cstackCOMRAM
   446  000001                     __pcstackCOMRAM:
   447                           	opt stack 0
   448  000001                     ??_UART_Rx:
   449  000001                     
   450                           ; 1 bytes @ 0x0
   451  000001                     	ds	14
   452  00000F                     ??_sensor:
   453                           
   454                           ; 1 bytes @ 0xE
   455  00000F                     	ds	17
   456  000020                     ___awtoft@sign:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x1F
   460  000020                     	ds	1
   461  000021                     tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           ; 1 bytes @ 0x20
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 60 in file "newmain.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       2       0       0       0       0       0       0       0
   491 ;;      Totals:         0       2       0       0       0       0       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels required when called:    8
   494 ;; This function calls:
   495 ;;		_automatico
   496 ;;		_manual
   497 ;;		_settings
   498 ;;		_start
   499 ;;		_start1
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text0
   506  00164A                     __ptext0:
   507                           	opt stack 0
   508  00164A                     _main:
   509                           	opt stack 23
   510                           
   511                           ;newmain.c: 61: settings();
   512                           
   513                           ;incstack = 0
   514  00164A  EC81  F00A         	call	_settings	;wreg free
   515                           
   516                           ;newmain.c: 65: switch (mood) {
   517                           
   518                           ;newmain.c: 62: while (1) {
   519  00164E  D010               	goto	l3058
   520  001650                     l179:
   521                           
   522                           ; BSR set to: 0
   523                           ;newmain.c: 67: LATAbits.LA5 = 0;
   524  001650  9A89               	bcf	3977,5,c	;volatile
   525                           
   526                           ;newmain.c: 68: LATEbits.LATE0 = 1;
   527  001652  808D               	bsf	3981,0,c	;volatile
   528                           
   529                           ; BSR set to: 0
   530                           ;newmain.c: 69: manual();
   531  001654  ECE3  F002         	call	_manual	;wreg free
   532                           
   533                           ;newmain.c: 70: break;
   534  001658  D01D               	goto	l3060
   535  00165A                     l181:
   536                           
   537                           ; BSR set to: 0
   538                           ;newmain.c: 72: LATAbits.LA5 = 1;
   539  00165A  8A89               	bsf	3977,5,c	;volatile
   540                           
   541                           ;newmain.c: 73: LATEbits.LATE0 = 0;
   542  00165C  908D               	bcf	3981,0,c	;volatile
   543                           
   544                           ; BSR set to: 0
   545                           ;newmain.c: 74: automatico();
   546  00165E  EC5F  F000         	call	_automatico	;wreg free
   547                           
   548                           ;newmain.c: 75: break;
   549  001662  D018               	goto	l3060
   550  001664                     l3056:
   551                           
   552                           ;newmain.c: 77: mood = 0;
   553  001664  0E00               	movlw	0
   554  001666  0100               	movlb	0	; () banked
   555  001668  6F9C               	movwf	(_mood+1)& (0+255),b
   556  00166A  0E00               	movlw	0
   557  00166C  6F9B               	movwf	_mood& (0+255),b
   558                           
   559                           ;newmain.c: 78: }
   560  00166E  D012               	goto	l3060
   561  001670                     l3058:
   562  001670  C09B  F08E         	movff	_mood,??_main
   563  001674  C09C  F08F         	movff	_mood+1,??_main+1
   564                           
   565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   566                           ; Switch size 1, requested type "space"
   567                           ; Number of cases is 1, Range of values is 0 to 0
   568                           ; switch strategies available:
   569                           ; Name         Instructions Cycles
   570                           ; simple_byte            4     3 (average)
   571                           ;	Chosen strategy is simple_byte
   572  001678  0100               	movlb	0	; () banked
   573  00167A  518F               	movf	(??_main+1)& (0+255),w,b
   574  00167C  0A00               	xorlw	0	; case 0
   575  00167E  A4D8               	btfss	status,2,c
   576  001680  D7F1               	goto	l3056
   577                           
   578                           ; BSR set to: 0
   579                           ; Switch size 1, requested type "space"
   580                           ; Number of cases is 2, Range of values is 1 to 2
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte            7     4 (average)
   584                           ;	Chosen strategy is simple_byte
   585  001682  0100               	movlb	0	; () banked
   586  001684  518E               	movf	??_main& (0+255),w,b
   587  001686  0A01               	xorlw	1	; case 1
   588  001688  B4D8               	btfsc	status,2,c
   589  00168A  D7E2               	goto	l179
   590  00168C  0A03               	xorlw	3	; case 2
   591  00168E  B4D8               	btfsc	status,2,c
   592  001690  D7E4               	goto	l181
   593  001692  D7E8               	goto	l3056
   594  001694                     l3060:
   595                           
   596                           ;newmain.c: 83: start();
   597  001694  EC3E  F006         	call	_start	;wreg free
   598                           
   599                           ;newmain.c: 84: start1();
   600  001698  EC92  F005         	call	_start1	;wreg free
   601  00169C  D7E9               	goto	l3058
   602  00169E                     __end_of_main:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           status	equ	0xFD8
   611                           
   612 ;; *************** function _start1 *****************
   613 ;; Defined at:
   614 ;;		line 159 in file "newmain.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   628 ;;      Params:         0       0       0       0       0       0       0       0       0
   629 ;;      Locals:         0       6       0       0       0       0       0       0       0
   630 ;;      Temps:          0       2       0       0       0       0       0       0       0
   631 ;;      Totals:         0       8       0       0       0       0       0       0       0
   632 ;;Total ram usage:        8 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    5
   635 ;; This function calls:
   636 ;;		___awtoft
   637 ;;		___ftadd
   638 ;;		___ftmul
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text1
   645  000B24                     __ptext1:
   646                           	opt stack 0
   647  000B24                     _start1:
   648                           	opt stack 25
   649                           
   650                           ;newmain.c: 160: ADCON0bits.GO = 1;
   651                           
   652                           ;incstack = 0
   653  000B24  82C2               	bsf	4034,1,c	;volatile
   654  000B26                     l198:
   655  000B26  B2C2               	btfsc	4034,1,c	;volatile
   656  000B28  D7FE               	goto	l198
   657                           
   658                           ;newmain.c: 162: if (x == 1) {
   659  000B2A  0100               	movlb	0	; () banked
   660  000B2C  05A1               	decf	_x& (0+255),w,b
   661  000B2E  0100               	movlb	0	; () banked
   662  000B30  11A2               	iorwf	(_x+1)& (0+255),w,b
   663  000B32  A4D8               	btfss	status,2,c
   664  000B34  0012               	return	
   665                           
   666                           ; BSR set to: 0
   667                           ;newmain.c: 163: _delay((unsigned long)((10)*(8000000/4000.0)));
   668  000B36  0E1A               	movlw	26
   669  000B38  0100               	movlb	0	; () banked
   670  000B3A  6F86               	movwf	??_start1& (0+255),b
   671  000B3C  0EF8               	movlw	248
   672  000B3E                     u2907:
   673  000B3E  2EE8               	decfsz	wreg,f,c
   674  000B40  D7FE               	bra	u2907
   675  000B42  2F86               	decfsz	??_start1& (0+255),f,b
   676  000B44  D7FC               	bra	u2907
   677  000B46  F000               	nop	
   678                           
   679                           ;newmain.c: 164: a = ADRESH << 8 | ADRESL;
   680  000B48  50C3               	movf	4035,w,c	;volatile
   681  000B4A  CFC4 F086          	movff	4036,??_start1	;volatile
   682  000B4E  0100               	movlb	0	; () banked
   683  000B50  6B87               	clrf	(??_start1+1)& (0+255),b
   684  000B52  C086  F087         	movff	??_start1,??_start1+1
   685  000B56  0100               	movlb	0	; () banked
   686  000B58  6B86               	clrf	??_start1& (0+255),b
   687  000B5A  0100               	movlb	0	; () banked
   688  000B5C  1186               	iorwf	??_start1& (0+255),w,b
   689  000B5E  0100               	movlb	0	; () banked
   690  000B60  6F99               	movwf	_a& (0+255),b
   691  000B62  0100               	movlb	0	; () banked
   692  000B64  5187               	movf	(??_start1+1)& (0+255),w,b
   693  000B66  0100               	movlb	0	; () banked
   694  000B68  6F9A               	movwf	(_a+1)& (0+255),b
   695                           
   696                           ; BSR set to: 0
   697                           ;newmain.c: 165: c = (float) a * (5.0 / 1023.0);
   698  000B6A  C099  F068         	movff	_a,___awtoft@c
   699  000B6E  C09A  F069         	movff	_a+1,___awtoft@c+1
   700  000B72  EC8F  F00B         	call	___awtoft	;wreg free
   701  000B76  C068  F06B         	movff	?___awtoft,___ftmul@f1
   702  000B7A  C069  F06C         	movff	?___awtoft+1,___ftmul@f1+1
   703  000B7E  C06A  F06D         	movff	?___awtoft+2,___ftmul@f1+2
   704  000B82  0E28               	movlw	40
   705  000B84  0100               	movlb	0	; () banked
   706  000B86  6F6E               	movwf	___ftmul@f2& (0+255),b
   707  000B88  0EA0               	movlw	160
   708  000B8A  0100               	movlb	0	; () banked
   709  000B8C  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   710  000B8E  0E3B               	movlw	59
   711  000B90  0100               	movlb	0	; () banked
   712  000B92  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   713  000B94  ECE3  F004         	call	___ftmul	;wreg free
   714  000B98  C06B  F0A3         	movff	?___ftmul,_c
   715  000B9C  C06C  F0A4         	movff	?___ftmul+1,_c+1
   716  000BA0  C06D  F0A5         	movff	?___ftmul+2,_c+2
   717                           
   718                           ;newmain.c: 166: d2 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   719  000BA4  C0A3  F06E         	movff	_c,___ftmul@f2
   720  000BA8  C0A4  F06F         	movff	_c+1,___ftmul@f2+1
   721  000BAC  C0A5  F070         	movff	_c+2,___ftmul@f2+2
   722  000BB0  C0A3  F06B         	movff	_c,___ftmul@f1
   723  000BB4  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   724  000BB8  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   725  000BBC  ECE3  F004         	call	___ftmul	;wreg free
   726  000BC0  C06B  F088         	movff	?___ftmul,_start1$934
   727  000BC4  C06C  F089         	movff	?___ftmul+1,_start1$934+1
   728  000BC8  C06D  F08A         	movff	?___ftmul+2,_start1$934+2
   729                           
   730                           ;newmain.c: 166: d2 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   731  000BCC  0E1D               	movlw	29
   732  000BCE  0100               	movlb	0	; () banked
   733  000BD0  6F6E               	movwf	___ftmul@f2& (0+255),b
   734  000BD2  0E1A               	movlw	26
   735  000BD4  0100               	movlb	0	; () banked
   736  000BD6  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   737  000BD8  0E3F               	movlw	63
   738  000BDA  0100               	movlb	0	; () banked
   739  000BDC  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   740  000BDE  C0A3  F06B         	movff	_c,___ftmul@f1
   741  000BE2  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   742  000BE6  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   743  000BEA  ECE3  F004         	call	___ftmul	;wreg free
   744  000BEE  C06B  F07D         	movff	?___ftmul,___ftadd@f2
   745  000BF2  C06C  F07E         	movff	?___ftmul+1,___ftadd@f2+1
   746  000BF6  C06D  F07F         	movff	?___ftmul+2,___ftadd@f2+2
   747  000BFA  0E6F               	movlw	111
   748  000BFC  0100               	movlb	0	; () banked
   749  000BFE  6F6E               	movwf	___ftmul@f2& (0+255),b
   750  000C00  0E92               	movlw	146
   751  000C02  0100               	movlb	0	; () banked
   752  000C04  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   753  000C06  0E3E               	movlw	62
   754  000C08  0100               	movlb	0	; () banked
   755  000C0A  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   756  000C0C  C088  F06B         	movff	_start1$934,___ftmul@f1
   757  000C10  C089  F06C         	movff	_start1$934+1,___ftmul@f1+1
   758  000C14  C08A  F06D         	movff	_start1$934+2,___ftmul@f1+2
   759  000C18  ECE3  F004         	call	___ftmul	;wreg free
   760  000C1C  C06B  F07A         	movff	?___ftmul,___ftadd@f1
   761  000C20  C06C  F07B         	movff	?___ftmul+1,___ftadd@f1+1
   762  000C24  C06D  F07C         	movff	?___ftmul+2,___ftadd@f1+2
   763  000C28  ECAF  F001         	call	___ftadd	;wreg free
   764  000C2C  C07A  F08B         	movff	?___ftadd,_start1$935
   765  000C30  C07B  F08C         	movff	?___ftadd+1,_start1$935+1
   766  000C34  C07C  F08D         	movff	?___ftadd+2,_start1$935+2
   767                           
   768                           ;newmain.c: 166: d2 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   769  000C38  C08B  F07A         	movff	_start1$935,___ftadd@f1
   770  000C3C  C08C  F07B         	movff	_start1$935+1,___ftadd@f1+1
   771  000C40  C08D  F07C         	movff	_start1$935+2,___ftadd@f1+2
   772  000C44  0EE5               	movlw	229
   773  000C46  0100               	movlb	0	; () banked
   774  000C48  6F7D               	movwf	___ftadd@f2& (0+255),b
   775  000C4A  0E10               	movlw	16
   776  000C4C  0100               	movlb	0	; () banked
   777  000C4E  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
   778  000C50  0EBE               	movlw	190
   779  000C52  0100               	movlb	0	; () banked
   780  000C54  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
   781  000C56  ECAF  F001         	call	___ftadd	;wreg free
   782  000C5A  C07A  F090         	movff	?___ftadd,_d2
   783  000C5E  C07B  F091         	movff	?___ftadd+1,_d2+1
   784  000C62  C07C  F092         	movff	?___ftadd+2,_d2+2
   785                           
   786                           ;newmain.c: 167: _delay((unsigned long)((3)*(8000000/4000000.0)));
   787  000C66  D000               	nop2		;2 cycle nop
   788  000C68  D000               	nop2		;2 cycle nop
   789  000C6A  D000               	nop2		;2 cycle nop
   790                           
   791                           ;newmain.c: 168: ADCON0 = 0x09;
   792  000C6C  0E09               	movlw	9
   793  000C6E  6EC2               	movwf	4034,c	;volatile
   794                           
   795                           ;newmain.c: 169: x = 2;
   796  000C70  0E00               	movlw	0
   797  000C72  0100               	movlb	0	; () banked
   798  000C74  6FA2               	movwf	(_x+1)& (0+255),b
   799  000C76  0E02               	movlw	2
   800  000C78  6FA1               	movwf	_x& (0+255),b
   801  000C7A  0012               	return	
   802  000C7C                     __end_of_start1:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           status	equ	0xFD8
   811                           
   812 ;; *************** function _start *****************
   813 ;; Defined at:
   814 ;;		line 145 in file "newmain.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         0       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       6       0       0       0       0       0       0       0
   830 ;;      Temps:          0       2       0       0       0       0       0       0       0
   831 ;;      Totals:         0       8       0       0       0       0       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    5
   835 ;; This function calls:
   836 ;;		___awtoft
   837 ;;		___ftadd
   838 ;;		___ftmul
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text2
   845  000C7C                     __ptext2:
   846                           	opt stack 0
   847  000C7C                     _start:
   848                           	opt stack 25
   849                           
   850                           ;newmain.c: 146: ADCON0bits.GO = 1;
   851                           
   852                           ; BSR set to: 0
   853                           ;incstack = 0
   854  000C7C  82C2               	bsf	4034,1,c	;volatile
   855  000C7E                     l191:
   856  000C7E  B2C2               	btfsc	4034,1,c	;volatile
   857  000C80  D7FE               	goto	l191
   858                           
   859                           ;newmain.c: 148: if (x == 0) {
   860  000C82  0100               	movlb	0	; () banked
   861  000C84  51A1               	movf	_x& (0+255),w,b
   862  000C86  0100               	movlb	0	; () banked
   863  000C88  11A2               	iorwf	(_x+1)& (0+255),w,b
   864  000C8A  A4D8               	btfss	status,2,c
   865  000C8C  0012               	return	
   866                           
   867                           ; BSR set to: 0
   868                           ;newmain.c: 149: _delay((unsigned long)((10)*(8000000/4000.0)));
   869  000C8E  0E1A               	movlw	26
   870  000C90  0100               	movlb	0	; () banked
   871  000C92  6F86               	movwf	??_start& (0+255),b
   872  000C94  0EF8               	movlw	248
   873  000C96                     u2917:
   874  000C96  2EE8               	decfsz	wreg,f,c
   875  000C98  D7FE               	bra	u2917
   876  000C9A  2F86               	decfsz	??_start& (0+255),f,b
   877  000C9C  D7FC               	bra	u2917
   878  000C9E  F000               	nop	
   879                           
   880                           ;newmain.c: 150: a = ADRESH << 8 | ADRESL;
   881  000CA0  50C3               	movf	4035,w,c	;volatile
   882  000CA2  CFC4 F086          	movff	4036,??_start	;volatile
   883  000CA6  0100               	movlb	0	; () banked
   884  000CA8  6B87               	clrf	(??_start+1)& (0+255),b
   885  000CAA  C086  F087         	movff	??_start,??_start+1
   886  000CAE  0100               	movlb	0	; () banked
   887  000CB0  6B86               	clrf	??_start& (0+255),b
   888  000CB2  0100               	movlb	0	; () banked
   889  000CB4  1186               	iorwf	??_start& (0+255),w,b
   890  000CB6  0100               	movlb	0	; () banked
   891  000CB8  6F99               	movwf	_a& (0+255),b
   892  000CBA  0100               	movlb	0	; () banked
   893  000CBC  5187               	movf	(??_start+1)& (0+255),w,b
   894  000CBE  0100               	movlb	0	; () banked
   895  000CC0  6F9A               	movwf	(_a+1)& (0+255),b
   896                           
   897                           ; BSR set to: 0
   898                           ;newmain.c: 151: c = (float) a * (5.0 / 1023.0);
   899  000CC2  C099  F068         	movff	_a,___awtoft@c
   900  000CC6  C09A  F069         	movff	_a+1,___awtoft@c+1
   901  000CCA  EC8F  F00B         	call	___awtoft	;wreg free
   902  000CCE  C068  F06B         	movff	?___awtoft,___ftmul@f1
   903  000CD2  C069  F06C         	movff	?___awtoft+1,___ftmul@f1+1
   904  000CD6  C06A  F06D         	movff	?___awtoft+2,___ftmul@f1+2
   905  000CDA  0E28               	movlw	40
   906  000CDC  0100               	movlb	0	; () banked
   907  000CDE  6F6E               	movwf	___ftmul@f2& (0+255),b
   908  000CE0  0EA0               	movlw	160
   909  000CE2  0100               	movlb	0	; () banked
   910  000CE4  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   911  000CE6  0E3B               	movlw	59
   912  000CE8  0100               	movlb	0	; () banked
   913  000CEA  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   914  000CEC  ECE3  F004         	call	___ftmul	;wreg free
   915  000CF0  C06B  F0A3         	movff	?___ftmul,_c
   916  000CF4  C06C  F0A4         	movff	?___ftmul+1,_c+1
   917  000CF8  C06D  F0A5         	movff	?___ftmul+2,_c+2
   918                           
   919                           ;newmain.c: 152: d1 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   920  000CFC  C0A3  F06E         	movff	_c,___ftmul@f2
   921  000D00  C0A4  F06F         	movff	_c+1,___ftmul@f2+1
   922  000D04  C0A5  F070         	movff	_c+2,___ftmul@f2+2
   923  000D08  C0A3  F06B         	movff	_c,___ftmul@f1
   924  000D0C  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   925  000D10  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   926  000D14  ECE3  F004         	call	___ftmul	;wreg free
   927  000D18  C06B  F088         	movff	?___ftmul,_start$932
   928  000D1C  C06C  F089         	movff	?___ftmul+1,_start$932+1
   929  000D20  C06D  F08A         	movff	?___ftmul+2,_start$932+2
   930                           
   931                           ;newmain.c: 152: d1 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   932  000D24  0E1D               	movlw	29
   933  000D26  0100               	movlb	0	; () banked
   934  000D28  6F6E               	movwf	___ftmul@f2& (0+255),b
   935  000D2A  0E1A               	movlw	26
   936  000D2C  0100               	movlb	0	; () banked
   937  000D2E  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   938  000D30  0E3F               	movlw	63
   939  000D32  0100               	movlb	0	; () banked
   940  000D34  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   941  000D36  C0A3  F06B         	movff	_c,___ftmul@f1
   942  000D3A  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   943  000D3E  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   944  000D42  ECE3  F004         	call	___ftmul	;wreg free
   945  000D46  C06B  F07D         	movff	?___ftmul,___ftadd@f2
   946  000D4A  C06C  F07E         	movff	?___ftmul+1,___ftadd@f2+1
   947  000D4E  C06D  F07F         	movff	?___ftmul+2,___ftadd@f2+2
   948  000D52  0E6F               	movlw	111
   949  000D54  0100               	movlb	0	; () banked
   950  000D56  6F6E               	movwf	___ftmul@f2& (0+255),b
   951  000D58  0E92               	movlw	146
   952  000D5A  0100               	movlb	0	; () banked
   953  000D5C  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   954  000D5E  0E3E               	movlw	62
   955  000D60  0100               	movlb	0	; () banked
   956  000D62  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   957  000D64  C088  F06B         	movff	_start$932,___ftmul@f1
   958  000D68  C089  F06C         	movff	_start$932+1,___ftmul@f1+1
   959  000D6C  C08A  F06D         	movff	_start$932+2,___ftmul@f1+2
   960  000D70  ECE3  F004         	call	___ftmul	;wreg free
   961  000D74  C06B  F07A         	movff	?___ftmul,___ftadd@f1
   962  000D78  C06C  F07B         	movff	?___ftmul+1,___ftadd@f1+1
   963  000D7C  C06D  F07C         	movff	?___ftmul+2,___ftadd@f1+2
   964  000D80  ECAF  F001         	call	___ftadd	;wreg free
   965  000D84  C07A  F08B         	movff	?___ftadd,_start$933
   966  000D88  C07B  F08C         	movff	?___ftadd+1,_start$933+1
   967  000D8C  C07C  F08D         	movff	?___ftadd+2,_start$933+2
   968                           
   969                           ;newmain.c: 152: d1 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   970  000D90  C08B  F07A         	movff	_start$933,___ftadd@f1
   971  000D94  C08C  F07B         	movff	_start$933+1,___ftadd@f1+1
   972  000D98  C08D  F07C         	movff	_start$933+2,___ftadd@f1+2
   973  000D9C  0EE5               	movlw	229
   974  000D9E  0100               	movlb	0	; () banked
   975  000DA0  6F7D               	movwf	___ftadd@f2& (0+255),b
   976  000DA2  0E10               	movlw	16
   977  000DA4  0100               	movlb	0	; () banked
   978  000DA6  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
   979  000DA8  0EBE               	movlw	190
   980  000DAA  0100               	movlb	0	; () banked
   981  000DAC  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
   982  000DAE  ECAF  F001         	call	___ftadd	;wreg free
   983  000DB2  C07A  F093         	movff	?___ftadd,_d1
   984  000DB6  C07B  F094         	movff	?___ftadd+1,_d1+1
   985  000DBA  C07C  F095         	movff	?___ftadd+2,_d1+2
   986                           
   987                           ;newmain.c: 153: _delay((unsigned long)((3)*(8000000/4000000.0)));
   988  000DBE  D000               	nop2		;2 cycle nop
   989  000DC0  D000               	nop2		;2 cycle nop
   990  000DC2  D000               	nop2		;2 cycle nop
   991                           
   992                           ;newmain.c: 154: ADCON0 = 0x05;
   993  000DC4  0E05               	movlw	5
   994  000DC6  6EC2               	movwf	4034,c	;volatile
   995                           
   996                           ;newmain.c: 155: x = 1;
   997  000DC8  0E00               	movlw	0
   998  000DCA  0100               	movlb	0	; () banked
   999  000DCC  6FA2               	movwf	(_x+1)& (0+255),b
  1000  000DCE  0E01               	movlw	1
  1001  000DD0  6FA1               	movwf	_x& (0+255),b
  1002  000DD2  0012               	return	
  1003  000DD4                     __end_of_start:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _settings *****************
  1014 ;; Defined at:
  1015 ;;		line 88 in file "newmain.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    3
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text3
  1044  001502                     __ptext3:
  1045                           	opt stack 0
  1046  001502                     _settings:
  1047                           	opt stack 27
  1048                           
  1049                           ;newmain.c: 89: OSCCON = 0x72;
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;incstack = 0
  1053  001502  0E72               	movlw	114
  1054  001504  6ED3               	movwf	4051,c	;volatile
  1055                           
  1056                           ;newmain.c: 91: ADCON0 = 0x01;
  1057  001506  0E01               	movlw	1
  1058  001508  6EC2               	movwf	4034,c	;volatile
  1059                           
  1060                           ;newmain.c: 92: ADCON1 = 0x0C;
  1061  00150A  0E0C               	movlw	12
  1062  00150C  6EC1               	movwf	4033,c	;volatile
  1063                           
  1064                           ;newmain.c: 93: ADCON2 = 0x91;
  1065  00150E  0E91               	movlw	145
  1066  001510  6EC0               	movwf	4032,c	;volatile
  1067                           
  1068                           ;newmain.c: 95: TRISB = 0xFF;
  1069  001512  6893               	setf	3987,c	;volatile
  1070                           
  1071                           ;newmain.c: 96: LATB = 0xFF;
  1072  001514  688A               	setf	3978,c	;volatile
  1073                           
  1074                           ;newmain.c: 97: TRISA = 0x0F;
  1075  001516  0E0F               	movlw	15
  1076  001518  6E92               	movwf	3986,c	;volatile
  1077                           
  1078                           ;newmain.c: 98: LATA = 0x0F;
  1079  00151A  0E0F               	movlw	15
  1080  00151C  6E89               	movwf	3977,c	;volatile
  1081                           
  1082                           ;newmain.c: 99: TRISE = 0;
  1083  00151E  0E00               	movlw	0
  1084  001520  6E96               	movwf	3990,c	;volatile
  1085                           
  1086                           ;newmain.c: 100: LATE = 0;
  1087  001522  0E00               	movlw	0
  1088  001524  6E8D               	movwf	3981,c	;volatile
  1089                           
  1090                           ;newmain.c: 101: TRISD = 0;
  1091  001526  0E00               	movlw	0
  1092  001528  6E95               	movwf	3989,c	;volatile
  1093                           
  1094                           ;newmain.c: 102: LATD = 0;
  1095  00152A  0E00               	movlw	0
  1096  00152C  6E8C               	movwf	3980,c	;volatile
  1097                           
  1098                           ;newmain.c: 105: PR2 = 0x7C;
  1099  00152E  0E7C               	movlw	124
  1100  001530  6ECB               	movwf	4043,c	;volatile
  1101                           
  1102                           ;newmain.c: 106: T2CON = 0x03;
  1103  001532  0E03               	movlw	3
  1104  001534  6ECA               	movwf	4042,c	;volatile
  1105                           
  1106                           ;newmain.c: 107: TRISC = 0;
  1107  001536  0E00               	movlw	0
  1108  001538  6E94               	movwf	3988,c	;volatile
  1109                           
  1110                           ;newmain.c: 108: LATC = 0;
  1111  00153A  0E00               	movlw	0
  1112  00153C  6E8B               	movwf	3979,c	;volatile
  1113                           
  1114                           ;newmain.c: 109: CCPR1L = 0x7D;
  1115  00153E  0E7D               	movlw	125
  1116  001540  6EBE               	movwf	4030,c	;volatile
  1117                           
  1118                           ;newmain.c: 110: CCP1CON = 0x0C;
  1119  001542  0E0C               	movlw	12
  1120  001544  6EBD               	movwf	4029,c	;volatile
  1121                           
  1122                           ;newmain.c: 111: CCPR2L = 0x7D;
  1123  001546  0E7D               	movlw	125
  1124  001548  6EBB               	movwf	4027,c	;volatile
  1125                           
  1126                           ;newmain.c: 112: CCP2CON = 0x0C;
  1127  00154A  0E0C               	movlw	12
  1128  00154C  6EBA               	movwf	4026,c	;volatile
  1129                           
  1130                           ;newmain.c: 115: TRISCbits.RC7 = 1;
  1131  00154E  8E94               	bsf	3988,7,c	;volatile
  1132                           
  1133                           ;newmain.c: 116: TRISCbits.RC6 = 0;
  1134  001550  9C94               	bcf	3988,6,c	;volatile
  1135                           
  1136                           ;newmain.c: 117: SPBRG = 0x0C;
  1137  001552  0E0C               	movlw	12
  1138  001554  6EAF               	movwf	4015,c	;volatile
  1139                           
  1140                           ;newmain.c: 118: RCSTA = 0x90;
  1141  001556  0E90               	movlw	144
  1142  001558  6EAB               	movwf	4011,c	;volatile
  1143                           
  1144                           ;newmain.c: 119: TXSTA = 0x20;
  1145  00155A  0E20               	movlw	32
  1146  00155C  6EAC               	movwf	4012,c	;volatile
  1147                           
  1148                           ;newmain.c: 122: GIE = 1;
  1149  00155E  8EF2               	bsf	intcon,7,c	;volatile
  1150                           
  1151                           ;newmain.c: 123: PEIE = 1;
  1152  001560  8CF2               	bsf	intcon,6,c	;volatile
  1153                           
  1154                           ;newmain.c: 124: RCIE = 1;
  1155  001562  8A9D               	bsf	3997,5,c	;volatile
  1156                           
  1157                           ;newmain.c: 125: RCIF = 0;
  1158  001564  9A9E               	bcf	3998,5,c	;volatile
  1159                           
  1160                           ;newmain.c: 126: RCIP = 1;
  1161  001566  8A9F               	bsf	3999,5,c	;volatile
  1162                           
  1163                           ;newmain.c: 128: INT1IE = 1;
  1164  001568  86F0               	bsf	intcon3,3,c	;volatile
  1165                           
  1166                           ;newmain.c: 129: INT1IF = 0;
  1167  00156A  90F0               	bcf	intcon3,0,c	;volatile
  1168                           
  1169                           ;newmain.c: 130: INTEDG1 = 1;
  1170  00156C  8AF1               	bsf	intcon2,5,c	;volatile
  1171                           
  1172                           ;newmain.c: 131: INT1IP = 0;
  1173  00156E  9CF0               	bcf	intcon3,6,c	;volatile
  1174                           
  1175                           ;newmain.c: 133: INT2IE = 1;
  1176  001570  88F0               	bsf	intcon3,4,c	;volatile
  1177                           
  1178                           ;newmain.c: 134: INT2IF = 0;
  1179  001572  92F0               	bcf	intcon3,1,c	;volatile
  1180                           
  1181                           ;newmain.c: 135: INTEDG2 = 1;
  1182  001574  88F1               	bsf	intcon2,4,c	;volatile
  1183                           
  1184                           ;newmain.c: 136: INT2IP = 0;
  1185  001576  9EF0               	bcf	intcon3,7,c	;volatile
  1186                           
  1187                           ;newmain.c: 139: ADCON0bits.GO = 1;
  1188  001578  82C2               	bsf	4034,1,c	;volatile
  1189                           
  1190                           ;newmain.c: 141: TMR2 = 0;
  1191  00157A  0E00               	movlw	0
  1192  00157C  6ECC               	movwf	4044,c	;volatile
  1193                           
  1194                           ;newmain.c: 142: T2CONbits.TMR2ON = 1;
  1195  00157E  84CA               	bsf	4042,2,c	;volatile
  1196  001580  0012               	return		;funcret
  1197  001582                     __end_of_settings:
  1198                           	opt stack 0
  1199                           tblptru	equ	0xFF8
  1200                           tblptrh	equ	0xFF7
  1201                           tblptrl	equ	0xFF6
  1202                           tablat	equ	0xFF5
  1203                           intcon	equ	0xFF2
  1204                           intcon2	equ	0xFF1
  1205                           intcon3	equ	0xFF0
  1206                           postinc0	equ	0xFEE
  1207                           wreg	equ	0xFE8
  1208                           status	equ	0xFD8
  1209                           
  1210 ;; *************** function _manual *****************
  1211 ;; Defined at:
  1212 ;;		line 278 in file "newmain.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  1    wreg      void 
  1219 ;; Registers used:
  1220 ;;		wreg, status,2, status,0, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    7
  1233 ;; This function calls:
  1234 ;;		_adelante
  1235 ;;		_atras
  1236 ;;		_derecha
  1237 ;;		_freno
  1238 ;;		_izquierda
  1239 ;;		_pwmA1
  1240 ;;		_pwmA2
  1241 ;;		_pwmB1
  1242 ;;		_pwmB2
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           	psect	text4
  1249  0005C6                     __ptext4:
  1250                           	opt stack 0
  1251  0005C6                     _manual:
  1252                           	opt stack 23
  1253                           
  1254                           ;newmain.c: 281: if (modo == 0) {
  1255                           
  1256                           ;incstack = 0
  1257  0005C6  0100               	movlb	0	; () banked
  1258  0005C8  519F               	movf	_modo& (0+255),w,b
  1259  0005CA  0100               	movlb	0	; () banked
  1260  0005CC  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1261  0005CE  A4D8               	btfss	status,2,c
  1262  0005D0  D003               	goto	l2814
  1263                           
  1264                           ; BSR set to: 0
  1265                           ;newmain.c: 282: freno();
  1266  0005D2  EC06  F00C         	call	_freno	;wreg free
  1267                           
  1268                           ;newmain.c: 283: } else if (modo == 1) {
  1269  0005D6  0012               	return	
  1270  0005D8                     l2814:
  1271  0005D8  0100               	movlb	0	; () banked
  1272  0005DA  059F               	decf	_modo& (0+255),w,b
  1273  0005DC  0100               	movlb	0	; () banked
  1274  0005DE  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1275  0005E0  A4D8               	btfss	status,2,c
  1276  0005E2  D03D               	goto	l2842
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;newmain.c: 284: adelante();
  1280  0005E4  ECE3  F00B         	call	_adelante	;wreg free
  1281                           
  1282                           ;newmain.c: 285: if (PWM == 1) {
  1283  0005E8  0100               	movlb	0	; () banked
  1284  0005EA  059D               	decf	_PWM& (0+255),w,b
  1285  0005EC  0100               	movlb	0	; () banked
  1286  0005EE  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1287  0005F0  A4D8               	btfss	status,2,c
  1288  0005F2  D008               	goto	l2824
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;newmain.c: 286: pwmA1();
  1292  0005F4  ECF3  F00A         	call	_pwmA1	;wreg free
  1293                           
  1294                           ;newmain.c: 287: PWM = 0;
  1295  0005F8  0E00               	movlw	0
  1296  0005FA  0100               	movlb	0	; () banked
  1297  0005FC  6F9E               	movwf	(_PWM+1)& (0+255),b
  1298  0005FE  0E00               	movlw	0
  1299  000600  6F9D               	movwf	_PWM& (0+255),b
  1300                           
  1301                           ;newmain.c: 288: } else if (PWM == 2) {
  1302  000602  0012               	return	
  1303  000604                     l2824:
  1304                           
  1305                           ; BSR set to: 0
  1306  000604  0E02               	movlw	2
  1307  000606  0100               	movlb	0	; () banked
  1308  000608  199D               	xorwf	_PWM& (0+255),w,b
  1309  00060A  0100               	movlb	0	; () banked
  1310  00060C  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1311  00060E  A4D8               	btfss	status,2,c
  1312  000610  D008               	goto	l2830
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;newmain.c: 289: pwmA2();
  1316  000612  EC6F  F00B         	call	_pwmA2	;wreg free
  1317                           
  1318                           ;newmain.c: 290: PWM = 0;
  1319  000616  0E00               	movlw	0
  1320  000618  0100               	movlb	0	; () banked
  1321  00061A  6F9E               	movwf	(_PWM+1)& (0+255),b
  1322  00061C  0E00               	movlw	0
  1323  00061E  6F9D               	movwf	_PWM& (0+255),b
  1324                           
  1325                           ;newmain.c: 291: } else if (PWM == 3) {
  1326  000620  0012               	return	
  1327  000622                     l2830:
  1328                           
  1329                           ; BSR set to: 0
  1330  000622  0E03               	movlw	3
  1331  000624  0100               	movlb	0	; () banked
  1332  000626  199D               	xorwf	_PWM& (0+255),w,b
  1333  000628  0100               	movlb	0	; () banked
  1334  00062A  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1335  00062C  A4D8               	btfss	status,2,c
  1336  00062E  D008               	goto	l2836
  1337                           
  1338                           ; BSR set to: 0
  1339                           ;newmain.c: 292: pwmB1();
  1340  000630  ECC1  F00A         	call	_pwmB1	;wreg free
  1341                           
  1342                           ;newmain.c: 293: PWM = 0;
  1343  000634  0E00               	movlw	0
  1344  000636  0100               	movlb	0	; () banked
  1345  000638  6F9E               	movwf	(_PWM+1)& (0+255),b
  1346  00063A  0E00               	movlw	0
  1347  00063C  6F9D               	movwf	_PWM& (0+255),b
  1348                           
  1349                           ;newmain.c: 294: } else if (PWM == 4) {
  1350  00063E  0012               	return	
  1351  000640                     l2836:
  1352                           
  1353                           ; BSR set to: 0
  1354  000640  0E04               	movlw	4
  1355  000642  0100               	movlb	0	; () banked
  1356  000644  199D               	xorwf	_PWM& (0+255),w,b
  1357  000646  0100               	movlb	0	; () banked
  1358  000648  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1359  00064A  A4D8               	btfss	status,2,c
  1360  00064C  0012               	return	
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;newmain.c: 295: pwmB2();
  1364  00064E  EC4F  F00B         	call	_pwmB2	;wreg free
  1365                           
  1366                           ;newmain.c: 296: PWM = 0;
  1367  000652  0E00               	movlw	0
  1368  000654  0100               	movlb	0	; () banked
  1369  000656  6F9E               	movwf	(_PWM+1)& (0+255),b
  1370  000658  0E00               	movlw	0
  1371  00065A  6F9D               	movwf	_PWM& (0+255),b
  1372                           
  1373                           ; BSR set to: 0
  1374                           ;newmain.c: 297: }
  1375                           ;newmain.c: 298: } else if (modo == 2) {
  1376                           
  1377                           ; BSR set to: 0
  1378                           
  1379                           ; BSR set to: 0
  1380                           
  1381                           ; BSR set to: 0
  1382  00065C  0012               	return	
  1383  00065E                     l2842:
  1384                           
  1385                           ; BSR set to: 0
  1386  00065E  0E02               	movlw	2
  1387  000660  0100               	movlb	0	; () banked
  1388  000662  199F               	xorwf	_modo& (0+255),w,b
  1389  000664  0100               	movlb	0	; () banked
  1390  000666  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1391  000668  A4D8               	btfss	status,2,c
  1392  00066A  D03D               	goto	l2870
  1393                           
  1394                           ; BSR set to: 0
  1395                           ;newmain.c: 299: atras();
  1396  00066C  ECCE  F00B         	call	_atras	;wreg free
  1397                           
  1398                           ;newmain.c: 300: if (PWM == 1) {
  1399  000670  0100               	movlb	0	; () banked
  1400  000672  059D               	decf	_PWM& (0+255),w,b
  1401  000674  0100               	movlb	0	; () banked
  1402  000676  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1403  000678  A4D8               	btfss	status,2,c
  1404  00067A  D008               	goto	l2852
  1405                           
  1406                           ; BSR set to: 0
  1407                           ;newmain.c: 301: pwmA1();
  1408  00067C  ECF3  F00A         	call	_pwmA1	;wreg free
  1409                           
  1410                           ;newmain.c: 302: PWM = 0;
  1411  000680  0E00               	movlw	0
  1412  000682  0100               	movlb	0	; () banked
  1413  000684  6F9E               	movwf	(_PWM+1)& (0+255),b
  1414  000686  0E00               	movlw	0
  1415  000688  6F9D               	movwf	_PWM& (0+255),b
  1416                           
  1417                           ;newmain.c: 303: } else if (PWM == 2) {
  1418  00068A  0012               	return	
  1419  00068C                     l2852:
  1420                           
  1421                           ; BSR set to: 0
  1422  00068C  0E02               	movlw	2
  1423  00068E  0100               	movlb	0	; () banked
  1424  000690  199D               	xorwf	_PWM& (0+255),w,b
  1425  000692  0100               	movlb	0	; () banked
  1426  000694  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1427  000696  A4D8               	btfss	status,2,c
  1428  000698  D008               	goto	l2858
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;newmain.c: 304: pwmA2();
  1432  00069A  EC6F  F00B         	call	_pwmA2	;wreg free
  1433                           
  1434                           ;newmain.c: 305: PWM = 0;
  1435  00069E  0E00               	movlw	0
  1436  0006A0  0100               	movlb	0	; () banked
  1437  0006A2  6F9E               	movwf	(_PWM+1)& (0+255),b
  1438  0006A4  0E00               	movlw	0
  1439  0006A6  6F9D               	movwf	_PWM& (0+255),b
  1440                           
  1441                           ;newmain.c: 306: } else if (PWM == 3) {
  1442  0006A8  0012               	return	
  1443  0006AA                     l2858:
  1444                           
  1445                           ; BSR set to: 0
  1446  0006AA  0E03               	movlw	3
  1447  0006AC  0100               	movlb	0	; () banked
  1448  0006AE  199D               	xorwf	_PWM& (0+255),w,b
  1449  0006B0  0100               	movlb	0	; () banked
  1450  0006B2  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1451  0006B4  A4D8               	btfss	status,2,c
  1452  0006B6  D008               	goto	l2864
  1453                           
  1454                           ; BSR set to: 0
  1455                           ;newmain.c: 307: pwmB1();
  1456  0006B8  ECC1  F00A         	call	_pwmB1	;wreg free
  1457                           
  1458                           ;newmain.c: 308: PWM = 0;
  1459  0006BC  0E00               	movlw	0
  1460  0006BE  0100               	movlb	0	; () banked
  1461  0006C0  6F9E               	movwf	(_PWM+1)& (0+255),b
  1462  0006C2  0E00               	movlw	0
  1463  0006C4  6F9D               	movwf	_PWM& (0+255),b
  1464                           
  1465                           ;newmain.c: 309: } else if (PWM == 4) {
  1466  0006C6  0012               	return	
  1467  0006C8                     l2864:
  1468                           
  1469                           ; BSR set to: 0
  1470  0006C8  0E04               	movlw	4
  1471  0006CA  0100               	movlb	0	; () banked
  1472  0006CC  199D               	xorwf	_PWM& (0+255),w,b
  1473  0006CE  0100               	movlb	0	; () banked
  1474  0006D0  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1475  0006D2  A4D8               	btfss	status,2,c
  1476  0006D4  0012               	return	
  1477                           
  1478                           ; BSR set to: 0
  1479                           ;newmain.c: 310: pwmB2();
  1480  0006D6  EC4F  F00B         	call	_pwmB2	;wreg free
  1481                           
  1482                           ;newmain.c: 311: PWM = 0;
  1483  0006DA  0E00               	movlw	0
  1484  0006DC  0100               	movlb	0	; () banked
  1485  0006DE  6F9E               	movwf	(_PWM+1)& (0+255),b
  1486  0006E0  0E00               	movlw	0
  1487  0006E2  6F9D               	movwf	_PWM& (0+255),b
  1488                           
  1489                           ; BSR set to: 0
  1490                           ;newmain.c: 312: }
  1491                           ;newmain.c: 313: } else if (modo == 3) {
  1492                           
  1493                           ; BSR set to: 0
  1494                           
  1495                           ; BSR set to: 0
  1496                           
  1497                           ; BSR set to: 0
  1498  0006E4  0012               	return	
  1499  0006E6                     l2870:
  1500                           
  1501                           ; BSR set to: 0
  1502  0006E6  0E03               	movlw	3
  1503  0006E8  0100               	movlb	0	; () banked
  1504  0006EA  199F               	xorwf	_modo& (0+255),w,b
  1505  0006EC  0100               	movlb	0	; () banked
  1506  0006EE  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1507  0006F0  A4D8               	btfss	status,2,c
  1508  0006F2  D03D               	goto	l2898
  1509                           
  1510                           ; BSR set to: 0
  1511                           ;newmain.c: 314: derecha();
  1512  0006F4  ECF8  F00B         	call	_derecha	;wreg free
  1513                           
  1514                           ;newmain.c: 315: if (PWM == 1) {
  1515  0006F8  0100               	movlb	0	; () banked
  1516  0006FA  059D               	decf	_PWM& (0+255),w,b
  1517  0006FC  0100               	movlb	0	; () banked
  1518  0006FE  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1519  000700  A4D8               	btfss	status,2,c
  1520  000702  D008               	goto	l2880
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;newmain.c: 316: pwmA1();
  1524  000704  ECF3  F00A         	call	_pwmA1	;wreg free
  1525                           
  1526                           ;newmain.c: 317: PWM = 0;
  1527  000708  0E00               	movlw	0
  1528  00070A  0100               	movlb	0	; () banked
  1529  00070C  6F9E               	movwf	(_PWM+1)& (0+255),b
  1530  00070E  0E00               	movlw	0
  1531  000710  6F9D               	movwf	_PWM& (0+255),b
  1532                           
  1533                           ;newmain.c: 318: } else if (PWM == 2) {
  1534  000712  0012               	return	
  1535  000714                     l2880:
  1536                           
  1537                           ; BSR set to: 0
  1538  000714  0E02               	movlw	2
  1539  000716  0100               	movlb	0	; () banked
  1540  000718  199D               	xorwf	_PWM& (0+255),w,b
  1541  00071A  0100               	movlb	0	; () banked
  1542  00071C  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1543  00071E  A4D8               	btfss	status,2,c
  1544  000720  D008               	goto	l2886
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;newmain.c: 319: pwmA2();
  1548  000722  EC6F  F00B         	call	_pwmA2	;wreg free
  1549                           
  1550                           ;newmain.c: 320: PWM = 0;
  1551  000726  0E00               	movlw	0
  1552  000728  0100               	movlb	0	; () banked
  1553  00072A  6F9E               	movwf	(_PWM+1)& (0+255),b
  1554  00072C  0E00               	movlw	0
  1555  00072E  6F9D               	movwf	_PWM& (0+255),b
  1556                           
  1557                           ;newmain.c: 321: } else if (PWM == 3) {
  1558  000730  0012               	return	
  1559  000732                     l2886:
  1560                           
  1561                           ; BSR set to: 0
  1562  000732  0E03               	movlw	3
  1563  000734  0100               	movlb	0	; () banked
  1564  000736  199D               	xorwf	_PWM& (0+255),w,b
  1565  000738  0100               	movlb	0	; () banked
  1566  00073A  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1567  00073C  A4D8               	btfss	status,2,c
  1568  00073E  D008               	goto	l2892
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;newmain.c: 322: pwmB1();
  1572  000740  ECC1  F00A         	call	_pwmB1	;wreg free
  1573                           
  1574                           ;newmain.c: 323: PWM = 0;
  1575  000744  0E00               	movlw	0
  1576  000746  0100               	movlb	0	; () banked
  1577  000748  6F9E               	movwf	(_PWM+1)& (0+255),b
  1578  00074A  0E00               	movlw	0
  1579  00074C  6F9D               	movwf	_PWM& (0+255),b
  1580                           
  1581                           ;newmain.c: 324: } else if (PWM == 4) {
  1582  00074E  0012               	return	
  1583  000750                     l2892:
  1584                           
  1585                           ; BSR set to: 0
  1586  000750  0E04               	movlw	4
  1587  000752  0100               	movlb	0	; () banked
  1588  000754  199D               	xorwf	_PWM& (0+255),w,b
  1589  000756  0100               	movlb	0	; () banked
  1590  000758  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1591  00075A  A4D8               	btfss	status,2,c
  1592  00075C  0012               	return	
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;newmain.c: 325: pwmB2();
  1596  00075E  EC4F  F00B         	call	_pwmB2	;wreg free
  1597                           
  1598                           ;newmain.c: 326: PWM = 0;
  1599  000762  0E00               	movlw	0
  1600  000764  0100               	movlb	0	; () banked
  1601  000766  6F9E               	movwf	(_PWM+1)& (0+255),b
  1602  000768  0E00               	movlw	0
  1603  00076A  6F9D               	movwf	_PWM& (0+255),b
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;newmain.c: 327: }
  1607                           ;newmain.c: 328: } else if (modo == 4) {
  1608                           
  1609                           ; BSR set to: 0
  1610                           
  1611                           ; BSR set to: 0
  1612                           
  1613                           ; BSR set to: 0
  1614  00076C  0012               	return	
  1615  00076E                     l2898:
  1616                           
  1617                           ; BSR set to: 0
  1618  00076E  0E04               	movlw	4
  1619  000770  0100               	movlb	0	; () banked
  1620  000772  199F               	xorwf	_modo& (0+255),w,b
  1621  000774  0100               	movlb	0	; () banked
  1622  000776  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1623  000778  A4D8               	btfss	status,2,c
  1624  00077A  0012               	return	
  1625                           
  1626                           ; BSR set to: 0
  1627                           ;newmain.c: 329: izquierda();
  1628  00077C  ECFF  F00B         	call	_izquierda	;wreg free
  1629                           
  1630                           ;newmain.c: 330: if (PWM == 1) {
  1631  000780  0100               	movlb	0	; () banked
  1632  000782  059D               	decf	_PWM& (0+255),w,b
  1633  000784  0100               	movlb	0	; () banked
  1634  000786  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1635  000788  A4D8               	btfss	status,2,c
  1636  00078A  D008               	goto	l2908
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;newmain.c: 331: pwmA1();
  1640  00078C  ECF3  F00A         	call	_pwmA1	;wreg free
  1641                           
  1642                           ;newmain.c: 332: PWM = 0;
  1643  000790  0E00               	movlw	0
  1644  000792  0100               	movlb	0	; () banked
  1645  000794  6F9E               	movwf	(_PWM+1)& (0+255),b
  1646  000796  0E00               	movlw	0
  1647  000798  6F9D               	movwf	_PWM& (0+255),b
  1648                           
  1649                           ;newmain.c: 333: } else if (PWM == 2) {
  1650  00079A  0012               	return	
  1651  00079C                     l2908:
  1652                           
  1653                           ; BSR set to: 0
  1654  00079C  0E02               	movlw	2
  1655  00079E  0100               	movlb	0	; () banked
  1656  0007A0  199D               	xorwf	_PWM& (0+255),w,b
  1657  0007A2  0100               	movlb	0	; () banked
  1658  0007A4  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1659  0007A6  A4D8               	btfss	status,2,c
  1660  0007A8  D008               	goto	l2914
  1661                           
  1662                           ; BSR set to: 0
  1663                           ;newmain.c: 334: pwmA2();
  1664  0007AA  EC6F  F00B         	call	_pwmA2	;wreg free
  1665                           
  1666                           ;newmain.c: 335: PWM = 0;
  1667  0007AE  0E00               	movlw	0
  1668  0007B0  0100               	movlb	0	; () banked
  1669  0007B2  6F9E               	movwf	(_PWM+1)& (0+255),b
  1670  0007B4  0E00               	movlw	0
  1671  0007B6  6F9D               	movwf	_PWM& (0+255),b
  1672                           
  1673                           ;newmain.c: 336: } else if (PWM == 3) {
  1674  0007B8  0012               	return	
  1675  0007BA                     l2914:
  1676                           
  1677                           ; BSR set to: 0
  1678  0007BA  0E03               	movlw	3
  1679  0007BC  0100               	movlb	0	; () banked
  1680  0007BE  199D               	xorwf	_PWM& (0+255),w,b
  1681  0007C0  0100               	movlb	0	; () banked
  1682  0007C2  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1683  0007C4  A4D8               	btfss	status,2,c
  1684  0007C6  D008               	goto	l2920
  1685                           
  1686                           ; BSR set to: 0
  1687                           ;newmain.c: 337: pwmB1();
  1688  0007C8  ECC1  F00A         	call	_pwmB1	;wreg free
  1689                           
  1690                           ;newmain.c: 338: PWM = 0;
  1691  0007CC  0E00               	movlw	0
  1692  0007CE  0100               	movlb	0	; () banked
  1693  0007D0  6F9E               	movwf	(_PWM+1)& (0+255),b
  1694  0007D2  0E00               	movlw	0
  1695  0007D4  6F9D               	movwf	_PWM& (0+255),b
  1696                           
  1697                           ;newmain.c: 339: } else if (PWM == 4) {
  1698  0007D6  0012               	return	
  1699  0007D8                     l2920:
  1700                           
  1701                           ; BSR set to: 0
  1702  0007D8  0E04               	movlw	4
  1703  0007DA  0100               	movlb	0	; () banked
  1704  0007DC  199D               	xorwf	_PWM& (0+255),w,b
  1705  0007DE  0100               	movlb	0	; () banked
  1706  0007E0  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1707  0007E2  A4D8               	btfss	status,2,c
  1708  0007E4  0012               	return	
  1709                           
  1710                           ; BSR set to: 0
  1711                           ;newmain.c: 340: pwmB2();
  1712  0007E6  EC4F  F00B         	call	_pwmB2	;wreg free
  1713                           
  1714                           ;newmain.c: 341: PWM = 0;
  1715  0007EA  0E00               	movlw	0
  1716  0007EC  0100               	movlb	0	; () banked
  1717  0007EE  6F9E               	movwf	(_PWM+1)& (0+255),b
  1718  0007F0  0E00               	movlw	0
  1719  0007F2  6F9D               	movwf	_PWM& (0+255),b
  1720                           
  1721                           ; BSR set to: 0
  1722                           
  1723                           ; BSR set to: 0
  1724                           
  1725                           ; BSR set to: 0
  1726                           
  1727                           ; BSR set to: 0
  1728                           
  1729                           ; BSR set to: 0
  1730                           
  1731                           ; BSR set to: 0
  1732                           
  1733                           ; BSR set to: 0
  1734                           
  1735                           ; BSR set to: 0
  1736  0007F4  0012               	return	
  1737  0007F6                     __end_of_manual:
  1738                           	opt stack 0
  1739                           tblptru	equ	0xFF8
  1740                           tblptrh	equ	0xFF7
  1741                           tblptrl	equ	0xFF6
  1742                           tablat	equ	0xFF5
  1743                           intcon	equ	0xFF2
  1744                           intcon2	equ	0xFF1
  1745                           intcon3	equ	0xFF0
  1746                           postinc0	equ	0xFEE
  1747                           wreg	equ	0xFE8
  1748                           status	equ	0xFD8
  1749                           
  1750 ;; *************** function _pwmB2 *****************
  1751 ;; Defined at:
  1752 ;;		line 420 in file "newmain.c"
  1753 ;; Parameters:    Size  Location     Type
  1754 ;;		None
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;		None
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  1    wreg      void 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, cstack
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1766 ;;      Params:         0       0       0       0       0       0       0       0       0
  1767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1769 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1770 ;;Total ram usage:        0 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    5
  1773 ;; This function calls:
  1774 ;;		___ftadd
  1775 ;; This function is called by:
  1776 ;;		_manual
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text5
  1781  00169E                     __ptext5:
  1782                           	opt stack 0
  1783  00169E                     _pwmB2:
  1784                           	opt stack 24
  1785                           
  1786                           ;newmain.c: 421: duty_cicle2 = duty_cicle2 - 102.3;
  1787                           
  1788                           ;incstack = 0
  1789  00169E  C038  F07A         	movff	_duty_cicle2,___ftadd@f1
  1790  0016A2  C039  F07B         	movff	_duty_cicle2+1,___ftadd@f1+1
  1791  0016A6  C03A  F07C         	movff	_duty_cicle2+2,___ftadd@f1+2
  1792  0016AA  0E9A               	movlw	154
  1793  0016AC  0100               	movlb	0	; () banked
  1794  0016AE  6F7D               	movwf	___ftadd@f2& (0+255),b
  1795  0016B0  0ECC               	movlw	204
  1796  0016B2  0100               	movlb	0	; () banked
  1797  0016B4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  1798  0016B6  0EC2               	movlw	194
  1799  0016B8  0100               	movlb	0	; () banked
  1800  0016BA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  1801  0016BC  ECAF  F001         	call	___ftadd	;wreg free
  1802  0016C0  C07A  F038         	movff	?___ftadd,_duty_cicle2
  1803  0016C4  C07B  F039         	movff	?___ftadd+1,_duty_cicle2+1
  1804  0016C8  C07C  F03A         	movff	?___ftadd+2,_duty_cicle2+2
  1805                           
  1806                           ;newmain.c: 422: if (duty_cicle2 < 0) {
  1807  0016CC  AE3A               	btfss	_duty_cicle2+2,7,c
  1808  0016CE  0012               	return	
  1809                           
  1810                           ;newmain.c: 423: duty_cicle2 = 0;
  1811  0016D0  0E00               	movlw	0
  1812  0016D2  6E38               	movwf	_duty_cicle2,c
  1813  0016D4  0E00               	movlw	0
  1814  0016D6  6E39               	movwf	_duty_cicle2+1,c
  1815  0016D8  0E00               	movlw	0
  1816  0016DA  6E3A               	movwf	_duty_cicle2+2,c
  1817  0016DC  0012               	return	
  1818  0016DE                     __end_of_pwmB2:
  1819                           	opt stack 0
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           intcon	equ	0xFF2
  1825                           intcon2	equ	0xFF1
  1826                           intcon3	equ	0xFF0
  1827                           postinc0	equ	0xFEE
  1828                           wreg	equ	0xFE8
  1829                           status	equ	0xFD8
  1830                           
  1831 ;; *************** function _pwmB1 *****************
  1832 ;; Defined at:
  1833 ;;		line 413 in file "newmain.c"
  1834 ;; Parameters:    Size  Location     Type
  1835 ;;		None
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1851 ;;Total ram usage:        0 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    5
  1854 ;; This function calls:
  1855 ;;		___ftadd
  1856 ;;		___ftge
  1857 ;; This function is called by:
  1858 ;;		_manual
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text6
  1863  001582                     __ptext6:
  1864                           	opt stack 0
  1865  001582                     _pwmB1:
  1866                           	opt stack 24
  1867                           
  1868                           ;newmain.c: 414: duty_cicle2 = duty_cicle2 + 102.3;
  1869                           
  1870                           ;incstack = 0
  1871  001582  C038  F07A         	movff	_duty_cicle2,___ftadd@f1
  1872  001586  C039  F07B         	movff	_duty_cicle2+1,___ftadd@f1+1
  1873  00158A  C03A  F07C         	movff	_duty_cicle2+2,___ftadd@f1+2
  1874  00158E  0E9A               	movlw	154
  1875  001590  0100               	movlb	0	; () banked
  1876  001592  6F7D               	movwf	___ftadd@f2& (0+255),b
  1877  001594  0ECC               	movlw	204
  1878  001596  0100               	movlb	0	; () banked
  1879  001598  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  1880  00159A  0E42               	movlw	66
  1881  00159C  0100               	movlb	0	; () banked
  1882  00159E  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  1883  0015A0  ECAF  F001         	call	___ftadd	;wreg free
  1884  0015A4  C07A  F038         	movff	?___ftadd,_duty_cicle2
  1885  0015A8  C07B  F039         	movff	?___ftadd+1,_duty_cicle2+1
  1886  0015AC  C07C  F03A         	movff	?___ftadd+2,_duty_cicle2+2
  1887                           
  1888                           ;newmain.c: 415: if (duty_cicle2 > 1023.0) {
  1889  0015B0  0EC0               	movlw	192
  1890  0015B2  0100               	movlb	0	; () banked
  1891  0015B4  6F60               	movwf	___ftge@ff1& (0+255),b
  1892  0015B6  0E7F               	movlw	127
  1893  0015B8  0100               	movlb	0	; () banked
  1894  0015BA  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  1895  0015BC  0E44               	movlw	68
  1896  0015BE  0100               	movlb	0	; () banked
  1897  0015C0  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  1898  0015C2  C038  F063         	movff	_duty_cicle2,___ftge@ff2
  1899  0015C6  C039  F064         	movff	_duty_cicle2+1,___ftge@ff2+1
  1900  0015CA  C03A  F065         	movff	_duty_cicle2+2,___ftge@ff2+2
  1901  0015CE  ECD8  F009         	call	___ftge	;wreg free
  1902  0015D2  0100               	movlb	0	; () banked
  1903  0015D4  B0D8               	btfsc	status,0,c
  1904  0015D6  0012               	return	
  1905                           
  1906                           ; BSR set to: 0
  1907                           ;newmain.c: 416: duty_cicle2 = 1023.0;
  1908  0015D8  0EC0               	movlw	192
  1909  0015DA  6E38               	movwf	_duty_cicle2,c
  1910  0015DC  0E7F               	movlw	127
  1911  0015DE  6E39               	movwf	_duty_cicle2+1,c
  1912  0015E0  0E44               	movlw	68
  1913  0015E2  6E3A               	movwf	_duty_cicle2+2,c
  1914  0015E4  0012               	return	
  1915  0015E6                     __end_of_pwmB1:
  1916                           	opt stack 0
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           intcon	equ	0xFF2
  1922                           intcon2	equ	0xFF1
  1923                           intcon3	equ	0xFF0
  1924                           postinc0	equ	0xFEE
  1925                           wreg	equ	0xFE8
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function _pwmA2 *****************
  1929 ;; Defined at:
  1930 ;;		line 406 in file "newmain.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;		None
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;		None
  1935 ;; Return value:  Size  Location     Type
  1936 ;;                  1    wreg      void 
  1937 ;; Registers used:
  1938 ;;		wreg, status,2, status,0, cstack
  1939 ;; Tracked objects:
  1940 ;;		On entry : 0/0
  1941 ;;		On exit  : 0/0
  1942 ;;		Unchanged: 0/0
  1943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1944 ;;      Params:         0       0       0       0       0       0       0       0       0
  1945 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1946 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1947 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1948 ;;Total ram usage:        0 bytes
  1949 ;; Hardware stack levels used:    1
  1950 ;; Hardware stack levels required when called:    5
  1951 ;; This function calls:
  1952 ;;		___ftadd
  1953 ;; This function is called by:
  1954 ;;		_manual
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text7
  1959  0016DE                     __ptext7:
  1960                           	opt stack 0
  1961  0016DE                     _pwmA2:
  1962                           	opt stack 24
  1963                           
  1964                           ;newmain.c: 407: duty_cicle1 = duty_cicle1 - 102.3;
  1965                           
  1966                           ; BSR set to: 0
  1967                           ;incstack = 0
  1968  0016DE  C03B  F07A         	movff	_duty_cicle1,___ftadd@f1
  1969  0016E2  C03C  F07B         	movff	_duty_cicle1+1,___ftadd@f1+1
  1970  0016E6  C03D  F07C         	movff	_duty_cicle1+2,___ftadd@f1+2
  1971  0016EA  0E9A               	movlw	154
  1972  0016EC  0100               	movlb	0	; () banked
  1973  0016EE  6F7D               	movwf	___ftadd@f2& (0+255),b
  1974  0016F0  0ECC               	movlw	204
  1975  0016F2  0100               	movlb	0	; () banked
  1976  0016F4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  1977  0016F6  0EC2               	movlw	194
  1978  0016F8  0100               	movlb	0	; () banked
  1979  0016FA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  1980  0016FC  ECAF  F001         	call	___ftadd	;wreg free
  1981  001700  C07A  F03B         	movff	?___ftadd,_duty_cicle1
  1982  001704  C07B  F03C         	movff	?___ftadd+1,_duty_cicle1+1
  1983  001708  C07C  F03D         	movff	?___ftadd+2,_duty_cicle1+2
  1984                           
  1985                           ;newmain.c: 408: if (duty_cicle1 < 0) {
  1986  00170C  AE3D               	btfss	_duty_cicle1+2,7,c
  1987  00170E  0012               	return	
  1988                           
  1989                           ;newmain.c: 409: duty_cicle1 = 0;
  1990  001710  0E00               	movlw	0
  1991  001712  6E3B               	movwf	_duty_cicle1,c
  1992  001714  0E00               	movlw	0
  1993  001716  6E3C               	movwf	_duty_cicle1+1,c
  1994  001718  0E00               	movlw	0
  1995  00171A  6E3D               	movwf	_duty_cicle1+2,c
  1996  00171C  0012               	return	
  1997  00171E                     __end_of_pwmA2:
  1998                           	opt stack 0
  1999                           tblptru	equ	0xFF8
  2000                           tblptrh	equ	0xFF7
  2001                           tblptrl	equ	0xFF6
  2002                           tablat	equ	0xFF5
  2003                           intcon	equ	0xFF2
  2004                           intcon2	equ	0xFF1
  2005                           intcon3	equ	0xFF0
  2006                           postinc0	equ	0xFEE
  2007                           wreg	equ	0xFE8
  2008                           status	equ	0xFD8
  2009                           
  2010 ;; *************** function _pwmA1 *****************
  2011 ;; Defined at:
  2012 ;;		line 399 in file "newmain.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    5
  2033 ;; This function calls:
  2034 ;;		___ftadd
  2035 ;;		___ftge
  2036 ;; This function is called by:
  2037 ;;		_manual
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text8
  2042  0015E6                     __ptext8:
  2043                           	opt stack 0
  2044  0015E6                     _pwmA1:
  2045                           	opt stack 24
  2046                           
  2047                           ;newmain.c: 400: duty_cicle1 = duty_cicle1 + 102.3;
  2048                           
  2049                           ;incstack = 0
  2050  0015E6  C03B  F07A         	movff	_duty_cicle1,___ftadd@f1
  2051  0015EA  C03C  F07B         	movff	_duty_cicle1+1,___ftadd@f1+1
  2052  0015EE  C03D  F07C         	movff	_duty_cicle1+2,___ftadd@f1+2
  2053  0015F2  0E9A               	movlw	154
  2054  0015F4  0100               	movlb	0	; () banked
  2055  0015F6  6F7D               	movwf	___ftadd@f2& (0+255),b
  2056  0015F8  0ECC               	movlw	204
  2057  0015FA  0100               	movlb	0	; () banked
  2058  0015FC  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2059  0015FE  0E42               	movlw	66
  2060  001600  0100               	movlb	0	; () banked
  2061  001602  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2062  001604  ECAF  F001         	call	___ftadd	;wreg free
  2063  001608  C07A  F03B         	movff	?___ftadd,_duty_cicle1
  2064  00160C  C07B  F03C         	movff	?___ftadd+1,_duty_cicle1+1
  2065  001610  C07C  F03D         	movff	?___ftadd+2,_duty_cicle1+2
  2066                           
  2067                           ;newmain.c: 401: if (duty_cicle1 > 1023.0) {
  2068  001614  0EC0               	movlw	192
  2069  001616  0100               	movlb	0	; () banked
  2070  001618  6F60               	movwf	___ftge@ff1& (0+255),b
  2071  00161A  0E7F               	movlw	127
  2072  00161C  0100               	movlb	0	; () banked
  2073  00161E  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  2074  001620  0E44               	movlw	68
  2075  001622  0100               	movlb	0	; () banked
  2076  001624  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  2077  001626  C03B  F063         	movff	_duty_cicle1,___ftge@ff2
  2078  00162A  C03C  F064         	movff	_duty_cicle1+1,___ftge@ff2+1
  2079  00162E  C03D  F065         	movff	_duty_cicle1+2,___ftge@ff2+2
  2080  001632  ECD8  F009         	call	___ftge	;wreg free
  2081  001636  0100               	movlb	0	; () banked
  2082  001638  B0D8               	btfsc	status,0,c
  2083  00163A  0012               	return	
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;newmain.c: 402: duty_cicle1 = 1023.0;
  2087  00163C  0EC0               	movlw	192
  2088  00163E  6E3B               	movwf	_duty_cicle1,c
  2089  001640  0E7F               	movlw	127
  2090  001642  6E3C               	movwf	_duty_cicle1+1,c
  2091  001644  0E44               	movlw	68
  2092  001646  6E3D               	movwf	_duty_cicle1+2,c
  2093  001648  0012               	return	
  2094  00164A                     __end_of_pwmA1:
  2095                           	opt stack 0
  2096                           tblptru	equ	0xFF8
  2097                           tblptrh	equ	0xFF7
  2098                           tblptrl	equ	0xFF6
  2099                           tablat	equ	0xFF5
  2100                           intcon	equ	0xFF2
  2101                           intcon2	equ	0xFF1
  2102                           intcon3	equ	0xFF0
  2103                           postinc0	equ	0xFEE
  2104                           wreg	equ	0xFE8
  2105                           status	equ	0xFD8
  2106                           
  2107 ;; *************** function ___ftadd *****************
  2108 ;; Defined at:
  2109 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  f1              3   26[BANK0 ] float 
  2112 ;;  f2              3   29[BANK0 ] float 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  exp1            1   37[BANK0 ] unsigned char 
  2115 ;;  exp2            1   36[BANK0 ] unsigned char 
  2116 ;;  sign            1   35[BANK0 ] unsigned char 
  2117 ;; Return value:  Size  Location     Type
  2118 ;;                  3   26[BANK0 ] float 
  2119 ;; Registers used:
  2120 ;;		wreg, status,2, status,0, cstack
  2121 ;; Tracked objects:
  2122 ;;		On entry : 0/0
  2123 ;;		On exit  : 0/0
  2124 ;;		Unchanged: 0/0
  2125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2126 ;;      Params:         0       6       0       0       0       0       0       0       0
  2127 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2128 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2129 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2130 ;;Total ram usage:       12 bytes
  2131 ;; Hardware stack levels used:    1
  2132 ;; Hardware stack levels required when called:    4
  2133 ;; This function calls:
  2134 ;;		___ftpack
  2135 ;; This function is called by:
  2136 ;;		_start
  2137 ;;		_start1
  2138 ;;		_pwmA1
  2139 ;;		_pwmA2
  2140 ;;		_pwmB1
  2141 ;;		_pwmB2
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145                           	psect	text9
  2146  00035E                     __ptext9:
  2147                           	opt stack 0
  2148  00035E                     ___ftadd:
  2149                           	opt stack 25
  2150                           
  2151                           ; BSR set to: 0
  2152                           ;incstack = 0
  2153  00035E  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  2154  000362  0100               	movlb	0	; () banked
  2155  000364  6B81               	clrf	(??___ftadd+1)& (0+255),b
  2156  000366  6B82               	clrf	(??___ftadd+2)& (0+255),b
  2157  000368  0100               	movlb	0	; () banked
  2158  00036A  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2159  00036C  0100               	movlb	0	; () banked
  2160  00036E  3780               	rlcf	??___ftadd& (0+255),f,b
  2161  000370  E301               	bnc	u2331
  2162  000372  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  2163  000374                     u2331:
  2164  000374  0100               	movlb	0	; () banked
  2165  000376  5180               	movf	??___ftadd& (0+255),w,b
  2166  000378  0100               	movlb	0	; () banked
  2167  00037A  6F85               	movwf	___ftadd@exp1& (0+255),b
  2168  00037C  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  2169  000380  0100               	movlb	0	; () banked
  2170  000382  6B81               	clrf	(??___ftadd+1)& (0+255),b
  2171  000384  6B82               	clrf	(??___ftadd+2)& (0+255),b
  2172  000386  0100               	movlb	0	; () banked
  2173  000388  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2174  00038A  0100               	movlb	0	; () banked
  2175  00038C  3780               	rlcf	??___ftadd& (0+255),f,b
  2176  00038E  E301               	bnc	u2341
  2177  000390  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  2178  000392                     u2341:
  2179  000392  0100               	movlb	0	; () banked
  2180  000394  5180               	movf	??___ftadd& (0+255),w,b
  2181  000396  0100               	movlb	0	; () banked
  2182  000398  6F84               	movwf	___ftadd@exp2& (0+255),b
  2183                           
  2184                           ; BSR set to: 0
  2185  00039A  0100               	movlb	0	; () banked
  2186  00039C  5185               	movf	___ftadd@exp1& (0+255),w,b
  2187  00039E  0100               	movlb	0	; () banked
  2188  0003A0  B4D8               	btfsc	status,2,c
  2189  0003A2  D011               	goto	l594
  2190                           
  2191                           ; BSR set to: 0
  2192  0003A4  0100               	movlb	0	; () banked
  2193  0003A6  5184               	movf	___ftadd@exp2& (0+255),w,b
  2194  0003A8  0100               	movlb	0	; () banked
  2195  0003AA  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  2196  0003AC  B0D8               	btfsc	status,0,c
  2197  0003AE  D012               	goto	l2660
  2198                           
  2199                           ; BSR set to: 0
  2200  0003B0  0100               	movlb	0	; () banked
  2201  0003B2  5185               	movf	___ftadd@exp1& (0+255),w,b
  2202  0003B4  0800               	sublw	0
  2203  0003B6  0100               	movlb	0	; () banked
  2204  0003B8  2584               	addwf	___ftadd@exp2& (0+255),w,b
  2205  0003BA  0100               	movlb	0	; () banked
  2206  0003BC  6F80               	movwf	??___ftadd& (0+255),b
  2207  0003BE  0E18               	movlw	24
  2208  0003C0  0100               	movlb	0	; () banked
  2209  0003C2  6580               	cpfsgt	??___ftadd& (0+255),b
  2210  0003C4  D007               	goto	l2660
  2211  0003C6                     l594:
  2212                           
  2213                           ; BSR set to: 0
  2214  0003C6  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  2215  0003CA  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  2216  0003CE  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  2217  0003D2  0012               	return	
  2218  0003D4                     l2660:
  2219                           
  2220                           ; BSR set to: 0
  2221  0003D4  0100               	movlb	0	; () banked
  2222  0003D6  5184               	movf	___ftadd@exp2& (0+255),w,b
  2223  0003D8  0100               	movlb	0	; () banked
  2224  0003DA  B4D8               	btfsc	status,2,c
  2225  0003DC  D011               	goto	l598
  2226                           
  2227                           ; BSR set to: 0
  2228  0003DE  0100               	movlb	0	; () banked
  2229  0003E0  5185               	movf	___ftadd@exp1& (0+255),w,b
  2230  0003E2  0100               	movlb	0	; () banked
  2231  0003E4  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  2232  0003E6  B0D8               	btfsc	status,0,c
  2233  0003E8  D012               	goto	l2666
  2234                           
  2235                           ; BSR set to: 0
  2236  0003EA  0100               	movlb	0	; () banked
  2237  0003EC  5184               	movf	___ftadd@exp2& (0+255),w,b
  2238  0003EE  0800               	sublw	0
  2239  0003F0  0100               	movlb	0	; () banked
  2240  0003F2  2585               	addwf	___ftadd@exp1& (0+255),w,b
  2241  0003F4  0100               	movlb	0	; () banked
  2242  0003F6  6F80               	movwf	??___ftadd& (0+255),b
  2243  0003F8  0E18               	movlw	24
  2244  0003FA  0100               	movlb	0	; () banked
  2245  0003FC  6580               	cpfsgt	??___ftadd& (0+255),b
  2246  0003FE  D007               	goto	l2666
  2247  000400                     l598:
  2248                           
  2249                           ; BSR set to: 0
  2250  000400  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  2251  000404  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  2252  000408  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  2253  00040C  0012               	return	
  2254  00040E                     l2666:
  2255                           
  2256                           ; BSR set to: 0
  2257  00040E  0E06               	movlw	6
  2258  000410  0100               	movlb	0	; () banked
  2259  000412  6F83               	movwf	___ftadd@sign& (0+255),b
  2260                           
  2261                           ; BSR set to: 0
  2262  000414  0100               	movlb	0	; () banked
  2263  000416  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2264  000418  D002               	goto	l2672
  2265                           
  2266                           ; BSR set to: 0
  2267  00041A  0100               	movlb	0	; () banked
  2268  00041C  8F83               	bsf	___ftadd@sign& (0+255),7,b
  2269  00041E                     l2672:
  2270                           
  2271                           ; BSR set to: 0
  2272  00041E  0100               	movlb	0	; () banked
  2273  000420  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2274  000422  D002               	goto	l600
  2275                           
  2276                           ; BSR set to: 0
  2277  000424  0100               	movlb	0	; () banked
  2278  000426  8D83               	bsf	___ftadd@sign& (0+255),6,b
  2279  000428                     l600:
  2280                           
  2281                           ; BSR set to: 0
  2282  000428  0100               	movlb	0	; () banked
  2283  00042A  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2284                           
  2285                           ; BSR set to: 0
  2286  00042C  0EFF               	movlw	255
  2287  00042E  0100               	movlb	0	; () banked
  2288  000430  177A               	andwf	___ftadd@f1& (0+255),f,b
  2289  000432  0EFF               	movlw	255
  2290  000434  0100               	movlb	0	; () banked
  2291  000436  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2292  000438  0E00               	movlw	0
  2293  00043A  0100               	movlb	0	; () banked
  2294  00043C  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2295  00043E  0100               	movlb	0	; () banked
  2296  000440  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2297                           
  2298                           ; BSR set to: 0
  2299  000442  0EFF               	movlw	255
  2300  000444  0100               	movlb	0	; () banked
  2301  000446  177D               	andwf	___ftadd@f2& (0+255),f,b
  2302  000448  0EFF               	movlw	255
  2303  00044A  0100               	movlb	0	; () banked
  2304  00044C  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2305  00044E  0E00               	movlw	0
  2306  000450  0100               	movlb	0	; () banked
  2307  000452  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2308                           
  2309                           ; BSR set to: 0
  2310  000454  0100               	movlb	0	; () banked
  2311  000456  5184               	movf	___ftadd@exp2& (0+255),w,b
  2312  000458  0100               	movlb	0	; () banked
  2313  00045A  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  2314  00045C  B0D8               	btfsc	status,0,c
  2315  00045E  D025               	goto	l2692
  2316  000460                     l2682:
  2317                           
  2318                           ; BSR set to: 0
  2319  000460  0100               	movlb	0	; () banked
  2320  000462  90D8               	bcf	status,0,c
  2321  000464  377D               	rlcf	___ftadd@f2& (0+255),f,b
  2322  000466  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2323  000468  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2324  00046A  0100               	movlb	0	; () banked
  2325  00046C  0784               	decf	___ftadd@exp2& (0+255),f,b
  2326                           
  2327                           ; BSR set to: 0
  2328  00046E  0100               	movlb	0	; () banked
  2329  000470  5185               	movf	___ftadd@exp1& (0+255),w,b
  2330  000472  0100               	movlb	0	; () banked
  2331  000474  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  2332  000476  B4D8               	btfsc	status,2,c
  2333  000478  D011               	goto	l2690
  2334                           
  2335                           ; BSR set to: 0
  2336  00047A  0100               	movlb	0	; () banked
  2337  00047C  0783               	decf	___ftadd@sign& (0+255),f,b
  2338  00047E  C083  F080         	movff	___ftadd@sign,??___ftadd
  2339  000482  0E07               	movlw	7
  2340  000484  0100               	movlb	0	; () banked
  2341  000486  1780               	andwf	??___ftadd& (0+255),f,b
  2342  000488  B4D8               	btfsc	status,2,c
  2343  00048A  D008               	goto	l2690
  2344  00048C  D7E9               	goto	l2682
  2345  00048E                     l2688:
  2346                           
  2347                           ; BSR set to: 0
  2348  00048E  0100               	movlb	0	; () banked
  2349  000490  90D8               	bcf	status,0,c
  2350  000492  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2351  000494  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2352  000496  337A               	rrcf	___ftadd@f1& (0+255),f,b
  2353  000498  0100               	movlb	0	; () banked
  2354  00049A  2B85               	incf	___ftadd@exp1& (0+255),f,b
  2355  00049C                     l2690:
  2356                           
  2357                           ; BSR set to: 0
  2358  00049C  0100               	movlb	0	; () banked
  2359  00049E  5184               	movf	___ftadd@exp2& (0+255),w,b
  2360  0004A0  0100               	movlb	0	; () banked
  2361  0004A2  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  2362  0004A4  B4D8               	btfsc	status,2,c
  2363  0004A6  D02B               	goto	l609
  2364  0004A8  D7F2               	goto	l2688
  2365  0004AA                     l2692:
  2366                           
  2367                           ; BSR set to: 0
  2368  0004AA  0100               	movlb	0	; () banked
  2369  0004AC  5185               	movf	___ftadd@exp1& (0+255),w,b
  2370  0004AE  0100               	movlb	0	; () banked
  2371  0004B0  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  2372  0004B2  B0D8               	btfsc	status,0,c
  2373  0004B4  D024               	goto	l609
  2374  0004B6                     l2694:
  2375                           
  2376                           ; BSR set to: 0
  2377  0004B6  0100               	movlb	0	; () banked
  2378  0004B8  90D8               	bcf	status,0,c
  2379  0004BA  377A               	rlcf	___ftadd@f1& (0+255),f,b
  2380  0004BC  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2381  0004BE  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2382  0004C0  0100               	movlb	0	; () banked
  2383  0004C2  0785               	decf	___ftadd@exp1& (0+255),f,b
  2384                           
  2385                           ; BSR set to: 0
  2386  0004C4  0100               	movlb	0	; () banked
  2387  0004C6  5185               	movf	___ftadd@exp1& (0+255),w,b
  2388  0004C8  0100               	movlb	0	; () banked
  2389  0004CA  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  2390  0004CC  B4D8               	btfsc	status,2,c
  2391  0004CE  D011               	goto	l2702
  2392                           
  2393                           ; BSR set to: 0
  2394  0004D0  0100               	movlb	0	; () banked
  2395  0004D2  0783               	decf	___ftadd@sign& (0+255),f,b
  2396  0004D4  C083  F080         	movff	___ftadd@sign,??___ftadd
  2397  0004D8  0E07               	movlw	7
  2398  0004DA  0100               	movlb	0	; () banked
  2399  0004DC  1780               	andwf	??___ftadd& (0+255),f,b
  2400  0004DE  B4D8               	btfsc	status,2,c
  2401  0004E0  D008               	goto	l2702
  2402  0004E2  D7E9               	goto	l2694
  2403  0004E4                     l2700:
  2404                           
  2405                           ; BSR set to: 0
  2406  0004E4  0100               	movlb	0	; () banked
  2407  0004E6  90D8               	bcf	status,0,c
  2408  0004E8  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2409  0004EA  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2410  0004EC  337D               	rrcf	___ftadd@f2& (0+255),f,b
  2411  0004EE  0100               	movlb	0	; () banked
  2412  0004F0  2B84               	incf	___ftadd@exp2& (0+255),f,b
  2413  0004F2                     l2702:
  2414                           
  2415                           ; BSR set to: 0
  2416  0004F2  0100               	movlb	0	; () banked
  2417  0004F4  5184               	movf	___ftadd@exp2& (0+255),w,b
  2418  0004F6  0100               	movlb	0	; () banked
  2419  0004F8  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  2420  0004FA  A4D8               	btfss	status,2,c
  2421  0004FC  D7F3               	goto	l2700
  2422  0004FE                     l609:
  2423                           
  2424                           ; BSR set to: 0
  2425  0004FE  0100               	movlb	0	; () banked
  2426  000500  AF83               	btfss	___ftadd@sign& (0+255),7,b
  2427  000502  D012               	goto	l618
  2428                           
  2429                           ; BSR set to: 0
  2430  000504  0EFF               	movlw	255
  2431  000506  0100               	movlb	0	; () banked
  2432  000508  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  2433  00050A  0EFF               	movlw	255
  2434  00050C  0100               	movlb	0	; () banked
  2435  00050E  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2436  000510  0EFF               	movlw	255
  2437  000512  0100               	movlb	0	; () banked
  2438  000514  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2439  000516  0E01               	movlw	1
  2440  000518  0100               	movlb	0	; () banked
  2441  00051A  277A               	addwf	___ftadd@f1& (0+255),f,b
  2442  00051C  0E00               	movlw	0
  2443  00051E  0100               	movlb	0	; () banked
  2444  000520  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2445  000522  0E00               	movlw	0
  2446  000524  0100               	movlb	0	; () banked
  2447  000526  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2448  000528                     l618:
  2449                           
  2450                           ; BSR set to: 0
  2451  000528  0100               	movlb	0	; () banked
  2452  00052A  AD83               	btfss	___ftadd@sign& (0+255),6,b
  2453  00052C  D012               	goto	l2708
  2454                           
  2455                           ; BSR set to: 0
  2456  00052E  0EFF               	movlw	255
  2457  000530  0100               	movlb	0	; () banked
  2458  000532  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  2459  000534  0EFF               	movlw	255
  2460  000536  0100               	movlb	0	; () banked
  2461  000538  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2462  00053A  0EFF               	movlw	255
  2463  00053C  0100               	movlb	0	; () banked
  2464  00053E  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2465  000540  0E01               	movlw	1
  2466  000542  0100               	movlb	0	; () banked
  2467  000544  277D               	addwf	___ftadd@f2& (0+255),f,b
  2468  000546  0E00               	movlw	0
  2469  000548  0100               	movlb	0	; () banked
  2470  00054A  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2471  00054C  0E00               	movlw	0
  2472  00054E  0100               	movlb	0	; () banked
  2473  000550  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2474  000552                     l2708:
  2475                           
  2476                           ; BSR set to: 0
  2477  000552  0E00               	movlw	0
  2478  000554  0100               	movlb	0	; () banked
  2479  000556  6F83               	movwf	___ftadd@sign& (0+255),b
  2480                           
  2481                           ; BSR set to: 0
  2482  000558  0100               	movlb	0	; () banked
  2483  00055A  517A               	movf	___ftadd@f1& (0+255),w,b
  2484  00055C  0100               	movlb	0	; () banked
  2485  00055E  277D               	addwf	___ftadd@f2& (0+255),f,b
  2486  000560  0100               	movlb	0	; () banked
  2487  000562  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  2488  000564  0100               	movlb	0	; () banked
  2489  000566  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2490  000568  0100               	movlb	0	; () banked
  2491  00056A  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  2492  00056C  0100               	movlb	0	; () banked
  2493  00056E  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2494                           
  2495                           ; BSR set to: 0
  2496  000570  0100               	movlb	0	; () banked
  2497  000572  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2498  000574  D015               	goto	l2718
  2499                           
  2500                           ; BSR set to: 0
  2501  000576  0EFF               	movlw	255
  2502  000578  0100               	movlb	0	; () banked
  2503  00057A  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  2504  00057C  0EFF               	movlw	255
  2505  00057E  0100               	movlb	0	; () banked
  2506  000580  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2507  000582  0EFF               	movlw	255
  2508  000584  0100               	movlb	0	; () banked
  2509  000586  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2510  000588  0E01               	movlw	1
  2511  00058A  0100               	movlb	0	; () banked
  2512  00058C  277D               	addwf	___ftadd@f2& (0+255),f,b
  2513  00058E  0E00               	movlw	0
  2514  000590  0100               	movlb	0	; () banked
  2515  000592  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2516  000594  0E00               	movlw	0
  2517  000596  0100               	movlb	0	; () banked
  2518  000598  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2519                           
  2520                           ; BSR set to: 0
  2521  00059A  0E01               	movlw	1
  2522  00059C  0100               	movlb	0	; () banked
  2523  00059E  6F83               	movwf	___ftadd@sign& (0+255),b
  2524  0005A0                     l2718:
  2525                           
  2526                           ; BSR set to: 0
  2527  0005A0  C07D  F060         	movff	___ftadd@f2,___ftpack@arg
  2528  0005A4  C07E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  2529  0005A8  C07F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  2530  0005AC  C085  F063         	movff	___ftadd@exp1,___ftpack@exp
  2531  0005B0  C083  F064         	movff	___ftadd@sign,___ftpack@sign
  2532  0005B4  ECD8  F008         	call	___ftpack	;wreg free
  2533  0005B8  C060  F07A         	movff	?___ftpack,?___ftadd
  2534  0005BC  C061  F07B         	movff	?___ftpack+1,?___ftadd+1
  2535  0005C0  C062  F07C         	movff	?___ftpack+2,?___ftadd+2
  2536  0005C4  0012               	return	
  2537  0005C6                     __end_of___ftadd:
  2538                           	opt stack 0
  2539                           tblptru	equ	0xFF8
  2540                           tblptrh	equ	0xFF7
  2541                           tblptrl	equ	0xFF6
  2542                           tablat	equ	0xFF5
  2543                           intcon	equ	0xFF2
  2544                           intcon2	equ	0xFF1
  2545                           intcon3	equ	0xFF0
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           status	equ	0xFD8
  2549                           
  2550 ;; *************** function _derecha *****************
  2551 ;; Defined at:
  2552 ;;		line 445 in file "newmain.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    6
  2573 ;; This function calls:
  2574 ;;		_pwmD
  2575 ;; This function is called by:
  2576 ;;		_manual
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text10
  2581  0017F0                     __ptext10:
  2582                           	opt stack 0
  2583  0017F0                     _derecha:
  2584                           	opt stack 23
  2585                           
  2586                           ;newmain.c: 446: pwmD();
  2587                           
  2588                           ;incstack = 0
  2589  0017F0  ECEA  F006         	call	_pwmD	;wreg free
  2590                           
  2591                           ;newmain.c: 447: LATD0 = 1;
  2592  0017F4  808C               	bsf	3980,0,c	;volatile
  2593                           
  2594                           ;newmain.c: 448: LATD1 = 0;
  2595  0017F6  928C               	bcf	3980,1,c	;volatile
  2596                           
  2597                           ;newmain.c: 449: LATD2 = 1;
  2598  0017F8  848C               	bsf	3980,2,c	;volatile
  2599                           
  2600                           ;newmain.c: 450: LATD3 = 0;
  2601  0017FA  968C               	bcf	3980,3,c	;volatile
  2602  0017FC  0012               	return		;funcret
  2603  0017FE                     __end_of_derecha:
  2604                           	opt stack 0
  2605                           tblptru	equ	0xFF8
  2606                           tblptrh	equ	0xFF7
  2607                           tblptrl	equ	0xFF6
  2608                           tablat	equ	0xFF5
  2609                           intcon	equ	0xFF2
  2610                           intcon2	equ	0xFF1
  2611                           intcon3	equ	0xFF0
  2612                           postinc0	equ	0xFEE
  2613                           wreg	equ	0xFE8
  2614                           status	equ	0xFD8
  2615                           
  2616 ;; *************** function _pwmD *****************
  2617 ;; Defined at:
  2618 ;;		line 381 in file "newmain.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;		None
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;		None
  2623 ;; Return value:  Size  Location     Type
  2624 ;;                  1    wreg      void 
  2625 ;; Registers used:
  2626 ;;		wreg, status,2, status,0, cstack
  2627 ;; Tracked objects:
  2628 ;;		On entry : 0/0
  2629 ;;		On exit  : 0/0
  2630 ;;		Unchanged: 0/0
  2631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2632 ;;      Params:         0       0       0       0       0       0       0       0       0
  2633 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2635 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2636 ;;Total ram usage:        0 bytes
  2637 ;; Hardware stack levels used:    1
  2638 ;; Hardware stack levels required when called:    5
  2639 ;; This function calls:
  2640 ;;		___ftge
  2641 ;;		___ftmul
  2642 ;;		___fttol
  2643 ;; This function is called by:
  2644 ;;		_derecha
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text11
  2649  000DD4                     __ptext11:
  2650                           	opt stack 0
  2651  000DD4                     _pwmD:
  2652                           	opt stack 23
  2653                           
  2654                           ;newmain.c: 382: if (y == 3) {
  2655                           
  2656                           ;incstack = 0
  2657  000DD4  0E03               	movlw	3
  2658  000DD6  183E               	xorwf	_y,w,c
  2659  000DD8  103F               	iorwf	_y+1,w,c
  2660  000DDA  A4D8               	btfss	status,2,c
  2661  000DDC  D014               	goto	l2638
  2662                           
  2663                           ;newmain.c: 383: duty_cicle1 = 373.3;
  2664  000DDE  0EA6               	movlw	166
  2665  000DE0  6E3B               	movwf	_duty_cicle1,c
  2666  000DE2  0EBA               	movlw	186
  2667  000DE4  6E3C               	movwf	_duty_cicle1+1,c
  2668  000DE6  0E43               	movlw	67
  2669  000DE8  6E3D               	movwf	_duty_cicle1+2,c
  2670                           
  2671                           ;newmain.c: 384: duty_cicle2 = 190;
  2672  000DEA  0E00               	movlw	0
  2673  000DEC  6E38               	movwf	_duty_cicle2,c
  2674  000DEE  0E3E               	movlw	62
  2675  000DF0  6E39               	movwf	_duty_cicle2+1,c
  2676  000DF2  0E43               	movlw	67
  2677  000DF4  6E3A               	movwf	_duty_cicle2+2,c
  2678                           
  2679                           ;newmain.c: 385: y = 1;
  2680  000DF6  0E00               	movlw	0
  2681  000DF8  6E3F               	movwf	_y+1,c
  2682  000DFA  0E01               	movlw	1
  2683  000DFC  6E3E               	movwf	_y,c
  2684                           
  2685                           ;newmain.c: 386: y = 2;
  2686  000DFE  0E00               	movlw	0
  2687  000E00  6E3F               	movwf	_y+1,c
  2688  000E02  0E02               	movlw	2
  2689  000E04  6E3E               	movwf	_y,c
  2690  000E06                     l2638:
  2691                           
  2692                           ;newmain.c: 387: }
  2693                           ;newmain.c: 388: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  2694  000E06  C03B  F06B         	movff	_duty_cicle1,___ftmul@f1
  2695  000E0A  C03C  F06C         	movff	_duty_cicle1+1,___ftmul@f1+1
  2696  000E0E  C03D  F06D         	movff	_duty_cicle1+2,___ftmul@f1+2
  2697  000E12  0E3F               	movlw	63
  2698  000E14  0100               	movlb	0	; () banked
  2699  000E16  6F6E               	movwf	___ftmul@f2& (0+255),b
  2700  000E18  0EFA               	movlw	250
  2701  000E1A  0100               	movlb	0	; () banked
  2702  000E1C  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  2703  000E1E  0E3E               	movlw	62
  2704  000E20  0100               	movlb	0	; () banked
  2705  000E22  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  2706  000E24  ECE3  F004         	call	___ftmul	;wreg free
  2707  000E28  C06B  F02D         	movff	?___ftmul,_conversion1
  2708  000E2C  C06C  F02E         	movff	?___ftmul+1,_conversion1+1
  2709  000E30  C06D  F02F         	movff	?___ftmul+2,_conversion1+2
  2710                           
  2711                           ;newmain.c: 389: CCPR1L = (int) conversion1 >> 2;
  2712  000E34  C02D  F060         	movff	_conversion1,___fttol@f1
  2713  000E38  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  2714  000E3C  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  2715  000E40  EC36  F008         	call	___fttol	;wreg free
  2716  000E44  0100               	movlb	0	; () banked
  2717  000E46  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2718  000E48  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2719  000E4A  3360               	rrcf	?___fttol& (0+255),f,b
  2720  000E4C  0100               	movlb	0	; () banked
  2721  000E4E  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2722  000E50  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2723  000E52  3360               	rrcf	?___fttol& (0+255),f,b
  2724  000E54  0100               	movlb	0	; () banked
  2725  000E56  5160               	movf	?___fttol& (0+255),w,b
  2726  000E58  6EBE               	movwf	4030,c	;volatile
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;newmain.c: 390: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  2730  000E5A  C02D  F060         	movff	_conversion1,___fttol@f1
  2731  000E5E  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  2732  000E62  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  2733  000E66  EC36  F008         	call	___fttol	;wreg free
  2734  000E6A  0E03               	movlw	3
  2735  000E6C  0100               	movlb	0	; () banked
  2736  000E6E  1760               	andwf	?___fttol& (0+255),f,b
  2737  000E70  0100               	movlb	0	; () banked
  2738  000E72  3B60               	swapf	?___fttol& (0+255),f,b
  2739  000E74  0EF0               	movlw	240
  2740  000E76  0100               	movlb	0	; () banked
  2741  000E78  1760               	andwf	?___fttol& (0+255),f,b
  2742  000E7A  50BD               	movf	4029,w,c	;volatile
  2743  000E7C  0B0F               	andlw	15
  2744  000E7E  0100               	movlb	0	; () banked
  2745  000E80  1160               	iorwf	?___fttol& (0+255),w,b
  2746  000E82  6EBD               	movwf	4029,c	;volatile
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;newmain.c: 391: conversion2 = (float) duty_cicle2 * (500.0 / 1023.0);
  2750  000E84  C038  F06B         	movff	_duty_cicle2,___ftmul@f1
  2751  000E88  C039  F06C         	movff	_duty_cicle2+1,___ftmul@f1+1
  2752  000E8C  C03A  F06D         	movff	_duty_cicle2+2,___ftmul@f1+2
  2753  000E90  0E3F               	movlw	63
  2754  000E92  0100               	movlb	0	; () banked
  2755  000E94  6F6E               	movwf	___ftmul@f2& (0+255),b
  2756  000E96  0EFA               	movlw	250
  2757  000E98  0100               	movlb	0	; () banked
  2758  000E9A  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  2759  000E9C  0E3E               	movlw	62
  2760  000E9E  0100               	movlb	0	; () banked
  2761  000EA0  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  2762  000EA2  ECE3  F004         	call	___ftmul	;wreg free
  2763  000EA6  C06B  F02A         	movff	?___ftmul,_conversion2
  2764  000EAA  C06C  F02B         	movff	?___ftmul+1,_conversion2+1
  2765  000EAE  C06D  F02C         	movff	?___ftmul+2,_conversion2+2
  2766                           
  2767                           ;newmain.c: 392: CCPR2L = (int) conversion2 >> 2;
  2768  000EB2  C02A  F060         	movff	_conversion2,___fttol@f1
  2769  000EB6  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  2770  000EBA  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  2771  000EBE  EC36  F008         	call	___fttol	;wreg free
  2772  000EC2  0100               	movlb	0	; () banked
  2773  000EC4  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2774  000EC6  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2775  000EC8  3360               	rrcf	?___fttol& (0+255),f,b
  2776  000ECA  0100               	movlb	0	; () banked
  2777  000ECC  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2778  000ECE  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2779  000ED0  3360               	rrcf	?___fttol& (0+255),f,b
  2780  000ED2  0100               	movlb	0	; () banked
  2781  000ED4  5160               	movf	?___fttol& (0+255),w,b
  2782  000ED6  6EBB               	movwf	4027,c	;volatile
  2783                           
  2784                           ; BSR set to: 0
  2785                           ;newmain.c: 393: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  2786  000ED8  C02A  F060         	movff	_conversion2,___fttol@f1
  2787  000EDC  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  2788  000EE0  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  2789  000EE4  EC36  F008         	call	___fttol	;wreg free
  2790  000EE8  0E03               	movlw	3
  2791  000EEA  0100               	movlb	0	; () banked
  2792  000EEC  1760               	andwf	?___fttol& (0+255),f,b
  2793  000EEE  0100               	movlb	0	; () banked
  2794  000EF0  3B60               	swapf	?___fttol& (0+255),f,b
  2795  000EF2  0EF0               	movlw	240
  2796  000EF4  0100               	movlb	0	; () banked
  2797  000EF6  1760               	andwf	?___fttol& (0+255),f,b
  2798  000EF8  50BD               	movf	4029,w,c	;volatile
  2799  000EFA  0B0F               	andlw	15
  2800  000EFC  0100               	movlb	0	; () banked
  2801  000EFE  1160               	iorwf	?___fttol& (0+255),w,b
  2802  000F00  6EBA               	movwf	4026,c	;volatile
  2803                           
  2804                           ; BSR set to: 0
  2805                           ;newmain.c: 394: if (conversion1 <= conversion2) {
  2806  000F02  C02A  F060         	movff	_conversion2,___ftge@ff1
  2807  000F06  C02B  F061         	movff	_conversion2+1,___ftge@ff1+1
  2808  000F0A  C02C  F062         	movff	_conversion2+2,___ftge@ff1+2
  2809  000F0E  C02D  F063         	movff	_conversion1,___ftge@ff2
  2810  000F12  C02E  F064         	movff	_conversion1+1,___ftge@ff2+1
  2811  000F16  C02F  F065         	movff	_conversion1+2,___ftge@ff2+2
  2812  000F1A  ECD8  F009         	call	___ftge	;wreg free
  2813  000F1E  0012               	return	
  2814  000F20                     __end_of_pwmD:
  2815                           	opt stack 0
  2816                           tblptru	equ	0xFF8
  2817                           tblptrh	equ	0xFF7
  2818                           tblptrl	equ	0xFF6
  2819                           tablat	equ	0xFF5
  2820                           intcon	equ	0xFF2
  2821                           intcon2	equ	0xFF1
  2822                           intcon3	equ	0xFF0
  2823                           postinc0	equ	0xFEE
  2824                           wreg	equ	0xFE8
  2825                           status	equ	0xFD8
  2826                           
  2827 ;; *************** function _atras *****************
  2828 ;; Defined at:
  2829 ;;		line 436 in file "newmain.c"
  2830 ;; Parameters:    Size  Location     Type
  2831 ;;		None
  2832 ;; Auto vars:     Size  Location     Type
  2833 ;;		None
  2834 ;; Return value:  Size  Location     Type
  2835 ;;                  1    wreg      void 
  2836 ;; Registers used:
  2837 ;;		wreg, status,2, status,0, cstack
  2838 ;; Tracked objects:
  2839 ;;		On entry : 0/0
  2840 ;;		On exit  : 0/0
  2841 ;;		Unchanged: 0/0
  2842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2843 ;;      Params:         0       0       0       0       0       0       0       0       0
  2844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2845 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2846 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2847 ;;Total ram usage:        2 bytes
  2848 ;; Hardware stack levels used:    1
  2849 ;; Hardware stack levels required when called:    6
  2850 ;; This function calls:
  2851 ;;		_pwm
  2852 ;; This function is called by:
  2853 ;;		_manual
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           	psect	text12
  2858  00179C                     __ptext12:
  2859                           	opt stack 0
  2860  00179C                     _atras:
  2861                           	opt stack 23
  2862                           
  2863                           ;newmain.c: 437: _delay((unsigned long)((100)*(8000000/4000.0)));
  2864                           
  2865                           ;incstack = 0
  2866  00179C  0E02               	movlw	2
  2867  00179E  0100               	movlb	0	; () banked
  2868  0017A0  6F7B               	movwf	(??_atras+1)& (0+255),b
  2869  0017A2  0E04               	movlw	4
  2870  0017A4  0100               	movlb	0	; () banked
  2871  0017A6  6F7A               	movwf	??_atras& (0+255),b
  2872  0017A8  0EBA               	movlw	186
  2873  0017AA                     u2927:
  2874  0017AA  2EE8               	decfsz	wreg,f,c
  2875  0017AC  D7FE               	bra	u2927
  2876  0017AE  2F7A               	decfsz	??_atras& (0+255),f,b
  2877  0017B0  D7FC               	bra	u2927
  2878  0017B2  2F7B               	decfsz	(??_atras+1)& (0+255),f,b
  2879  0017B4  D7FA               	bra	u2927
  2880  0017B6  F000               	nop	
  2881                           
  2882                           ;newmain.c: 438: pwm();
  2883  0017B8  EC5E  F009         	call	_pwm	;wreg free
  2884                           
  2885                           ;newmain.c: 439: LATD0 = 0;
  2886  0017BC  908C               	bcf	3980,0,c	;volatile
  2887                           
  2888                           ;newmain.c: 440: LATD1 = 1;
  2889  0017BE  828C               	bsf	3980,1,c	;volatile
  2890                           
  2891                           ;newmain.c: 441: LATD2 = 0;
  2892  0017C0  948C               	bcf	3980,2,c	;volatile
  2893                           
  2894                           ;newmain.c: 442: LATD3 = 1;
  2895  0017C2  868C               	bsf	3980,3,c	;volatile
  2896  0017C4  0012               	return		;funcret
  2897  0017C6                     __end_of_atras:
  2898                           	opt stack 0
  2899                           tblptru	equ	0xFF8
  2900                           tblptrh	equ	0xFF7
  2901                           tblptrl	equ	0xFF6
  2902                           tablat	equ	0xFF5
  2903                           intcon	equ	0xFF2
  2904                           intcon2	equ	0xFF1
  2905                           intcon3	equ	0xFF0
  2906                           postinc0	equ	0xFEE
  2907                           wreg	equ	0xFE8
  2908                           status	equ	0xFD8
  2909                           
  2910 ;; *************** function _automatico *****************
  2911 ;; Defined at:
  2912 ;;		line 226 in file "newmain.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2929 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        2 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    7
  2933 ;; This function calls:
  2934 ;;		___ftge
  2935 ;;		_adelante
  2936 ;;		_freno
  2937 ;;		_izquierda
  2938 ;;		_start2
  2939 ;; This function is called by:
  2940 ;;		_main
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text13
  2945  0000BE                     __ptext13:
  2946                           	opt stack 0
  2947  0000BE                     _automatico:
  2948                           	opt stack 23
  2949                           
  2950                           ;newmain.c: 227: for (i = 0; i <= 3; i++) {
  2951                           
  2952                           ;incstack = 0
  2953  0000BE  0E00               	movlw	0
  2954  0000C0  6E37               	movwf	_i+1,c
  2955  0000C2  0E00               	movlw	0
  2956  0000C4  6E36               	movwf	_i,c
  2957  0000C6  BE37               	btfsc	_i+1,7,c
  2958  0000C8  D008               	goto	l2932
  2959  0000CA  5037               	movf	_i+1,w,c
  2960  0000CC  E105               	bnz	u2820
  2961  0000CE  0E04               	movlw	4
  2962  0000D0  5C36               	subwf	_i,w,c
  2963  0000D2  B0D8               	btfsc	status,0,c
  2964  0000D4  D13A               	goto	l3002
  2965  0000D6  D001               	goto	l2932
  2966  0000D8                     u2820:
  2967  0000D8  D138               	goto	l3002
  2968  0000DA                     l2932:
  2969                           
  2970                           ;newmain.c: 229: start2();
  2971  0000DA  EC3C  F00A         	call	_start2	;wreg free
  2972                           
  2973                           ;newmain.c: 230: while (b >= 4.5) {
  2974  0000DE  D002               	goto	l252
  2975  0000E0                     l2934:
  2976                           
  2977                           ;newmain.c: 231: start2();
  2978  0000E0  EC3C  F00A         	call	_start2	;wreg free
  2979  0000E4                     l252:
  2980  0000E4  C021  F060         	movff	_b,___ftge@ff1
  2981  0000E8  C022  F061         	movff	_b+1,___ftge@ff1+1
  2982  0000EC  C023  F062         	movff	_b+2,___ftge@ff1+2
  2983  0000F0  0E00               	movlw	0
  2984  0000F2  0100               	movlb	0	; () banked
  2985  0000F4  6F63               	movwf	___ftge@ff2& (0+255),b
  2986  0000F6  0E90               	movlw	144
  2987  0000F8  0100               	movlb	0	; () banked
  2988  0000FA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  2989  0000FC  0E40               	movlw	64
  2990  0000FE  0100               	movlb	0	; () banked
  2991  000100  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  2992  000102  ECD8  F009         	call	___ftge	;wreg free
  2993  000106  0100               	movlb	0	; () banked
  2994  000108  B0D8               	btfsc	status,0,c
  2995  00010A  D7EA               	goto	l2934
  2996                           
  2997                           ; BSR set to: 0
  2998                           ;newmain.c: 232: }
  2999                           ;newmain.c: 233: adelante();
  3000                           
  3001                           ; BSR set to: 0
  3002  00010C  ECE3  F00B         	call	_adelante	;wreg free
  3003                           
  3004                           ;newmain.c: 234: _delay((unsigned long)((2400)*(8000000/4000.0)));
  3005  000110  0E19               	movlw	25
  3006  000112  0100               	movlb	0	; () banked
  3007  000114  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3008  000116  0E5A               	movlw	90
  3009  000118  0100               	movlb	0	; () banked
  3010  00011A  6F7C               	movwf	??_automatico& (0+255),b
  3011  00011C  0EB1               	movlw	177
  3012  00011E                     u2937:
  3013  00011E  2EE8               	decfsz	wreg,f,c
  3014  000120  D7FE               	bra	u2937
  3015  000122  2F7C               	decfsz	??_automatico& (0+255),f,b
  3016  000124  D7FC               	bra	u2937
  3017  000126  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3018  000128  D7FA               	bra	u2937
  3019  00012A  D000               	nop2	
  3020                           
  3021                           ;newmain.c: 235: freno();
  3022  00012C  EC06  F00C         	call	_freno	;wreg free
  3023                           
  3024                           ;newmain.c: 236: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3025  000130  0E15               	movlw	21
  3026  000132  0100               	movlb	0	; () banked
  3027  000134  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3028  000136  0E4B               	movlw	75
  3029  000138  0100               	movlb	0	; () banked
  3030  00013A  6F7C               	movwf	??_automatico& (0+255),b
  3031  00013C  0EBE               	movlw	190
  3032  00013E                     u2947:
  3033  00013E  2EE8               	decfsz	wreg,f,c
  3034  000140  D7FE               	bra	u2947
  3035  000142  2F7C               	decfsz	??_automatico& (0+255),f,b
  3036  000144  D7FC               	bra	u2947
  3037  000146  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3038  000148  D7FA               	bra	u2947
  3039  00014A  F000               	nop	
  3040                           
  3041                           ;newmain.c: 237: izquierda();
  3042  00014C  ECFF  F00B         	call	_izquierda	;wreg free
  3043                           
  3044                           ;newmain.c: 238: _delay((unsigned long)((800)*(8000000/4000.0)));
  3045  000150  0E09               	movlw	9
  3046  000152  0100               	movlb	0	; () banked
  3047  000154  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3048  000156  0E1E               	movlw	30
  3049  000158  0100               	movlb	0	; () banked
  3050  00015A  6F7C               	movwf	??_automatico& (0+255),b
  3051  00015C  0EE4               	movlw	228
  3052  00015E                     u2957:
  3053  00015E  2EE8               	decfsz	wreg,f,c
  3054  000160  D7FE               	bra	u2957
  3055  000162  2F7C               	decfsz	??_automatico& (0+255),f,b
  3056  000164  D7FC               	bra	u2957
  3057  000166  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3058  000168  D7FA               	bra	u2957
  3059  00016A  F000               	nop	
  3060                           
  3061                           ;newmain.c: 239: freno();
  3062  00016C  EC06  F00C         	call	_freno	;wreg free
  3063                           
  3064                           ;newmain.c: 240: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3065  000170  0E15               	movlw	21
  3066  000172  0100               	movlb	0	; () banked
  3067  000174  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3068  000176  0E4B               	movlw	75
  3069  000178  0100               	movlb	0	; () banked
  3070  00017A  6F7C               	movwf	??_automatico& (0+255),b
  3071  00017C  0EBE               	movlw	190
  3072  00017E                     u2967:
  3073  00017E  2EE8               	decfsz	wreg,f,c
  3074  000180  D7FE               	bra	u2967
  3075  000182  2F7C               	decfsz	??_automatico& (0+255),f,b
  3076  000184  D7FC               	bra	u2967
  3077  000186  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3078  000188  D7FA               	bra	u2967
  3079  00018A  F000               	nop	
  3080                           
  3081                           ;newmain.c: 241: adelante();
  3082  00018C  ECE3  F00B         	call	_adelante	;wreg free
  3083                           
  3084                           ;newmain.c: 242: _delay((unsigned long)((2200)*(8000000/4000.0)));
  3085  000190  0E17               	movlw	23
  3086  000192  0100               	movlb	0	; () banked
  3087  000194  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3088  000196  0E53               	movlw	83
  3089  000198  0100               	movlb	0	; () banked
  3090  00019A  6F7C               	movwf	??_automatico& (0+255),b
  3091  00019C  0E37               	movlw	55
  3092  00019E                     u2977:
  3093  00019E  2EE8               	decfsz	wreg,f,c
  3094  0001A0  D7FE               	bra	u2977
  3095  0001A2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3096  0001A4  D7FC               	bra	u2977
  3097  0001A6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3098  0001A8  D7FA               	bra	u2977
  3099  0001AA  D000               	nop2	
  3100                           
  3101                           ;newmain.c: 243: freno();
  3102  0001AC  EC06  F00C         	call	_freno	;wreg free
  3103                           
  3104                           ;newmain.c: 244: _delay((unsigned long)((2900)*(8000000/4000.0)));
  3105  0001B0  0E1E               	movlw	30
  3106  0001B2  0100               	movlb	0	; () banked
  3107  0001B4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3108  0001B6  0E6D               	movlw	109
  3109  0001B8  0100               	movlb	0	; () banked
  3110  0001BA  6F7C               	movwf	??_automatico& (0+255),b
  3111  0001BC  0E61               	movlw	97
  3112  0001BE                     u2987:
  3113  0001BE  2EE8               	decfsz	wreg,f,c
  3114  0001C0  D7FE               	bra	u2987
  3115  0001C2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3116  0001C4  D7FC               	bra	u2987
  3117  0001C6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3118  0001C8  D7FA               	bra	u2987
  3119  0001CA  D000               	nop2	
  3120                           
  3121                           ;newmain.c: 245: start2();
  3122  0001CC  EC3C  F00A         	call	_start2	;wreg free
  3123                           
  3124                           ;newmain.c: 247: while (b < 4.5) {
  3125  0001D0  D002               	goto	l255
  3126  0001D2                     l2960:
  3127                           
  3128                           ;newmain.c: 248: start2();
  3129  0001D2  EC3C  F00A         	call	_start2	;wreg free
  3130  0001D6                     l255:
  3131  0001D6  C021  F060         	movff	_b,___ftge@ff1
  3132  0001DA  C022  F061         	movff	_b+1,___ftge@ff1+1
  3133  0001DE  C023  F062         	movff	_b+2,___ftge@ff1+2
  3134  0001E2  0E00               	movlw	0
  3135  0001E4  0100               	movlb	0	; () banked
  3136  0001E6  6F63               	movwf	___ftge@ff2& (0+255),b
  3137  0001E8  0E90               	movlw	144
  3138  0001EA  0100               	movlb	0	; () banked
  3139  0001EC  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  3140  0001EE  0E40               	movlw	64
  3141  0001F0  0100               	movlb	0	; () banked
  3142  0001F2  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  3143  0001F4  ECD8  F009         	call	___ftge	;wreg free
  3144  0001F8  0100               	movlb	0	; () banked
  3145  0001FA  A0D8               	btfss	status,0,c
  3146  0001FC  D7EA               	goto	l2960
  3147                           
  3148                           ; BSR set to: 0
  3149                           ;newmain.c: 249: }
  3150                           ;newmain.c: 250: izquierda();
  3151                           
  3152                           ; BSR set to: 0
  3153  0001FE  ECFF  F00B         	call	_izquierda	;wreg free
  3154                           
  3155                           ;newmain.c: 251: _delay((unsigned long)((800)*(8000000/4000.0)));
  3156  000202  0E09               	movlw	9
  3157  000204  0100               	movlb	0	; () banked
  3158  000206  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3159  000208  0E1E               	movlw	30
  3160  00020A  0100               	movlb	0	; () banked
  3161  00020C  6F7C               	movwf	??_automatico& (0+255),b
  3162  00020E  0EE4               	movlw	228
  3163  000210                     u2997:
  3164  000210  2EE8               	decfsz	wreg,f,c
  3165  000212  D7FE               	bra	u2997
  3166  000214  2F7C               	decfsz	??_automatico& (0+255),f,b
  3167  000216  D7FC               	bra	u2997
  3168  000218  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3169  00021A  D7FA               	bra	u2997
  3170  00021C  F000               	nop	
  3171                           
  3172                           ;newmain.c: 252: freno();
  3173  00021E  EC06  F00C         	call	_freno	;wreg free
  3174                           
  3175                           ;newmain.c: 253: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3176  000222  0E15               	movlw	21
  3177  000224  0100               	movlb	0	; () banked
  3178  000226  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3179  000228  0E4B               	movlw	75
  3180  00022A  0100               	movlb	0	; () banked
  3181  00022C  6F7C               	movwf	??_automatico& (0+255),b
  3182  00022E  0EBE               	movlw	190
  3183  000230                     u3007:
  3184  000230  2EE8               	decfsz	wreg,f,c
  3185  000232  D7FE               	bra	u3007
  3186  000234  2F7C               	decfsz	??_automatico& (0+255),f,b
  3187  000236  D7FC               	bra	u3007
  3188  000238  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3189  00023A  D7FA               	bra	u3007
  3190  00023C  F000               	nop	
  3191                           
  3192                           ;newmain.c: 254: adelante();
  3193  00023E  ECE3  F00B         	call	_adelante	;wreg free
  3194                           
  3195                           ;newmain.c: 255: _delay((unsigned long)((1900)*(8000000/4000.0)));
  3196  000242  0E14               	movlw	20
  3197  000244  0100               	movlb	0	; () banked
  3198  000246  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3199  000248  0E48               	movlw	72
  3200  00024A  0100               	movlb	0	; () banked
  3201  00024C  6F7C               	movwf	??_automatico& (0+255),b
  3202  00024E  0E01               	movlw	1
  3203  000250                     u3017:
  3204  000250  2EE8               	decfsz	wreg,f,c
  3205  000252  D7FE               	bra	u3017
  3206  000254  2F7C               	decfsz	??_automatico& (0+255),f,b
  3207  000256  D7FC               	bra	u3017
  3208  000258  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3209  00025A  D7FA               	bra	u3017
  3210                           
  3211                           ;newmain.c: 256: freno();
  3212  00025C  EC06  F00C         	call	_freno	;wreg free
  3213                           
  3214                           ;newmain.c: 257: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3215  000260  0E15               	movlw	21
  3216  000262  0100               	movlb	0	; () banked
  3217  000264  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3218  000266  0E4B               	movlw	75
  3219  000268  0100               	movlb	0	; () banked
  3220  00026A  6F7C               	movwf	??_automatico& (0+255),b
  3221  00026C  0EBE               	movlw	190
  3222  00026E                     u3027:
  3223  00026E  2EE8               	decfsz	wreg,f,c
  3224  000270  D7FE               	bra	u3027
  3225  000272  2F7C               	decfsz	??_automatico& (0+255),f,b
  3226  000274  D7FC               	bra	u3027
  3227  000276  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3228  000278  D7FA               	bra	u3027
  3229  00027A  F000               	nop	
  3230                           
  3231                           ;newmain.c: 258: izquierda();
  3232  00027C  ECFF  F00B         	call	_izquierda	;wreg free
  3233                           
  3234                           ;newmain.c: 259: _delay((unsigned long)((800)*(8000000/4000.0)));
  3235  000280  0E09               	movlw	9
  3236  000282  0100               	movlb	0	; () banked
  3237  000284  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3238  000286  0E1E               	movlw	30
  3239  000288  0100               	movlb	0	; () banked
  3240  00028A  6F7C               	movwf	??_automatico& (0+255),b
  3241  00028C  0EE4               	movlw	228
  3242  00028E                     u3037:
  3243  00028E  2EE8               	decfsz	wreg,f,c
  3244  000290  D7FE               	bra	u3037
  3245  000292  2F7C               	decfsz	??_automatico& (0+255),f,b
  3246  000294  D7FC               	bra	u3037
  3247  000296  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3248  000298  D7FA               	bra	u3037
  3249  00029A  F000               	nop	
  3250                           
  3251                           ;newmain.c: 260: freno();
  3252  00029C  EC06  F00C         	call	_freno	;wreg free
  3253                           
  3254                           ;newmain.c: 261: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3255  0002A0  0E15               	movlw	21
  3256  0002A2  0100               	movlb	0	; () banked
  3257  0002A4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3258  0002A6  0E4B               	movlw	75
  3259  0002A8  0100               	movlb	0	; () banked
  3260  0002AA  6F7C               	movwf	??_automatico& (0+255),b
  3261  0002AC  0EBE               	movlw	190
  3262  0002AE                     u3047:
  3263  0002AE  2EE8               	decfsz	wreg,f,c
  3264  0002B0  D7FE               	bra	u3047
  3265  0002B2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3266  0002B4  D7FC               	bra	u3047
  3267  0002B6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3268  0002B8  D7FA               	bra	u3047
  3269  0002BA  F000               	nop	
  3270                           
  3271                           ;newmain.c: 262: adelante();
  3272  0002BC  ECE3  F00B         	call	_adelante	;wreg free
  3273                           
  3274                           ;newmain.c: 263: _delay((unsigned long)((1800)*(8000000/4000.0)));
  3275  0002C0  0E13               	movlw	19
  3276  0002C2  0100               	movlb	0	; () banked
  3277  0002C4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3278  0002C6  0E44               	movlw	68
  3279  0002C8  0100               	movlb	0	; () banked
  3280  0002CA  6F7C               	movwf	??_automatico& (0+255),b
  3281  0002CC  0E44               	movlw	68
  3282  0002CE                     u3057:
  3283  0002CE  2EE8               	decfsz	wreg,f,c
  3284  0002D0  D7FE               	bra	u3057
  3285  0002D2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3286  0002D4  D7FC               	bra	u3057
  3287  0002D6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3288  0002D8  D7FA               	bra	u3057
  3289  0002DA  F000               	nop	
  3290                           
  3291                           ;newmain.c: 264: freno();
  3292  0002DC  EC06  F00C         	call	_freno	;wreg free
  3293                           
  3294                           ;newmain.c: 265: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3295  0002E0  0E15               	movlw	21
  3296  0002E2  0100               	movlb	0	; () banked
  3297  0002E4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3298  0002E6  0E4B               	movlw	75
  3299  0002E8  0100               	movlb	0	; () banked
  3300  0002EA  6F7C               	movwf	??_automatico& (0+255),b
  3301  0002EC  0EBE               	movlw	190
  3302  0002EE                     u3067:
  3303  0002EE  2EE8               	decfsz	wreg,f,c
  3304  0002F0  D7FE               	bra	u3067
  3305  0002F2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3306  0002F4  D7FC               	bra	u3067
  3307  0002F6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3308  0002F8  D7FA               	bra	u3067
  3309  0002FA  F000               	nop	
  3310                           
  3311                           ;newmain.c: 266: izquierda();
  3312  0002FC  ECFF  F00B         	call	_izquierda	;wreg free
  3313                           
  3314                           ;newmain.c: 267: _delay((unsigned long)((800)*(8000000/4000.0)));
  3315  000300  0E09               	movlw	9
  3316  000302  0100               	movlb	0	; () banked
  3317  000304  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3318  000306  0E1E               	movlw	30
  3319  000308  0100               	movlb	0	; () banked
  3320  00030A  6F7C               	movwf	??_automatico& (0+255),b
  3321  00030C  0EE4               	movlw	228
  3322  00030E                     u3077:
  3323  00030E  2EE8               	decfsz	wreg,f,c
  3324  000310  D7FE               	bra	u3077
  3325  000312  2F7C               	decfsz	??_automatico& (0+255),f,b
  3326  000314  D7FC               	bra	u3077
  3327  000316  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3328  000318  D7FA               	bra	u3077
  3329  00031A  F000               	nop	
  3330                           
  3331                           ;newmain.c: 268: freno();
  3332  00031C  EC06  F00C         	call	_freno	;wreg free
  3333                           
  3334                           ;newmain.c: 269: _delay((unsigned long)((5000)*(8000000/4000.0)));
  3335  000320  0E33               	movlw	51
  3336  000322  0100               	movlb	0	; () banked
  3337  000324  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3338  000326  0EBB               	movlw	187
  3339  000328  0100               	movlb	0	; () banked
  3340  00032A  6F7C               	movwf	??_automatico& (0+255),b
  3341  00032C  0EDF               	movlw	223
  3342  00032E                     u3087:
  3343  00032E  2EE8               	decfsz	wreg,f,c
  3344  000330  D7FE               	bra	u3087
  3345  000332  2F7C               	decfsz	??_automatico& (0+255),f,b
  3346  000334  D7FC               	bra	u3087
  3347  000336  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3348  000338  D7FA               	bra	u3087
  3349  00033A  D000               	nop2	
  3350  00033C  4A36               	infsnz	_i,f,c
  3351  00033E  2A37               	incf	_i+1,f,c
  3352  000340  BE37               	btfsc	_i+1,7,c
  3353  000342  D6CB               	goto	l2932
  3354  000344  5037               	movf	_i+1,w,c
  3355  000346  E101               	bnz	l3002
  3356  000348  D6C2               	goto	L1
  3357  00034A                     l3002:
  3358                           
  3359                           ;newmain.c: 272: }
  3360                           ;newmain.c: 273: ADCON0 = 0x01;
  3361  00034A  0E01               	movlw	1
  3362  00034C  6EC2               	movwf	4034,c	;volatile
  3363                           
  3364                           ;newmain.c: 274: x = 0;
  3365  00034E  0E00               	movlw	0
  3366  000350  0100               	movlb	0	; () banked
  3367  000352  6FA2               	movwf	(_x+1)& (0+255),b
  3368  000354  0E00               	movlw	0
  3369  000356  6FA1               	movwf	_x& (0+255),b
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;newmain.c: 275: freno();
  3373  000358  EC06  F00C         	call	_freno	;wreg free
  3374  00035C  0012               	return		;funcret
  3375  00035E                     __end_of_automatico:
  3376                           	opt stack 0
  3377                           tblptru	equ	0xFF8
  3378                           tblptrh	equ	0xFF7
  3379                           tblptrl	equ	0xFF6
  3380                           tablat	equ	0xFF5
  3381                           intcon	equ	0xFF2
  3382                           intcon2	equ	0xFF1
  3383                           intcon3	equ	0xFF0
  3384                           postinc0	equ	0xFEE
  3385                           wreg	equ	0xFE8
  3386                           status	equ	0xFD8
  3387                           
  3388 ;; *************** function _start2 *****************
  3389 ;; Defined at:
  3390 ;;		line 173 in file "newmain.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;		None
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  1    wreg      void 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3404 ;;      Params:         0       0       0       0       0       0       0       0       0
  3405 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3406 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3407 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3408 ;;Total ram usage:        2 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:    5
  3411 ;; This function calls:
  3412 ;;		___awtoft
  3413 ;;		___ftmul
  3414 ;; This function is called by:
  3415 ;;		_automatico
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419                           	psect	text14
  3420  001478                     __ptext14:
  3421                           	opt stack 0
  3422  001478                     _start2:
  3423                           	opt stack 24
  3424                           
  3425                           ;newmain.c: 174: ADCON0bits.GO = 1;
  3426                           
  3427                           ;incstack = 0
  3428  001478  82C2               	bsf	4034,1,c	;volatile
  3429  00147A                     l205:
  3430  00147A  B2C2               	btfsc	4034,1,c	;volatile
  3431  00147C  D7FE               	goto	l205
  3432                           
  3433                           ;newmain.c: 176: if (x == 2) {
  3434  00147E  0E02               	movlw	2
  3435  001480  0100               	movlb	0	; () banked
  3436  001482  19A1               	xorwf	_x& (0+255),w,b
  3437  001484  0100               	movlb	0	; () banked
  3438  001486  11A2               	iorwf	(_x+1)& (0+255),w,b
  3439  001488  A4D8               	btfss	status,2,c
  3440  00148A  0012               	return	
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;newmain.c: 177: _delay((unsigned long)((10)*(8000000/4000.0)));
  3444  00148C  0E1A               	movlw	26
  3445  00148E  0100               	movlb	0	; () banked
  3446  001490  6F7A               	movwf	??_start2& (0+255),b
  3447  001492  0EF8               	movlw	248
  3448  001494                     u3097:
  3449  001494  2EE8               	decfsz	wreg,f,c
  3450  001496  D7FE               	bra	u3097
  3451  001498  2F7A               	decfsz	??_start2& (0+255),f,b
  3452  00149A  D7FC               	bra	u3097
  3453  00149C  F000               	nop	
  3454                           
  3455                           ;newmain.c: 178: a = ADRESH << 8 | ADRESL;
  3456  00149E  50C3               	movf	4035,w,c	;volatile
  3457  0014A0  CFC4 F07A          	movff	4036,??_start2	;volatile
  3458  0014A4  0100               	movlb	0	; () banked
  3459  0014A6  6B7B               	clrf	(??_start2+1)& (0+255),b
  3460  0014A8  C07A  F07B         	movff	??_start2,??_start2+1
  3461  0014AC  0100               	movlb	0	; () banked
  3462  0014AE  6B7A               	clrf	??_start2& (0+255),b
  3463  0014B0  0100               	movlb	0	; () banked
  3464  0014B2  117A               	iorwf	??_start2& (0+255),w,b
  3465  0014B4  0100               	movlb	0	; () banked
  3466  0014B6  6F99               	movwf	_a& (0+255),b
  3467  0014B8  0100               	movlb	0	; () banked
  3468  0014BA  517B               	movf	(??_start2+1)& (0+255),w,b
  3469  0014BC  0100               	movlb	0	; () banked
  3470  0014BE  6F9A               	movwf	(_a+1)& (0+255),b
  3471                           
  3472                           ; BSR set to: 0
  3473                           ;newmain.c: 179: b = (float) a * (5.0 / 1023.0);
  3474  0014C0  C099  F068         	movff	_a,___awtoft@c
  3475  0014C4  C09A  F069         	movff	_a+1,___awtoft@c+1
  3476  0014C8  EC8F  F00B         	call	___awtoft	;wreg free
  3477  0014CC  C068  F06B         	movff	?___awtoft,___ftmul@f1
  3478  0014D0  C069  F06C         	movff	?___awtoft+1,___ftmul@f1+1
  3479  0014D4  C06A  F06D         	movff	?___awtoft+2,___ftmul@f1+2
  3480  0014D8  0E28               	movlw	40
  3481  0014DA  0100               	movlb	0	; () banked
  3482  0014DC  6F6E               	movwf	___ftmul@f2& (0+255),b
  3483  0014DE  0EA0               	movlw	160
  3484  0014E0  0100               	movlb	0	; () banked
  3485  0014E2  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3486  0014E4  0E3B               	movlw	59
  3487  0014E6  0100               	movlb	0	; () banked
  3488  0014E8  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3489  0014EA  ECE3  F004         	call	___ftmul	;wreg free
  3490  0014EE  C06B  F021         	movff	?___ftmul,_b
  3491  0014F2  C06C  F022         	movff	?___ftmul+1,_b+1
  3492  0014F6  C06D  F023         	movff	?___ftmul+2,_b+2
  3493                           
  3494                           ;newmain.c: 180: _delay((unsigned long)((3)*(8000000/4000000.0)));
  3495  0014FA  D000               	nop2		;2 cycle nop
  3496  0014FC  D000               	nop2		;2 cycle nop
  3497  0014FE  D000               	nop2		;2 cycle nop
  3498  001500  0012               	return	
  3499  001502                     __end_of_start2:
  3500                           	opt stack 0
  3501                           tblptru	equ	0xFF8
  3502                           tblptrh	equ	0xFF7
  3503                           tblptrl	equ	0xFF6
  3504                           tablat	equ	0xFF5
  3505                           intcon	equ	0xFF2
  3506                           intcon2	equ	0xFF1
  3507                           intcon3	equ	0xFF0
  3508                           postinc0	equ	0xFEE
  3509                           wreg	equ	0xFE8
  3510                           status	equ	0xFD8
  3511                           
  3512 ;; *************** function ___awtoft *****************
  3513 ;; Defined at:
  3514 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  c               2    8[BANK0 ] int 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  sign            1   31[COMRAM] unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  3    8[BANK0 ] float 
  3521 ;; Registers used:
  3522 ;;		wreg, status,2, status,0, cstack
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3528 ;;      Params:         0       3       0       0       0       0       0       0       0
  3529 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3531 ;;      Totals:         1       3       0       0       0       0       0       0       0
  3532 ;;Total ram usage:        4 bytes
  3533 ;; Hardware stack levels used:    1
  3534 ;; Hardware stack levels required when called:    4
  3535 ;; This function calls:
  3536 ;;		___ftpack
  3537 ;; This function is called by:
  3538 ;;		_start
  3539 ;;		_start1
  3540 ;;		_start2
  3541 ;; This function uses a non-reentrant model
  3542 ;;
  3543                           
  3544                           	psect	text15
  3545  00171E                     __ptext15:
  3546                           	opt stack 0
  3547  00171E                     ___awtoft:
  3548                           	opt stack 25
  3549                           
  3550                           ;incstack = 0
  3551  00171E  0E00               	movlw	0
  3552  001720  6E20               	movwf	___awtoft@sign,c
  3553  001722  0100               	movlb	0	; () banked
  3554  001724  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  3555  001726  D007               	goto	l2730
  3556                           
  3557                           ; BSR set to: 0
  3558  001728  0100               	movlb	0	; () banked
  3559  00172A  6D68               	negf	___awtoft@c& (0+255),b
  3560  00172C  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  3561  00172E  B0D8               	btfsc	status,0,c
  3562  001730  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  3563                           
  3564                           ; BSR set to: 0
  3565  001732  0E01               	movlw	1
  3566  001734  6E20               	movwf	___awtoft@sign,c
  3567  001736                     l2730:
  3568                           
  3569                           ; BSR set to: 0
  3570  001736  C068  F060         	movff	___awtoft@c,___ftpack@arg
  3571  00173A  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  3572  00173E  0100               	movlb	0	; () banked
  3573  001740  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  3574  001742  0E8E               	movlw	142
  3575  001744  0100               	movlb	0	; () banked
  3576  001746  6F63               	movwf	___ftpack@exp& (0+255),b
  3577  001748  C020  F064         	movff	___awtoft@sign,___ftpack@sign
  3578  00174C  ECD8  F008         	call	___ftpack	;wreg free
  3579  001750  C060  F068         	movff	?___ftpack,?___awtoft
  3580  001754  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  3581  001758  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  3582  00175C  0012               	return	
  3583  00175E                     __end_of___awtoft:
  3584                           	opt stack 0
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           intcon	equ	0xFF2
  3590                           intcon2	equ	0xFF1
  3591                           intcon3	equ	0xFF0
  3592                           postinc0	equ	0xFEE
  3593                           wreg	equ	0xFE8
  3594                           status	equ	0xFD8
  3595                           
  3596 ;; *************** function _izquierda *****************
  3597 ;; Defined at:
  3598 ;;		line 453 in file "newmain.c"
  3599 ;; Parameters:    Size  Location     Type
  3600 ;;		None
  3601 ;; Auto vars:     Size  Location     Type
  3602 ;;		None
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  1    wreg      void 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3612 ;;      Params:         0       0       0       0       0       0       0       0       0
  3613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3616 ;;Total ram usage:        0 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    6
  3619 ;; This function calls:
  3620 ;;		_pwmI
  3621 ;; This function is called by:
  3622 ;;		_automatico
  3623 ;;		_manual
  3624 ;; This function uses a non-reentrant model
  3625 ;;
  3626                           
  3627                           	psect	text16
  3628  0017FE                     __ptext16:
  3629                           	opt stack 0
  3630  0017FE                     _izquierda:
  3631                           	opt stack 23
  3632                           
  3633                           ;newmain.c: 454: pwmI();
  3634                           
  3635                           ;incstack = 0
  3636  0017FE  EC90  F007         	call	_pwmI	;wreg free
  3637                           
  3638                           ;newmain.c: 455: LATD0 = 1;
  3639  001802  808C               	bsf	3980,0,c	;volatile
  3640                           
  3641                           ;newmain.c: 456: LATD1 = 0;
  3642  001804  928C               	bcf	3980,1,c	;volatile
  3643                           
  3644                           ;newmain.c: 457: LATD2 = 1;
  3645  001806  848C               	bsf	3980,2,c	;volatile
  3646                           
  3647                           ;newmain.c: 458: LATD3 = 0;
  3648  001808  968C               	bcf	3980,3,c	;volatile
  3649  00180A  0012               	return		;funcret
  3650  00180C                     __end_of_izquierda:
  3651                           	opt stack 0
  3652                           tblptru	equ	0xFF8
  3653                           tblptrh	equ	0xFF7
  3654                           tblptrl	equ	0xFF6
  3655                           tablat	equ	0xFF5
  3656                           intcon	equ	0xFF2
  3657                           intcon2	equ	0xFF1
  3658                           intcon3	equ	0xFF0
  3659                           postinc0	equ	0xFEE
  3660                           wreg	equ	0xFE8
  3661                           status	equ	0xFD8
  3662                           
  3663 ;; *************** function _pwmI *****************
  3664 ;; Defined at:
  3665 ;;		line 363 in file "newmain.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;		None
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;		None
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3679 ;;      Params:         0       0       0       0       0       0       0       0       0
  3680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3682 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3683 ;;Total ram usage:        0 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    5
  3686 ;; This function calls:
  3687 ;;		___ftge
  3688 ;;		___ftmul
  3689 ;;		___fttol
  3690 ;; This function is called by:
  3691 ;;		_izquierda
  3692 ;; This function uses a non-reentrant model
  3693 ;;
  3694                           
  3695                           	psect	text17
  3696  000F20                     __ptext17:
  3697                           	opt stack 0
  3698  000F20                     _pwmI:
  3699                           	opt stack 23
  3700                           
  3701                           ;newmain.c: 364: if (y == 2) {
  3702                           
  3703                           ;incstack = 0
  3704  000F20  0E02               	movlw	2
  3705  000F22  183E               	xorwf	_y,w,c
  3706  000F24  103F               	iorwf	_y+1,w,c
  3707  000F26  A4D8               	btfss	status,2,c
  3708  000F28  D014               	goto	l2620
  3709                           
  3710                           ;newmain.c: 365: duty_cicle1 = 190;
  3711  000F2A  0E00               	movlw	0
  3712  000F2C  6E3B               	movwf	_duty_cicle1,c
  3713  000F2E  0E3E               	movlw	62
  3714  000F30  6E3C               	movwf	_duty_cicle1+1,c
  3715  000F32  0E43               	movlw	67
  3716  000F34  6E3D               	movwf	_duty_cicle1+2,c
  3717                           
  3718                           ;newmain.c: 366: duty_cicle2 = 373.3;
  3719  000F36  0EA6               	movlw	166
  3720  000F38  6E38               	movwf	_duty_cicle2,c
  3721  000F3A  0EBA               	movlw	186
  3722  000F3C  6E39               	movwf	_duty_cicle2+1,c
  3723  000F3E  0E43               	movlw	67
  3724  000F40  6E3A               	movwf	_duty_cicle2+2,c
  3725                           
  3726                           ;newmain.c: 367: y = 1;
  3727  000F42  0E00               	movlw	0
  3728  000F44  6E3F               	movwf	_y+1,c
  3729  000F46  0E01               	movlw	1
  3730  000F48  6E3E               	movwf	_y,c
  3731                           
  3732                           ;newmain.c: 368: y = 3;
  3733  000F4A  0E00               	movlw	0
  3734  000F4C  6E3F               	movwf	_y+1,c
  3735  000F4E  0E03               	movlw	3
  3736  000F50  6E3E               	movwf	_y,c
  3737  000F52                     l2620:
  3738                           
  3739                           ;newmain.c: 369: }
  3740                           ;newmain.c: 370: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  3741  000F52  C03B  F06B         	movff	_duty_cicle1,___ftmul@f1
  3742  000F56  C03C  F06C         	movff	_duty_cicle1+1,___ftmul@f1+1
  3743  000F5A  C03D  F06D         	movff	_duty_cicle1+2,___ftmul@f1+2
  3744  000F5E  0E3F               	movlw	63
  3745  000F60  0100               	movlb	0	; () banked
  3746  000F62  6F6E               	movwf	___ftmul@f2& (0+255),b
  3747  000F64  0EFA               	movlw	250
  3748  000F66  0100               	movlb	0	; () banked
  3749  000F68  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3750  000F6A  0E3E               	movlw	62
  3751  000F6C  0100               	movlb	0	; () banked
  3752  000F6E  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3753  000F70  ECE3  F004         	call	___ftmul	;wreg free
  3754  000F74  C06B  F02D         	movff	?___ftmul,_conversion1
  3755  000F78  C06C  F02E         	movff	?___ftmul+1,_conversion1+1
  3756  000F7C  C06D  F02F         	movff	?___ftmul+2,_conversion1+2
  3757                           
  3758                           ;newmain.c: 371: CCPR1L = (int) conversion1 >> 2;
  3759  000F80  C02D  F060         	movff	_conversion1,___fttol@f1
  3760  000F84  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  3761  000F88  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  3762  000F8C  EC36  F008         	call	___fttol	;wreg free
  3763  000F90  0100               	movlb	0	; () banked
  3764  000F92  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3765  000F94  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3766  000F96  3360               	rrcf	?___fttol& (0+255),f,b
  3767  000F98  0100               	movlb	0	; () banked
  3768  000F9A  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3769  000F9C  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3770  000F9E  3360               	rrcf	?___fttol& (0+255),f,b
  3771  000FA0  0100               	movlb	0	; () banked
  3772  000FA2  5160               	movf	?___fttol& (0+255),w,b
  3773  000FA4  6EBE               	movwf	4030,c	;volatile
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;newmain.c: 372: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  3777  000FA6  C02D  F060         	movff	_conversion1,___fttol@f1
  3778  000FAA  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  3779  000FAE  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  3780  000FB2  EC36  F008         	call	___fttol	;wreg free
  3781  000FB6  0E03               	movlw	3
  3782  000FB8  0100               	movlb	0	; () banked
  3783  000FBA  1760               	andwf	?___fttol& (0+255),f,b
  3784  000FBC  0100               	movlb	0	; () banked
  3785  000FBE  3B60               	swapf	?___fttol& (0+255),f,b
  3786  000FC0  0EF0               	movlw	240
  3787  000FC2  0100               	movlb	0	; () banked
  3788  000FC4  1760               	andwf	?___fttol& (0+255),f,b
  3789  000FC6  50BD               	movf	4029,w,c	;volatile
  3790  000FC8  0B0F               	andlw	15
  3791  000FCA  0100               	movlb	0	; () banked
  3792  000FCC  1160               	iorwf	?___fttol& (0+255),w,b
  3793  000FCE  6EBD               	movwf	4029,c	;volatile
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;newmain.c: 373: conversion2 = (float) duty_cicle2 * (500.0 / 1023.0);
  3797  000FD0  C038  F06B         	movff	_duty_cicle2,___ftmul@f1
  3798  000FD4  C039  F06C         	movff	_duty_cicle2+1,___ftmul@f1+1
  3799  000FD8  C03A  F06D         	movff	_duty_cicle2+2,___ftmul@f1+2
  3800  000FDC  0E3F               	movlw	63
  3801  000FDE  0100               	movlb	0	; () banked
  3802  000FE0  6F6E               	movwf	___ftmul@f2& (0+255),b
  3803  000FE2  0EFA               	movlw	250
  3804  000FE4  0100               	movlb	0	; () banked
  3805  000FE6  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3806  000FE8  0E3E               	movlw	62
  3807  000FEA  0100               	movlb	0	; () banked
  3808  000FEC  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3809  000FEE  ECE3  F004         	call	___ftmul	;wreg free
  3810  000FF2  C06B  F02A         	movff	?___ftmul,_conversion2
  3811  000FF6  C06C  F02B         	movff	?___ftmul+1,_conversion2+1
  3812  000FFA  C06D  F02C         	movff	?___ftmul+2,_conversion2+2
  3813                           
  3814                           ;newmain.c: 374: CCPR2L = (int) conversion2 >> 2;
  3815  000FFE  C02A  F060         	movff	_conversion2,___fttol@f1
  3816  001002  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  3817  001006  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  3818  00100A  EC36  F008         	call	___fttol	;wreg free
  3819  00100E  0100               	movlb	0	; () banked
  3820  001010  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3821  001012  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3822  001014  3360               	rrcf	?___fttol& (0+255),f,b
  3823  001016  0100               	movlb	0	; () banked
  3824  001018  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3825  00101A  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3826  00101C  3360               	rrcf	?___fttol& (0+255),f,b
  3827  00101E  0100               	movlb	0	; () banked
  3828  001020  5160               	movf	?___fttol& (0+255),w,b
  3829  001022  6EBB               	movwf	4027,c	;volatile
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;newmain.c: 375: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  3833  001024  C02A  F060         	movff	_conversion2,___fttol@f1
  3834  001028  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  3835  00102C  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  3836  001030  EC36  F008         	call	___fttol	;wreg free
  3837  001034  0E03               	movlw	3
  3838  001036  0100               	movlb	0	; () banked
  3839  001038  1760               	andwf	?___fttol& (0+255),f,b
  3840  00103A  0100               	movlb	0	; () banked
  3841  00103C  3B60               	swapf	?___fttol& (0+255),f,b
  3842  00103E  0EF0               	movlw	240
  3843  001040  0100               	movlb	0	; () banked
  3844  001042  1760               	andwf	?___fttol& (0+255),f,b
  3845  001044  50BD               	movf	4029,w,c	;volatile
  3846  001046  0B0F               	andlw	15
  3847  001048  0100               	movlb	0	; () banked
  3848  00104A  1160               	iorwf	?___fttol& (0+255),w,b
  3849  00104C  6EBA               	movwf	4026,c	;volatile
  3850                           
  3851                           ; BSR set to: 0
  3852                           ;newmain.c: 376: if (conversion1 >= conversion2) {
  3853  00104E  C02D  F060         	movff	_conversion1,___ftge@ff1
  3854  001052  C02E  F061         	movff	_conversion1+1,___ftge@ff1+1
  3855  001056  C02F  F062         	movff	_conversion1+2,___ftge@ff1+2
  3856  00105A  C02A  F063         	movff	_conversion2,___ftge@ff2
  3857  00105E  C02B  F064         	movff	_conversion2+1,___ftge@ff2+1
  3858  001062  C02C  F065         	movff	_conversion2+2,___ftge@ff2+2
  3859  001066  ECD8  F009         	call	___ftge	;wreg free
  3860  00106A  0012               	return	
  3861  00106C                     __end_of_pwmI:
  3862                           	opt stack 0
  3863                           tblptru	equ	0xFF8
  3864                           tblptrh	equ	0xFF7
  3865                           tblptrl	equ	0xFF6
  3866                           tablat	equ	0xFF5
  3867                           intcon	equ	0xFF2
  3868                           intcon2	equ	0xFF1
  3869                           intcon3	equ	0xFF0
  3870                           postinc0	equ	0xFEE
  3871                           wreg	equ	0xFE8
  3872                           status	equ	0xFD8
  3873                           
  3874 ;; *************** function ___ftge *****************
  3875 ;; Defined at:
  3876 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  3877 ;; Parameters:    Size  Location     Type
  3878 ;;  ff1             3    0[BANK0 ] float 
  3879 ;;  ff2             3    3[BANK0 ] float 
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;		None               void
  3884 ;; Registers used:
  3885 ;;		wreg, status,2, status,0
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3891 ;;      Params:         0       6       0       0       0       0       0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3893 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3894 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3895 ;;Total ram usage:        9 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    3
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_automatico
  3902 ;;		_pwmI
  3903 ;;		_pwmD
  3904 ;;		_pwmA1
  3905 ;;		_pwmB1
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text18
  3910  0013B0                     __ptext18:
  3911                           	opt stack 0
  3912  0013B0                     ___ftge:
  3913                           	opt stack 25
  3914                           
  3915                           ;incstack = 0
  3916  0013B0  0100               	movlb	0	; () banked
  3917  0013B2  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  3918  0013B4  D01D               	goto	l2542
  3919                           
  3920                           ; BSR set to: 0
  3921  0013B6  C060  F066         	movff	___ftge@ff1,??___ftge
  3922  0013BA  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  3923  0013BE  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  3924  0013C2  0100               	movlb	0	; () banked
  3925  0013C4  1F66               	comf	??___ftge& (0+255),f,b
  3926  0013C6  1F67               	comf	(??___ftge+1)& (0+255),f,b
  3927  0013C8  1F68               	comf	(??___ftge+2)& (0+255),f,b
  3928  0013CA  2B66               	incf	??___ftge& (0+255),f,b
  3929  0013CC  0E00               	movlw	0
  3930  0013CE  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  3931  0013D0  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  3932  0013D2  0E00               	movlw	0
  3933  0013D4  0100               	movlb	0	; () banked
  3934  0013D6  2566               	addwf	??___ftge& (0+255),w,b
  3935  0013D8  0100               	movlb	0	; () banked
  3936  0013DA  6F60               	movwf	___ftge@ff1& (0+255),b
  3937  0013DC  0E00               	movlw	0
  3938  0013DE  0100               	movlb	0	; () banked
  3939  0013E0  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  3940  0013E2  0100               	movlb	0	; () banked
  3941  0013E4  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  3942  0013E6  0E80               	movlw	128
  3943  0013E8  0100               	movlb	0	; () banked
  3944  0013EA  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  3945  0013EC  0100               	movlb	0	; () banked
  3946  0013EE  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  3947  0013F0                     l2542:
  3948                           
  3949                           ; BSR set to: 0
  3950  0013F0  0100               	movlb	0	; () banked
  3951  0013F2  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  3952  0013F4  D01D               	goto	l2546
  3953                           
  3954                           ; BSR set to: 0
  3955  0013F6  C063  F066         	movff	___ftge@ff2,??___ftge
  3956  0013FA  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  3957  0013FE  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  3958  001402  0100               	movlb	0	; () banked
  3959  001404  1F66               	comf	??___ftge& (0+255),f,b
  3960  001406  1F67               	comf	(??___ftge+1)& (0+255),f,b
  3961  001408  1F68               	comf	(??___ftge+2)& (0+255),f,b
  3962  00140A  2B66               	incf	??___ftge& (0+255),f,b
  3963  00140C  0E00               	movlw	0
  3964  00140E  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  3965  001410  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  3966  001412  0E00               	movlw	0
  3967  001414  0100               	movlb	0	; () banked
  3968  001416  2566               	addwf	??___ftge& (0+255),w,b
  3969  001418  0100               	movlb	0	; () banked
  3970  00141A  6F63               	movwf	___ftge@ff2& (0+255),b
  3971  00141C  0E00               	movlw	0
  3972  00141E  0100               	movlb	0	; () banked
  3973  001420  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  3974  001422  0100               	movlb	0	; () banked
  3975  001424  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  3976  001426  0E80               	movlw	128
  3977  001428  0100               	movlb	0	; () banked
  3978  00142A  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  3979  00142C  0100               	movlb	0	; () banked
  3980  00142E  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  3981  001430                     l2546:
  3982                           
  3983                           ; BSR set to: 0
  3984  001430  0E00               	movlw	0
  3985  001432  0100               	movlb	0	; () banked
  3986  001434  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  3987  001436  0E00               	movlw	0
  3988  001438  0100               	movlb	0	; () banked
  3989  00143A  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  3990  00143C  0E80               	movlw	128
  3991  00143E  0100               	movlb	0	; () banked
  3992  001440  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  3993                           
  3994                           ; BSR set to: 0
  3995  001442  0E00               	movlw	0
  3996  001444  0100               	movlb	0	; () banked
  3997  001446  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  3998  001448  0E00               	movlw	0
  3999  00144A  0100               	movlb	0	; () banked
  4000  00144C  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4001  00144E  0E80               	movlw	128
  4002  001450  0100               	movlb	0	; () banked
  4003  001452  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4004  001454  0100               	movlb	0	; () banked
  4005  001456  5163               	movf	___ftge@ff2& (0+255),w,b
  4006  001458  0100               	movlb	0	; () banked
  4007  00145A  5D60               	subwf	___ftge@ff1& (0+255),w,b
  4008  00145C  0100               	movlb	0	; () banked
  4009  00145E  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  4010  001460  0100               	movlb	0	; () banked
  4011  001462  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4012  001464  0100               	movlb	0	; () banked
  4013  001466  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  4014  001468  0100               	movlb	0	; () banked
  4015  00146A  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4016  00146C  B0D8               	btfsc	status,0,c
  4017  00146E  D002               	goto	l2552
  4018                           
  4019                           ; BSR set to: 0
  4020  001470  90D8               	bcf	status,0,c
  4021  001472  0012               	return	
  4022  001474                     l2552:
  4023                           
  4024                           ; BSR set to: 0
  4025  001474  80D8               	bsf	status,0,c
  4026                           
  4027                           ; BSR set to: 0
  4028  001476  0012               	return	
  4029  001478                     __end_of___ftge:
  4030                           	opt stack 0
  4031                           tblptru	equ	0xFF8
  4032                           tblptrh	equ	0xFF7
  4033                           tblptrl	equ	0xFF6
  4034                           tablat	equ	0xFF5
  4035                           intcon	equ	0xFF2
  4036                           intcon2	equ	0xFF1
  4037                           intcon3	equ	0xFF0
  4038                           postinc0	equ	0xFEE
  4039                           wreg	equ	0xFE8
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _freno *****************
  4043 ;; Defined at:
  4044 ;;		line 461 in file "newmain.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;		None
  4047 ;; Auto vars:     Size  Location     Type
  4048 ;;		None
  4049 ;; Return value:  Size  Location     Type
  4050 ;;                  1    wreg      void 
  4051 ;; Registers used:
  4052 ;;		None
  4053 ;; Tracked objects:
  4054 ;;		On entry : 0/0
  4055 ;;		On exit  : 0/0
  4056 ;;		Unchanged: 0/0
  4057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4058 ;;      Params:         0       0       0       0       0       0       0       0       0
  4059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4062 ;;Total ram usage:        0 bytes
  4063 ;; Hardware stack levels used:    1
  4064 ;; Hardware stack levels required when called:    3
  4065 ;; This function calls:
  4066 ;;		Nothing
  4067 ;; This function is called by:
  4068 ;;		_automatico
  4069 ;;		_manual
  4070 ;; This function uses a non-reentrant model
  4071 ;;
  4072                           
  4073                           	psect	text19
  4074  00180C                     __ptext19:
  4075                           	opt stack 0
  4076  00180C                     _freno:
  4077                           	opt stack 26
  4078                           
  4079                           ;newmain.c: 462: LATD0 = 0;
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;incstack = 0
  4083  00180C  908C               	bcf	3980,0,c	;volatile
  4084                           
  4085                           ;newmain.c: 463: LATD1 = 0;
  4086  00180E  928C               	bcf	3980,1,c	;volatile
  4087                           
  4088                           ;newmain.c: 464: LATD2 = 0;
  4089  001810  948C               	bcf	3980,2,c	;volatile
  4090                           
  4091                           ;newmain.c: 465: LATD3 = 0;
  4092  001812  968C               	bcf	3980,3,c	;volatile
  4093  001814  0012               	return		;funcret
  4094  001816                     __end_of_freno:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           intcon	equ	0xFF2
  4101                           intcon2	equ	0xFF1
  4102                           intcon3	equ	0xFF0
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           status	equ	0xFD8
  4106                           
  4107 ;; *************** function _adelante *****************
  4108 ;; Defined at:
  4109 ;;		line 427 in file "newmain.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, status,2, status,0, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4123 ;;      Params:         0       0       0       0       0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4125 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4126 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4127 ;;Total ram usage:        2 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    6
  4130 ;; This function calls:
  4131 ;;		_pwm
  4132 ;; This function is called by:
  4133 ;;		_automatico
  4134 ;;		_manual
  4135 ;; This function uses a non-reentrant model
  4136 ;;
  4137                           
  4138                           	psect	text20
  4139  0017C6                     __ptext20:
  4140                           	opt stack 0
  4141  0017C6                     _adelante:
  4142                           	opt stack 23
  4143                           
  4144                           ;newmain.c: 428: _delay((unsigned long)((100)*(8000000/4000.0)));
  4145                           
  4146                           ;incstack = 0
  4147  0017C6  0E02               	movlw	2
  4148  0017C8  0100               	movlb	0	; () banked
  4149  0017CA  6F7B               	movwf	(??_adelante+1)& (0+255),b
  4150  0017CC  0E04               	movlw	4
  4151  0017CE  0100               	movlb	0	; () banked
  4152  0017D0  6F7A               	movwf	??_adelante& (0+255),b
  4153  0017D2  0EBA               	movlw	186
  4154  0017D4                     u3107:
  4155  0017D4  2EE8               	decfsz	wreg,f,c
  4156  0017D6  D7FE               	bra	u3107
  4157  0017D8  2F7A               	decfsz	??_adelante& (0+255),f,b
  4158  0017DA  D7FC               	bra	u3107
  4159  0017DC  2F7B               	decfsz	(??_adelante+1)& (0+255),f,b
  4160  0017DE  D7FA               	bra	u3107
  4161  0017E0  F000               	nop	
  4162                           
  4163                           ;newmain.c: 429: pwm();
  4164  0017E2  EC5E  F009         	call	_pwm	;wreg free
  4165                           
  4166                           ;newmain.c: 430: LATD0 = 1;
  4167  0017E6  808C               	bsf	3980,0,c	;volatile
  4168                           
  4169                           ;newmain.c: 431: LATD1 = 0;
  4170  0017E8  928C               	bcf	3980,1,c	;volatile
  4171                           
  4172                           ;newmain.c: 432: LATD2 = 1;
  4173  0017EA  848C               	bsf	3980,2,c	;volatile
  4174                           
  4175                           ;newmain.c: 433: LATD3 = 0;
  4176  0017EC  968C               	bcf	3980,3,c	;volatile
  4177  0017EE  0012               	return		;funcret
  4178  0017F0                     __end_of_adelante:
  4179                           	opt stack 0
  4180                           tblptru	equ	0xFF8
  4181                           tblptrh	equ	0xFF7
  4182                           tblptrl	equ	0xFF6
  4183                           tablat	equ	0xFF5
  4184                           intcon	equ	0xFF2
  4185                           intcon2	equ	0xFF1
  4186                           intcon3	equ	0xFF0
  4187                           postinc0	equ	0xFEE
  4188                           wreg	equ	0xFE8
  4189                           status	equ	0xFD8
  4190                           
  4191 ;; *************** function _pwm *****************
  4192 ;; Defined at:
  4193 ;;		line 350 in file "newmain.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		wreg, status,2, status,0, cstack
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    5
  4214 ;; This function calls:
  4215 ;;		___ftmul
  4216 ;;		___fttol
  4217 ;; This function is called by:
  4218 ;;		_adelante
  4219 ;;		_atras
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           	psect	text21
  4224  0012BC                     __ptext21:
  4225                           	opt stack 0
  4226  0012BC                     _pwm:
  4227                           	opt stack 23
  4228                           
  4229                           ;newmain.c: 351: if (y == 1) {
  4230                           
  4231                           ;incstack = 0
  4232  0012BC  043E               	decf	_y,w,c
  4233  0012BE  103F               	iorwf	_y+1,w,c
  4234  0012C0  A4D8               	btfss	status,2,c
  4235  0012C2  D00E               	goto	l2606
  4236                           
  4237                           ;newmain.c: 352: duty_cicle1 = 511.2;
  4238  0012C4  0E9A               	movlw	154
  4239  0012C6  6E3B               	movwf	_duty_cicle1,c
  4240  0012C8  0EFF               	movlw	255
  4241  0012CA  6E3C               	movwf	_duty_cicle1+1,c
  4242  0012CC  0E43               	movlw	67
  4243  0012CE  6E3D               	movwf	_duty_cicle1+2,c
  4244                           
  4245                           ;newmain.c: 353: y = 2;
  4246  0012D0  0E00               	movlw	0
  4247  0012D2  6E3F               	movwf	_y+1,c
  4248  0012D4  0E02               	movlw	2
  4249  0012D6  6E3E               	movwf	_y,c
  4250                           
  4251                           ;newmain.c: 354: y = 3;
  4252  0012D8  0E00               	movlw	0
  4253  0012DA  6E3F               	movwf	_y+1,c
  4254  0012DC  0E03               	movlw	3
  4255  0012DE  6E3E               	movwf	_y,c
  4256  0012E0                     l2606:
  4257                           
  4258                           ;newmain.c: 355: }
  4259                           ;newmain.c: 356: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  4260  0012E0  C03B  F06B         	movff	_duty_cicle1,___ftmul@f1
  4261  0012E4  C03C  F06C         	movff	_duty_cicle1+1,___ftmul@f1+1
  4262  0012E8  C03D  F06D         	movff	_duty_cicle1+2,___ftmul@f1+2
  4263  0012EC  0E3F               	movlw	63
  4264  0012EE  0100               	movlb	0	; () banked
  4265  0012F0  6F6E               	movwf	___ftmul@f2& (0+255),b
  4266  0012F2  0EFA               	movlw	250
  4267  0012F4  0100               	movlb	0	; () banked
  4268  0012F6  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  4269  0012F8  0E3E               	movlw	62
  4270  0012FA  0100               	movlb	0	; () banked
  4271  0012FC  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  4272  0012FE  ECE3  F004         	call	___ftmul	;wreg free
  4273  001302  C06B  F02D         	movff	?___ftmul,_conversion1
  4274  001306  C06C  F02E         	movff	?___ftmul+1,_conversion1+1
  4275  00130A  C06D  F02F         	movff	?___ftmul+2,_conversion1+2
  4276                           
  4277                           ;newmain.c: 357: CCPR1L = (int) conversion1 >> 2;
  4278  00130E  C02D  F060         	movff	_conversion1,___fttol@f1
  4279  001312  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4280  001316  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4281  00131A  EC36  F008         	call	___fttol	;wreg free
  4282  00131E  0100               	movlb	0	; () banked
  4283  001320  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4284  001322  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4285  001324  3360               	rrcf	?___fttol& (0+255),f,b
  4286  001326  0100               	movlb	0	; () banked
  4287  001328  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4288  00132A  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4289  00132C  3360               	rrcf	?___fttol& (0+255),f,b
  4290  00132E  0100               	movlb	0	; () banked
  4291  001330  5160               	movf	?___fttol& (0+255),w,b
  4292  001332  6EBE               	movwf	4030,c	;volatile
  4293                           
  4294                           ; BSR set to: 0
  4295                           ;newmain.c: 358: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  4296  001334  C02D  F060         	movff	_conversion1,___fttol@f1
  4297  001338  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4298  00133C  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4299  001340  EC36  F008         	call	___fttol	;wreg free
  4300  001344  0E03               	movlw	3
  4301  001346  0100               	movlb	0	; () banked
  4302  001348  1760               	andwf	?___fttol& (0+255),f,b
  4303  00134A  0100               	movlb	0	; () banked
  4304  00134C  3B60               	swapf	?___fttol& (0+255),f,b
  4305  00134E  0EF0               	movlw	240
  4306  001350  0100               	movlb	0	; () banked
  4307  001352  1760               	andwf	?___fttol& (0+255),f,b
  4308  001354  50BD               	movf	4029,w,c	;volatile
  4309  001356  0B0F               	andlw	15
  4310  001358  0100               	movlb	0	; () banked
  4311  00135A  1160               	iorwf	?___fttol& (0+255),w,b
  4312  00135C  6EBD               	movwf	4029,c	;volatile
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;newmain.c: 359: CCPR2L = (int) conversion1 >> 2;
  4316  00135E  C02D  F060         	movff	_conversion1,___fttol@f1
  4317  001362  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4318  001366  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4319  00136A  EC36  F008         	call	___fttol	;wreg free
  4320  00136E  0100               	movlb	0	; () banked
  4321  001370  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4322  001372  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4323  001374  3360               	rrcf	?___fttol& (0+255),f,b
  4324  001376  0100               	movlb	0	; () banked
  4325  001378  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4326  00137A  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4327  00137C  3360               	rrcf	?___fttol& (0+255),f,b
  4328  00137E  0100               	movlb	0	; () banked
  4329  001380  5160               	movf	?___fttol& (0+255),w,b
  4330  001382  6EBB               	movwf	4027,c	;volatile
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;newmain.c: 360: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  4334  001384  C02D  F060         	movff	_conversion1,___fttol@f1
  4335  001388  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4336  00138C  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4337  001390  EC36  F008         	call	___fttol	;wreg free
  4338  001394  0E03               	movlw	3
  4339  001396  0100               	movlb	0	; () banked
  4340  001398  1760               	andwf	?___fttol& (0+255),f,b
  4341  00139A  0100               	movlb	0	; () banked
  4342  00139C  3B60               	swapf	?___fttol& (0+255),f,b
  4343  00139E  0EF0               	movlw	240
  4344  0013A0  0100               	movlb	0	; () banked
  4345  0013A2  1760               	andwf	?___fttol& (0+255),f,b
  4346  0013A4  50BD               	movf	4029,w,c	;volatile
  4347  0013A6  0B0F               	andlw	15
  4348  0013A8  0100               	movlb	0	; () banked
  4349  0013AA  1160               	iorwf	?___fttol& (0+255),w,b
  4350  0013AC  6EBA               	movwf	4026,c	;volatile
  4351                           
  4352                           ; BSR set to: 0
  4353  0013AE  0012               	return		;funcret
  4354  0013B0                     __end_of_pwm:
  4355                           	opt stack 0
  4356                           tblptru	equ	0xFF8
  4357                           tblptrh	equ	0xFF7
  4358                           tblptrl	equ	0xFF6
  4359                           tablat	equ	0xFF5
  4360                           intcon	equ	0xFF2
  4361                           intcon2	equ	0xFF1
  4362                           intcon3	equ	0xFF0
  4363                           postinc0	equ	0xFEE
  4364                           wreg	equ	0xFE8
  4365                           status	equ	0xFD8
  4366                           
  4367 ;; *************** function ___fttol *****************
  4368 ;; Defined at:
  4369 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4370 ;; Parameters:    Size  Location     Type
  4371 ;;  f1              3    0[BANK0 ] float 
  4372 ;; Auto vars:     Size  Location     Type
  4373 ;;  lval            4   10[BANK0 ] unsigned long 
  4374 ;;  exp1            1   14[BANK0 ] unsigned char 
  4375 ;;  sign1           1    9[BANK0 ] unsigned char 
  4376 ;; Return value:  Size  Location     Type
  4377 ;;                  4    0[BANK0 ] long 
  4378 ;; Registers used:
  4379 ;;		wreg, status,2, status,0
  4380 ;; Tracked objects:
  4381 ;;		On entry : 0/0
  4382 ;;		On exit  : 0/0
  4383 ;;		Unchanged: 0/0
  4384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4385 ;;      Params:         0       4       0       0       0       0       0       0       0
  4386 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4387 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4388 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4389 ;;Total ram usage:       15 bytes
  4390 ;; Hardware stack levels used:    1
  4391 ;; Hardware stack levels required when called:    3
  4392 ;; This function calls:
  4393 ;;		Nothing
  4394 ;; This function is called by:
  4395 ;;		_pwm
  4396 ;;		_pwmI
  4397 ;;		_pwmD
  4398 ;; This function uses a non-reentrant model
  4399 ;;
  4400                           
  4401                           	psect	text22
  4402  00106C                     __ptext22:
  4403                           	opt stack 0
  4404  00106C                     ___fttol:
  4405                           	opt stack 24
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;incstack = 0
  4409  00106C  C062  F064         	movff	___fttol@f1+2,??___fttol
  4410  001070  0100               	movlb	0	; () banked
  4411  001072  6B65               	clrf	(??___fttol+1)& (0+255),b
  4412  001074  6B66               	clrf	(??___fttol+2)& (0+255),b
  4413  001076  0100               	movlb	0	; () banked
  4414  001078  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4415  00107A  0100               	movlb	0	; () banked
  4416  00107C  3764               	rlcf	??___fttol& (0+255),f,b
  4417  00107E  E301               	bnc	u2221
  4418  001080  8165               	bsf	(??___fttol+1)& (0+255),0,b
  4419  001082                     u2221:
  4420  001082  0100               	movlb	0	; () banked
  4421  001084  5164               	movf	??___fttol& (0+255),w,b
  4422  001086  0100               	movlb	0	; () banked
  4423  001088  6F6E               	movwf	___fttol@exp1& (0+255),b
  4424  00108A  0100               	movlb	0	; () banked
  4425  00108C  516E               	movf	___fttol@exp1& (0+255),w,b
  4426  00108E  A4D8               	btfss	status,2,c
  4427  001090  D00A               	goto	l2562
  4428                           
  4429                           ; BSR set to: 0
  4430  001092  0E00               	movlw	0
  4431  001094  0100               	movlb	0	; () banked
  4432  001096  6F60               	movwf	?___fttol& (0+255),b
  4433  001098  0E00               	movlw	0
  4434  00109A  6F61               	movwf	(?___fttol+1)& (0+255),b
  4435  00109C  0E00               	movlw	0
  4436  00109E  6F62               	movwf	(?___fttol+2)& (0+255),b
  4437  0010A0  0E00               	movlw	0
  4438  0010A2  6F63               	movwf	(?___fttol+3)& (0+255),b
  4439                           
  4440                           ; BSR set to: 0
  4441  0010A4  0012               	return	
  4442  0010A6                     l2562:
  4443                           
  4444                           ; BSR set to: 0
  4445  0010A6  0E17               	movlw	23
  4446  0010A8  0100               	movlb	0	; () banked
  4447  0010AA  6F64               	movwf	??___fttol& (0+255),b
  4448  0010AC  C060  F065         	movff	___fttol@f1,??___fttol+1
  4449  0010B0  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  4450  0010B4  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  4451  0010B8  0100               	movlb	0	; () banked
  4452  0010BA  2964               	incf	??___fttol& (0+255),w,b
  4453  0010BC  0100               	movlb	0	; () banked
  4454  0010BE  6F68               	movwf	(??___fttol+4)& (0+255),b
  4455  0010C0  D005               	goto	u2240
  4456  0010C2                     u2245:
  4457  0010C2  0100               	movlb	0	; () banked
  4458  0010C4  90D8               	bcf	status,0,c
  4459  0010C6  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  4460  0010C8  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  4461  0010CA  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  4462  0010CC                     u2240:
  4463  0010CC  0100               	movlb	0	; () banked
  4464  0010CE  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  4465  0010D0  D7F8               	goto	u2245
  4466  0010D2  0100               	movlb	0	; () banked
  4467  0010D4  5165               	movf	(??___fttol+1)& (0+255),w,b
  4468  0010D6  0100               	movlb	0	; () banked
  4469  0010D8  6F69               	movwf	___fttol@sign1& (0+255),b
  4470                           
  4471                           ; BSR set to: 0
  4472  0010DA  0100               	movlb	0	; () banked
  4473  0010DC  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  4474                           
  4475                           ; BSR set to: 0
  4476  0010DE  0EFF               	movlw	255
  4477  0010E0  0100               	movlb	0	; () banked
  4478  0010E2  1760               	andwf	___fttol@f1& (0+255),f,b
  4479  0010E4  0EFF               	movlw	255
  4480  0010E6  0100               	movlb	0	; () banked
  4481  0010E8  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  4482  0010EA  0E00               	movlw	0
  4483  0010EC  0100               	movlb	0	; () banked
  4484  0010EE  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  4485                           
  4486                           ; BSR set to: 0
  4487  0010F0  0100               	movlb	0	; () banked
  4488  0010F2  5160               	movf	___fttol@f1& (0+255),w,b
  4489  0010F4  0100               	movlb	0	; () banked
  4490  0010F6  6F6A               	movwf	___fttol@lval& (0+255),b
  4491  0010F8  0100               	movlb	0	; () banked
  4492  0010FA  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  4493  0010FC  0100               	movlb	0	; () banked
  4494  0010FE  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  4495  001100  0100               	movlb	0	; () banked
  4496  001102  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  4497  001104  0100               	movlb	0	; () banked
  4498  001106  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  4499  001108  0100               	movlb	0	; () banked
  4500  00110A  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  4501                           
  4502                           ; BSR set to: 0
  4503  00110C  0E8E               	movlw	142
  4504  00110E  0100               	movlb	0	; () banked
  4505  001110  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  4506                           
  4507                           ; BSR set to: 0
  4508  001112  0100               	movlb	0	; () banked
  4509  001114  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  4510  001116  D01A               	goto	l2584
  4511                           
  4512                           ; BSR set to: 0
  4513  001118  0100               	movlb	0	; () banked
  4514  00111A  516E               	movf	___fttol@exp1& (0+255),w,b
  4515  00111C  0A80               	xorlw	128
  4516  00111E  0F8F               	addlw	143
  4517  001120  B0D8               	btfsc	status,0,c
  4518  001122  D00A               	goto	l2580
  4519                           
  4520                           ; BSR set to: 0
  4521  001124  0E00               	movlw	0
  4522  001126  0100               	movlb	0	; () banked
  4523  001128  6F60               	movwf	?___fttol& (0+255),b
  4524  00112A  0E00               	movlw	0
  4525  00112C  6F61               	movwf	(?___fttol+1)& (0+255),b
  4526  00112E  0E00               	movlw	0
  4527  001130  6F62               	movwf	(?___fttol+2)& (0+255),b
  4528  001132  0E00               	movlw	0
  4529  001134  6F63               	movwf	(?___fttol+3)& (0+255),b
  4530                           
  4531                           ; BSR set to: 0
  4532  001136  0012               	return	
  4533  001138                     l2580:
  4534                           
  4535                           ; BSR set to: 0
  4536  001138  0100               	movlb	0	; () banked
  4537  00113A  90D8               	bcf	status,0,c
  4538  00113C  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4539  00113E  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4540  001140  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4541  001142  336A               	rrcf	___fttol@lval& (0+255),f,b
  4542                           
  4543                           ; BSR set to: 0
  4544  001144  0100               	movlb	0	; () banked
  4545  001146  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  4546  001148  D7F7               	goto	l2580
  4547                           
  4548                           ; BSR set to: 0
  4549  00114A  D01B               	goto	l2594
  4550  00114C                     l2584:
  4551                           
  4552                           ; BSR set to: 0
  4553  00114C  0E17               	movlw	23
  4554  00114E  0100               	movlb	0	; () banked
  4555  001150  656E               	cpfsgt	___fttol@exp1& (0+255),b
  4556  001152  D012               	goto	l2592
  4557                           
  4558                           ; BSR set to: 0
  4559  001154  0E00               	movlw	0
  4560  001156  0100               	movlb	0	; () banked
  4561  001158  6F60               	movwf	?___fttol& (0+255),b
  4562  00115A  0E00               	movlw	0
  4563  00115C  6F61               	movwf	(?___fttol+1)& (0+255),b
  4564  00115E  0E00               	movlw	0
  4565  001160  6F62               	movwf	(?___fttol+2)& (0+255),b
  4566  001162  0E00               	movlw	0
  4567  001164  6F63               	movwf	(?___fttol+3)& (0+255),b
  4568                           
  4569                           ; BSR set to: 0
  4570  001166  0012               	return	
  4571  001168                     l2590:
  4572                           
  4573                           ; BSR set to: 0
  4574  001168  0100               	movlb	0	; () banked
  4575  00116A  90D8               	bcf	status,0,c
  4576  00116C  376A               	rlcf	___fttol@lval& (0+255),f,b
  4577  00116E  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4578  001170  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4579  001172  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4580  001174  0100               	movlb	0	; () banked
  4581  001176  076E               	decf	___fttol@exp1& (0+255),f,b
  4582  001178                     l2592:
  4583                           
  4584                           ; BSR set to: 0
  4585  001178  0100               	movlb	0	; () banked
  4586  00117A  516E               	movf	___fttol@exp1& (0+255),w,b
  4587  00117C  0100               	movlb	0	; () banked
  4588  00117E  A4D8               	btfss	status,2,c
  4589  001180  D7F3               	goto	l2590
  4590  001182                     l2594:
  4591                           
  4592                           ; BSR set to: 0
  4593  001182  0100               	movlb	0	; () banked
  4594  001184  5169               	movf	___fttol@sign1& (0+255),w,b
  4595  001186  0100               	movlb	0	; () banked
  4596  001188  B4D8               	btfsc	status,2,c
  4597  00118A  D009               	goto	l2598
  4598                           
  4599                           ; BSR set to: 0
  4600  00118C  0100               	movlb	0	; () banked
  4601  00118E  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  4602  001190  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  4603  001192  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  4604  001194  6D6A               	negf	___fttol@lval& (0+255),b
  4605  001196  0E00               	movlw	0
  4606  001198  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4607  00119A  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4608  00119C  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4609  00119E                     l2598:
  4610                           
  4611                           ; BSR set to: 0
  4612  00119E  C06A  F060         	movff	___fttol@lval,?___fttol
  4613  0011A2  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  4614  0011A6  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  4615  0011AA  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  4616  0011AE  0012               	return	
  4617  0011B0                     __end_of___fttol:
  4618                           	opt stack 0
  4619                           tblptru	equ	0xFF8
  4620                           tblptrh	equ	0xFF7
  4621                           tblptrl	equ	0xFF6
  4622                           tablat	equ	0xFF5
  4623                           intcon	equ	0xFF2
  4624                           intcon2	equ	0xFF1
  4625                           intcon3	equ	0xFF0
  4626                           postinc0	equ	0xFEE
  4627                           wreg	equ	0xFE8
  4628                           status	equ	0xFD8
  4629                           
  4630 ;; *************** function ___ftmul *****************
  4631 ;; Defined at:
  4632 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  f1              3   11[BANK0 ] float 
  4635 ;;  f2              3   14[BANK0 ] float 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  4638 ;;  sign            1   25[BANK0 ] unsigned char 
  4639 ;;  cntr            1   24[BANK0 ] unsigned char 
  4640 ;;  exp             1   20[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  3   11[BANK0 ] float 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, cstack
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4650 ;;      Params:         0       6       0       0       0       0       0       0       0
  4651 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4652 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4653 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4654 ;;Total ram usage:       15 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    4
  4657 ;; This function calls:
  4658 ;;		___ftpack
  4659 ;; This function is called by:
  4660 ;;		_start
  4661 ;;		_start1
  4662 ;;		_start2
  4663 ;;		_pwm
  4664 ;;		_pwmI
  4665 ;;		_pwmD
  4666 ;; This function uses a non-reentrant model
  4667 ;;
  4668                           
  4669                           	psect	text23
  4670  0009C6                     __ptext23:
  4671                           	opt stack 0
  4672  0009C6                     ___ftmul:
  4673                           	opt stack 25
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;incstack = 0
  4677  0009C6  C06D  F071         	movff	___ftmul@f1+2,??___ftmul
  4678  0009CA  0100               	movlb	0	; () banked
  4679  0009CC  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4680  0009CE  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4681  0009D0  0100               	movlb	0	; () banked
  4682  0009D2  356C               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4683  0009D4  0100               	movlb	0	; () banked
  4684  0009D6  3771               	rlcf	??___ftmul& (0+255),f,b
  4685  0009D8  E301               	bnc	u2131
  4686  0009DA  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4687  0009DC                     u2131:
  4688  0009DC  0100               	movlb	0	; () banked
  4689  0009DE  5171               	movf	??___ftmul& (0+255),w,b
  4690  0009E0  0100               	movlb	0	; () banked
  4691  0009E2  6F74               	movwf	___ftmul@exp& (0+255),b
  4692  0009E4  0100               	movlb	0	; () banked
  4693  0009E6  5174               	movf	___ftmul@exp& (0+255),w,b
  4694  0009E8  A4D8               	btfss	status,2,c
  4695  0009EA  D00A               	goto	l2496
  4696                           
  4697                           ; BSR set to: 0
  4698  0009EC  0E00               	movlw	0
  4699  0009EE  0100               	movlb	0	; () banked
  4700  0009F0  6F6B               	movwf	?___ftmul& (0+255),b
  4701  0009F2  0E00               	movlw	0
  4702  0009F4  0100               	movlb	0	; () banked
  4703  0009F6  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4704  0009F8  0E00               	movlw	0
  4705  0009FA  0100               	movlb	0	; () banked
  4706  0009FC  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4707                           
  4708                           ; BSR set to: 0
  4709  0009FE  0012               	return	
  4710  000A00                     l2496:
  4711                           
  4712                           ; BSR set to: 0
  4713  000A00  C070  F071         	movff	___ftmul@f2+2,??___ftmul
  4714  000A04  0100               	movlb	0	; () banked
  4715  000A06  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4716  000A08  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4717  000A0A  0100               	movlb	0	; () banked
  4718  000A0C  356F               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4719  000A0E  0100               	movlb	0	; () banked
  4720  000A10  3771               	rlcf	??___ftmul& (0+255),f,b
  4721  000A12  E301               	bnc	u2151
  4722  000A14  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4723  000A16                     u2151:
  4724  000A16  0100               	movlb	0	; () banked
  4725  000A18  5171               	movf	??___ftmul& (0+255),w,b
  4726  000A1A  0100               	movlb	0	; () banked
  4727  000A1C  6F79               	movwf	___ftmul@sign& (0+255),b
  4728  000A1E  0100               	movlb	0	; () banked
  4729  000A20  5179               	movf	___ftmul@sign& (0+255),w,b
  4730  000A22  A4D8               	btfss	status,2,c
  4731  000A24  D00A               	goto	l2502
  4732                           
  4733                           ; BSR set to: 0
  4734  000A26  0E00               	movlw	0
  4735  000A28  0100               	movlb	0	; () banked
  4736  000A2A  6F6B               	movwf	?___ftmul& (0+255),b
  4737  000A2C  0E00               	movlw	0
  4738  000A2E  0100               	movlb	0	; () banked
  4739  000A30  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4740  000A32  0E00               	movlw	0
  4741  000A34  0100               	movlb	0	; () banked
  4742  000A36  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4743                           
  4744                           ; BSR set to: 0
  4745  000A38  0012               	return	
  4746  000A3A                     l2502:
  4747                           
  4748                           ; BSR set to: 0
  4749  000A3A  0100               	movlb	0	; () banked
  4750  000A3C  5179               	movf	___ftmul@sign& (0+255),w,b
  4751  000A3E  0F7B               	addlw	123
  4752  000A40  0100               	movlb	0	; () banked
  4753  000A42  2774               	addwf	___ftmul@exp& (0+255),f,b
  4754                           
  4755                           ; BSR set to: 0
  4756  000A44  C06D  F079         	movff	___ftmul@f1+2,___ftmul@sign
  4757  000A48  0100               	movlb	0	; () banked
  4758  000A4A  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4759  000A4C  0100               	movlb	0	; () banked
  4760  000A4E  1B79               	xorwf	___ftmul@sign& (0+255),f,b
  4761  000A50  0E80               	movlw	128
  4762  000A52  0100               	movlb	0	; () banked
  4763  000A54  1779               	andwf	___ftmul@sign& (0+255),f,b
  4764                           
  4765                           ; BSR set to: 0
  4766  000A56  0100               	movlb	0	; () banked
  4767  000A58  8F6C               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4768                           
  4769                           ; BSR set to: 0
  4770  000A5A  0100               	movlb	0	; () banked
  4771  000A5C  8F6F               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4772                           
  4773                           ; BSR set to: 0
  4774  000A5E  0EFF               	movlw	255
  4775  000A60  0100               	movlb	0	; () banked
  4776  000A62  176E               	andwf	___ftmul@f2& (0+255),f,b
  4777  000A64  0EFF               	movlw	255
  4778  000A66  0100               	movlb	0	; () banked
  4779  000A68  176F               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4780  000A6A  0E00               	movlw	0
  4781  000A6C  0100               	movlb	0	; () banked
  4782  000A6E  1770               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4783                           
  4784                           ; BSR set to: 0
  4785  000A70  0E00               	movlw	0
  4786  000A72  0100               	movlb	0	; () banked
  4787  000A74  6F75               	movwf	___ftmul@f3_as_product& (0+255),b
  4788  000A76  0E00               	movlw	0
  4789  000A78  0100               	movlb	0	; () banked
  4790  000A7A  6F76               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4791  000A7C  0E00               	movlw	0
  4792  000A7E  0100               	movlb	0	; () banked
  4793  000A80  6F77               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4794                           
  4795                           ; BSR set to: 0
  4796  000A82  0E07               	movlw	7
  4797  000A84  0100               	movlb	0	; () banked
  4798  000A86  6F78               	movwf	___ftmul@cntr& (0+255),b
  4799  000A88                     l2516:
  4800                           
  4801                           ; BSR set to: 0
  4802  000A88  0100               	movlb	0	; () banked
  4803  000A8A  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4804  000A8C  D00C               	goto	l2520
  4805                           
  4806                           ; BSR set to: 0
  4807  000A8E  0100               	movlb	0	; () banked
  4808  000A90  516E               	movf	___ftmul@f2& (0+255),w,b
  4809  000A92  0100               	movlb	0	; () banked
  4810  000A94  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4811  000A96  0100               	movlb	0	; () banked
  4812  000A98  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4813  000A9A  0100               	movlb	0	; () banked
  4814  000A9C  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4815  000A9E  0100               	movlb	0	; () banked
  4816  000AA0  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4817  000AA2  0100               	movlb	0	; () banked
  4818  000AA4  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4819  000AA6                     l2520:
  4820                           
  4821                           ; BSR set to: 0
  4822  000AA6  0100               	movlb	0	; () banked
  4823  000AA8  90D8               	bcf	status,0,c
  4824  000AAA  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4825  000AAC  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4826  000AAE  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4827  000AB0  0100               	movlb	0	; () banked
  4828  000AB2  90D8               	bcf	status,0,c
  4829  000AB4  376E               	rlcf	___ftmul@f2& (0+255),f,b
  4830  000AB6  376F               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4831  000AB8  3770               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4832                           
  4833                           ; BSR set to: 0
  4834  000ABA  0100               	movlb	0	; () banked
  4835  000ABC  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4836  000ABE  D7E4               	goto	l2516
  4837                           
  4838                           ; BSR set to: 0
  4839                           
  4840                           ; BSR set to: 0
  4841  000AC0  0E09               	movlw	9
  4842  000AC2  0100               	movlb	0	; () banked
  4843  000AC4  6F78               	movwf	___ftmul@cntr& (0+255),b
  4844  000AC6                     l2526:
  4845                           
  4846                           ; BSR set to: 0
  4847  000AC6  0100               	movlb	0	; () banked
  4848  000AC8  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4849  000ACA  D00C               	goto	l2530
  4850                           
  4851                           ; BSR set to: 0
  4852  000ACC  0100               	movlb	0	; () banked
  4853  000ACE  516E               	movf	___ftmul@f2& (0+255),w,b
  4854  000AD0  0100               	movlb	0	; () banked
  4855  000AD2  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4856  000AD4  0100               	movlb	0	; () banked
  4857  000AD6  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4858  000AD8  0100               	movlb	0	; () banked
  4859  000ADA  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4860  000ADC  0100               	movlb	0	; () banked
  4861  000ADE  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4862  000AE0  0100               	movlb	0	; () banked
  4863  000AE2  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4864  000AE4                     l2530:
  4865                           
  4866                           ; BSR set to: 0
  4867  000AE4  0100               	movlb	0	; () banked
  4868  000AE6  90D8               	bcf	status,0,c
  4869  000AE8  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4870  000AEA  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4871  000AEC  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4872  000AEE  0100               	movlb	0	; () banked
  4873  000AF0  90D8               	bcf	status,0,c
  4874  000AF2  3377               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4875  000AF4  3376               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4876  000AF6  3375               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4877                           
  4878                           ; BSR set to: 0
  4879  000AF8  0100               	movlb	0	; () banked
  4880  000AFA  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4881  000AFC  D7E4               	goto	l2526
  4882                           
  4883                           ; BSR set to: 0
  4884                           
  4885                           ; BSR set to: 0
  4886  000AFE  C075  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  4887  000B02  C076  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4888  000B06  C077  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4889  000B0A  C074  F063         	movff	___ftmul@exp,___ftpack@exp
  4890  000B0E  C079  F064         	movff	___ftmul@sign,___ftpack@sign
  4891  000B12  ECD8  F008         	call	___ftpack	;wreg free
  4892  000B16  C060  F06B         	movff	?___ftpack,?___ftmul
  4893  000B1A  C061  F06C         	movff	?___ftpack+1,?___ftmul+1
  4894  000B1E  C062  F06D         	movff	?___ftpack+2,?___ftmul+2
  4895  000B22  0012               	return	
  4896  000B24                     __end_of___ftmul:
  4897                           	opt stack 0
  4898                           tblptru	equ	0xFF8
  4899                           tblptrh	equ	0xFF7
  4900                           tblptrl	equ	0xFF6
  4901                           tablat	equ	0xFF5
  4902                           intcon	equ	0xFF2
  4903                           intcon2	equ	0xFF1
  4904                           intcon3	equ	0xFF0
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           status	equ	0xFD8
  4908                           
  4909 ;; *************** function ___ftpack *****************
  4910 ;; Defined at:
  4911 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  4912 ;; Parameters:    Size  Location     Type
  4913 ;;  arg             3    0[BANK0 ] unsigned um
  4914 ;;  exp             1    3[BANK0 ] unsigned char 
  4915 ;;  sign            1    4[BANK0 ] unsigned char 
  4916 ;; Auto vars:     Size  Location     Type
  4917 ;;		None
  4918 ;; Return value:  Size  Location     Type
  4919 ;;                  3    0[BANK0 ] float 
  4920 ;; Registers used:
  4921 ;;		wreg, status,2, status,0
  4922 ;; Tracked objects:
  4923 ;;		On entry : 0/0
  4924 ;;		On exit  : 0/0
  4925 ;;		Unchanged: 0/0
  4926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4927 ;;      Params:         0       5       0       0       0       0       0       0       0
  4928 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4929 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4930 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4931 ;;Total ram usage:        8 bytes
  4932 ;; Hardware stack levels used:    1
  4933 ;; Hardware stack levels required when called:    3
  4934 ;; This function calls:
  4935 ;;		Nothing
  4936 ;; This function is called by:
  4937 ;;		___awtoft
  4938 ;;		___ftadd
  4939 ;;		___ftmul
  4940 ;; This function uses a non-reentrant model
  4941 ;;
  4942                           
  4943                           	psect	text24
  4944  0011B0                     __ptext24:
  4945                           	opt stack 0
  4946  0011B0                     ___ftpack:
  4947                           	opt stack 25
  4948                           
  4949                           ;incstack = 0
  4950  0011B0  0100               	movlb	0	; () banked
  4951  0011B2  5163               	movf	___ftpack@exp& (0+255),w,b
  4952  0011B4  0100               	movlb	0	; () banked
  4953  0011B6  B4D8               	btfsc	status,2,c
  4954  0011B8  D008               	goto	l2458
  4955                           
  4956                           ; BSR set to: 0
  4957  0011BA  0100               	movlb	0	; () banked
  4958  0011BC  5160               	movf	___ftpack@arg& (0+255),w,b
  4959  0011BE  0100               	movlb	0	; () banked
  4960  0011C0  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  4961  0011C2  0100               	movlb	0	; () banked
  4962  0011C4  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  4963  0011C6  A4D8               	btfss	status,2,c
  4964  0011C8  D011               	goto	l2464
  4965  0011CA                     l2458:
  4966                           
  4967                           ; BSR set to: 0
  4968  0011CA  0E00               	movlw	0
  4969  0011CC  0100               	movlb	0	; () banked
  4970  0011CE  6F60               	movwf	?___ftpack& (0+255),b
  4971  0011D0  0E00               	movlw	0
  4972  0011D2  0100               	movlb	0	; () banked
  4973  0011D4  6F61               	movwf	(?___ftpack+1)& (0+255),b
  4974  0011D6  0E00               	movlw	0
  4975  0011D8  0100               	movlb	0	; () banked
  4976  0011DA  6F62               	movwf	(?___ftpack+2)& (0+255),b
  4977                           
  4978                           ; BSR set to: 0
  4979  0011DC  0012               	return	
  4980  0011DE                     l2462:
  4981                           
  4982                           ; BSR set to: 0
  4983  0011DE  0100               	movlb	0	; () banked
  4984  0011E0  2B63               	incf	___ftpack@exp& (0+255),f,b
  4985  0011E2  0100               	movlb	0	; () banked
  4986  0011E4  90D8               	bcf	status,0,c
  4987  0011E6  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  4988  0011E8  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  4989  0011EA  3360               	rrcf	___ftpack@arg& (0+255),f,b
  4990  0011EC                     l2464:
  4991                           
  4992                           ; BSR set to: 0
  4993  0011EC  0E00               	movlw	0
  4994  0011EE  0100               	movlb	0	; () banked
  4995  0011F0  1560               	andwf	___ftpack@arg& (0+255),w,b
  4996  0011F2  0100               	movlb	0	; () banked
  4997  0011F4  6F65               	movwf	??___ftpack& (0+255),b
  4998  0011F6  0E00               	movlw	0
  4999  0011F8  0100               	movlb	0	; () banked
  5000  0011FA  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5001  0011FC  0100               	movlb	0	; () banked
  5002  0011FE  6F66               	movwf	(??___ftpack+1)& (0+255),b
  5003  001200  0EFE               	movlw	254
  5004  001202  0100               	movlb	0	; () banked
  5005  001204  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5006  001206  0100               	movlb	0	; () banked
  5007  001208  6F67               	movwf	(??___ftpack+2)& (0+255),b
  5008  00120A  0100               	movlb	0	; () banked
  5009  00120C  5165               	movf	??___ftpack& (0+255),w,b
  5010  00120E  0100               	movlb	0	; () banked
  5011  001210  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  5012  001212  0100               	movlb	0	; () banked
  5013  001214  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  5014  001216  B4D8               	btfsc	status,2,c
  5015  001218  D011               	goto	l2470
  5016  00121A  D7E1               	goto	l2462
  5017  00121C                     l2466:
  5018                           
  5019                           ; BSR set to: 0
  5020  00121C  0100               	movlb	0	; () banked
  5021  00121E  2B63               	incf	___ftpack@exp& (0+255),f,b
  5022                           
  5023                           ; BSR set to: 0
  5024  001220  0E01               	movlw	1
  5025  001222  0100               	movlb	0	; () banked
  5026  001224  2760               	addwf	___ftpack@arg& (0+255),f,b
  5027  001226  0E00               	movlw	0
  5028  001228  0100               	movlb	0	; () banked
  5029  00122A  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5030  00122C  0E00               	movlw	0
  5031  00122E  0100               	movlb	0	; () banked
  5032  001230  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5033  001232  0100               	movlb	0	; () banked
  5034  001234  90D8               	bcf	status,0,c
  5035  001236  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5036  001238  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5037  00123A  3360               	rrcf	___ftpack@arg& (0+255),f,b
  5038  00123C                     l2470:
  5039                           
  5040                           ; BSR set to: 0
  5041  00123C  0E00               	movlw	0
  5042  00123E  0100               	movlb	0	; () banked
  5043  001240  1560               	andwf	___ftpack@arg& (0+255),w,b
  5044  001242  0100               	movlb	0	; () banked
  5045  001244  6F65               	movwf	??___ftpack& (0+255),b
  5046  001246  0E00               	movlw	0
  5047  001248  0100               	movlb	0	; () banked
  5048  00124A  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5049  00124C  0100               	movlb	0	; () banked
  5050  00124E  6F66               	movwf	(??___ftpack+1)& (0+255),b
  5051  001250  0EFF               	movlw	255
  5052  001252  0100               	movlb	0	; () banked
  5053  001254  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5054  001256  0100               	movlb	0	; () banked
  5055  001258  6F67               	movwf	(??___ftpack+2)& (0+255),b
  5056  00125A  0100               	movlb	0	; () banked
  5057  00125C  5165               	movf	??___ftpack& (0+255),w,b
  5058  00125E  0100               	movlb	0	; () banked
  5059  001260  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  5060  001262  0100               	movlb	0	; () banked
  5061  001264  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  5062  001266  B4D8               	btfsc	status,2,c
  5063  001268  D008               	goto	l2474
  5064  00126A  D7D8               	goto	l2466
  5065  00126C                     l2472:
  5066                           
  5067                           ; BSR set to: 0
  5068  00126C  0100               	movlb	0	; () banked
  5069  00126E  0763               	decf	___ftpack@exp& (0+255),f,b
  5070  001270  0100               	movlb	0	; () banked
  5071  001272  90D8               	bcf	status,0,c
  5072  001274  3760               	rlcf	___ftpack@arg& (0+255),f,b
  5073  001276  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5074  001278  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5075  00127A                     l2474:
  5076                           
  5077                           ; BSR set to: 0
  5078  00127A  0100               	movlb	0	; () banked
  5079  00127C  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  5080  00127E  D004               	goto	l571
  5081                           
  5082                           ; BSR set to: 0
  5083  001280  0E02               	movlw	2
  5084  001282  0100               	movlb	0	; () banked
  5085  001284  6163               	cpfslt	___ftpack@exp& (0+255),b
  5086  001286  D7F2               	goto	l2472
  5087  001288                     l571:
  5088                           
  5089                           ; BSR set to: 0
  5090  001288  0100               	movlb	0	; () banked
  5091  00128A  B163               	btfsc	___ftpack@exp& (0+255),0,b
  5092  00128C  D002               	goto	l2480
  5093                           
  5094                           ; BSR set to: 0
  5095  00128E  0100               	movlb	0	; () banked
  5096  001290  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5097  001292                     l2480:
  5098                           
  5099                           ; BSR set to: 0
  5100  001292  0100               	movlb	0	; () banked
  5101  001294  90D8               	bcf	status,0,c
  5102  001296  3363               	rrcf	___ftpack@exp& (0+255),f,b
  5103  001298  0100               	movlb	0	; () banked
  5104  00129A  5163               	movf	___ftpack@exp& (0+255),w,b
  5105  00129C  0100               	movlb	0	; () banked
  5106  00129E  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  5107                           
  5108                           ; BSR set to: 0
  5109  0012A0  0100               	movlb	0	; () banked
  5110  0012A2  5164               	movf	___ftpack@sign& (0+255),w,b
  5111  0012A4  0100               	movlb	0	; () banked
  5112  0012A6  B4D8               	btfsc	status,2,c
  5113  0012A8  D002               	goto	l2486
  5114                           
  5115                           ; BSR set to: 0
  5116  0012AA  0100               	movlb	0	; () banked
  5117  0012AC  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5118  0012AE                     l2486:
  5119                           
  5120                           ; BSR set to: 0
  5121  0012AE  C060  F060         	movff	___ftpack@arg,?___ftpack
  5122  0012B2  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  5123  0012B6  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  5124  0012BA  0012               	return	
  5125  0012BC                     __end_of___ftpack:
  5126                           	opt stack 0
  5127                           tblptru	equ	0xFF8
  5128                           tblptrh	equ	0xFF7
  5129                           tblptrl	equ	0xFF6
  5130                           tablat	equ	0xFF5
  5131                           intcon	equ	0xFF2
  5132                           intcon2	equ	0xFF1
  5133                           intcon3	equ	0xFF0
  5134                           postinc0	equ	0xFEE
  5135                           wreg	equ	0xFE8
  5136                           status	equ	0xFD8
  5137                           
  5138 ;; *************** function _sensor *****************
  5139 ;; Defined at:
  5140 ;;		line 215 in file "newmain.c"
  5141 ;; Parameters:    Size  Location     Type
  5142 ;;		None
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;		None
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  1    wreg      void 
  5147 ;; Registers used:
  5148 ;;		cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5154 ;;      Params:         0       0       0       0       0       0       0       0       0
  5155 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5156 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5157 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5158 ;;Total ram usage:       17 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    2
  5161 ;; This function calls:
  5162 ;;		_sensorOFF
  5163 ;; This function is called by:
  5164 ;;		Interrupt level 1
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	intcodelo
  5169  000018                     __pintcodelo:
  5170                           	opt stack 0
  5171  000018                     _sensor:
  5172                           	opt stack 23
  5173                           
  5174                           ; BSR set to: 0
  5175                           ;incstack = 0
  5176  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5177  00001A  CFD8 F00F          	movff	status,??_sensor
  5178  00001E  CFE8 F010          	movff	wreg,??_sensor+1
  5179  000022  CFE0 F011          	movff	bsr,??_sensor+2
  5180  000026  CFFA F012          	movff	pclath,??_sensor+3
  5181  00002A  CFFB F013          	movff	pclatu,??_sensor+4
  5182  00002E  CFE9 F014          	movff	fsr0l,??_sensor+5
  5183  000032  CFEA F015          	movff	fsr0h,??_sensor+6
  5184  000036  CFE1 F016          	movff	fsr1l,??_sensor+7
  5185  00003A  CFE2 F017          	movff	fsr1h,??_sensor+8
  5186  00003E  CFD9 F018          	movff	fsr2l,??_sensor+9
  5187  000042  CFDA F019          	movff	fsr2h,??_sensor+10
  5188  000046  CFF3 F01A          	movff	prodl,??_sensor+11
  5189  00004A  CFF4 F01B          	movff	prodh,??_sensor+12
  5190  00004E  CFF6 F01C          	movff	tblptrl,??_sensor+13
  5191  000052  CFF7 F01D          	movff	tblptrh,??_sensor+14
  5192  000056  CFF8 F01E          	movff	tblptru,??_sensor+15
  5193  00005A  CFF5 F01F          	movff	tablat,??_sensor+16
  5194                           
  5195                           ;newmain.c: 216: if (INT1IF) {
  5196  00005E  A0F0               	btfss	intcon3,0,c	;volatile
  5197  000060  D003               	goto	i1l1692
  5198                           
  5199                           ;newmain.c: 217: sensorOFF();
  5200  000062  EC0B  F00C         	call	_sensorOFF	;wreg free
  5201                           
  5202                           ;newmain.c: 218: INT1IF = 0;
  5203  000066  90F0               	bcf	intcon3,0,c	;volatile
  5204  000068                     i1l1692:
  5205                           
  5206                           ;newmain.c: 219: }
  5207                           ;newmain.c: 220: if (INT2IF) {
  5208  000068  A2F0               	btfss	intcon3,1,c	;volatile
  5209  00006A  D003               	goto	i1l247
  5210                           
  5211                           ;newmain.c: 221: sensorOFF();
  5212  00006C  EC0B  F00C         	call	_sensorOFF	;wreg free
  5213                           
  5214                           ;newmain.c: 222: INT2IF = 0;
  5215  000070  92F0               	bcf	intcon3,1,c	;volatile
  5216  000072                     i1l247:
  5217  000072  C01F  FFF5         	movff	??_sensor+16,tablat
  5218  000076  C01E  FFF8         	movff	??_sensor+15,tblptru
  5219  00007A  C01D  FFF7         	movff	??_sensor+14,tblptrh
  5220  00007E  C01C  FFF6         	movff	??_sensor+13,tblptrl
  5221  000082  C01B  FFF4         	movff	??_sensor+12,prodh
  5222  000086  C01A  FFF3         	movff	??_sensor+11,prodl
  5223  00008A  C019  FFDA         	movff	??_sensor+10,fsr2h
  5224  00008E  C018  FFD9         	movff	??_sensor+9,fsr2l
  5225  000092  C017  FFE2         	movff	??_sensor+8,fsr1h
  5226  000096  C016  FFE1         	movff	??_sensor+7,fsr1l
  5227  00009A  C015  FFEA         	movff	??_sensor+6,fsr0h
  5228  00009E  C014  FFE9         	movff	??_sensor+5,fsr0l
  5229  0000A2  C013  FFFB         	movff	??_sensor+4,pclatu
  5230  0000A6  C012  FFFA         	movff	??_sensor+3,pclath
  5231  0000AA  C011  FFE0         	movff	??_sensor+2,bsr
  5232  0000AE  C010  FFE8         	movff	??_sensor+1,wreg
  5233  0000B2  C00F  FFD8         	movff	??_sensor,status
  5234  0000B6  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5235  0000B8  0010               	retfie	
  5236  0000BA                     __end_of_sensor:
  5237                           	opt stack 0
  5238                           pclatu	equ	0xFFB
  5239                           pclath	equ	0xFFA
  5240                           tblptru	equ	0xFF8
  5241                           tblptrh	equ	0xFF7
  5242                           tblptrl	equ	0xFF6
  5243                           tablat	equ	0xFF5
  5244                           prodh	equ	0xFF4
  5245                           prodl	equ	0xFF3
  5246                           intcon	equ	0xFF2
  5247                           intcon2	equ	0xFF1
  5248                           intcon3	equ	0xFF0
  5249                           postinc0	equ	0xFEE
  5250                           fsr0h	equ	0xFEA
  5251                           fsr0l	equ	0xFE9
  5252                           wreg	equ	0xFE8
  5253                           fsr1h	equ	0xFE2
  5254                           fsr1l	equ	0xFE1
  5255                           bsr	equ	0xFE0
  5256                           fsr2h	equ	0xFDA
  5257                           fsr2l	equ	0xFD9
  5258                           status	equ	0xFD8
  5259                           
  5260 ;; *************** function _sensorOFF *****************
  5261 ;; Defined at:
  5262 ;;		line 468 in file "newmain.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;		None
  5265 ;; Auto vars:     Size  Location     Type
  5266 ;;		None
  5267 ;; Return value:  Size  Location     Type
  5268 ;;                  1    wreg      void 
  5269 ;; Registers used:
  5270 ;;		None
  5271 ;; Tracked objects:
  5272 ;;		On entry : 0/0
  5273 ;;		On exit  : 0/0
  5274 ;;		Unchanged: 0/0
  5275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5276 ;;      Params:         0       0       0       0       0       0       0       0       0
  5277 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5279 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5280 ;;Total ram usage:        0 bytes
  5281 ;; Hardware stack levels used:    1
  5282 ;; Hardware stack levels required when called:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_sensor
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text26
  5291  001816                     __ptext26:
  5292                           	opt stack 0
  5293  001816                     _sensorOFF:
  5294                           	opt stack 23
  5295                           
  5296                           ;newmain.c: 469: LATD0 = 0;
  5297                           
  5298                           ;incstack = 0
  5299  001816  908C               	bcf	3980,0,c	;volatile
  5300                           
  5301                           ;newmain.c: 470: LATD1 = 0;
  5302  001818  928C               	bcf	3980,1,c	;volatile
  5303                           
  5304                           ;newmain.c: 471: LATD2 = 0;
  5305  00181A  948C               	bcf	3980,2,c	;volatile
  5306                           
  5307                           ;newmain.c: 472: LATD3 = 0;
  5308  00181C  968C               	bcf	3980,3,c	;volatile
  5309  00181E  0012               	return		;funcret
  5310  001820                     __end_of_sensorOFF:
  5311                           	opt stack 0
  5312                           pclatu	equ	0xFFB
  5313                           pclath	equ	0xFFA
  5314                           tblptru	equ	0xFF8
  5315                           tblptrh	equ	0xFF7
  5316                           tblptrl	equ	0xFF6
  5317                           tablat	equ	0xFF5
  5318                           prodh	equ	0xFF4
  5319                           prodl	equ	0xFF3
  5320                           intcon	equ	0xFF2
  5321                           intcon2	equ	0xFF1
  5322                           intcon3	equ	0xFF0
  5323                           postinc0	equ	0xFEE
  5324                           fsr0h	equ	0xFEA
  5325                           fsr0l	equ	0xFE9
  5326                           wreg	equ	0xFE8
  5327                           fsr1h	equ	0xFE2
  5328                           fsr1l	equ	0xFE1
  5329                           bsr	equ	0xFE0
  5330                           fsr2h	equ	0xFDA
  5331                           fsr2l	equ	0xFD9
  5332                           status	equ	0xFD8
  5333                           
  5334 ;; *************** function _UART_Rx *****************
  5335 ;; Defined at:
  5336 ;;		line 184 in file "newmain.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;		None
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;		None
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  1    wreg      void 
  5343 ;; Registers used:
  5344 ;;		wreg, status,2, status,0
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5350 ;;      Params:         0       0       0       0       0       0       0       0       0
  5351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5352 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5353 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5354 ;;Total ram usage:       14 bytes
  5355 ;; Hardware stack levels used:    1
  5356 ;; This function calls:
  5357 ;;		Nothing
  5358 ;; This function is called by:
  5359 ;;		Interrupt level 2
  5360 ;; This function uses a non-reentrant model
  5361 ;;
  5362                           
  5363                           	psect	intcode
  5364  000008                     __pintcode:
  5365                           	opt stack 0
  5366  000008                     _UART_Rx:
  5367                           	opt stack 23
  5368                           
  5369                           ;incstack = 0
  5370  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5371  00000A  EDFB  F003         	call	int_func,f	;refresh shadow registers
  5372                           pclatu	equ	0xFFB
  5373                           pclath	equ	0xFFA
  5374                           tblptru	equ	0xFF8
  5375                           tblptrh	equ	0xFF7
  5376                           tblptrl	equ	0xFF6
  5377                           tablat	equ	0xFF5
  5378                           prodh	equ	0xFF4
  5379                           prodl	equ	0xFF3
  5380                           intcon	equ	0xFF2
  5381                           intcon2	equ	0xFF1
  5382                           intcon3	equ	0xFF0
  5383                           postinc0	equ	0xFEE
  5384                           fsr0h	equ	0xFEA
  5385                           fsr0l	equ	0xFE9
  5386                           wreg	equ	0xFE8
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           bsr	equ	0xFE0
  5390                           fsr2h	equ	0xFDA
  5391                           fsr2l	equ	0xFD9
  5392                           status	equ	0xFD8
  5393                           
  5394                           	psect	intcode_body
  5395  0007F6                     __pintcode_body:
  5396                           	opt stack 23
  5397  0007F6                     int_func:
  5398                           	opt stack 23
  5399  0007F6  0006               	pop		; remove dummy address from shadow register refresh
  5400  0007F8  CFFA F001          	movff	pclath,??_UART_Rx
  5401  0007FC  CFFB F002          	movff	pclatu,??_UART_Rx+1
  5402  000800  CFE9 F003          	movff	fsr0l,??_UART_Rx+2
  5403  000804  CFEA F004          	movff	fsr0h,??_UART_Rx+3
  5404  000808  CFE1 F005          	movff	fsr1l,??_UART_Rx+4
  5405  00080C  CFE2 F006          	movff	fsr1h,??_UART_Rx+5
  5406  000810  CFD9 F007          	movff	fsr2l,??_UART_Rx+6
  5407  000814  CFDA F008          	movff	fsr2h,??_UART_Rx+7
  5408  000818  CFF3 F009          	movff	prodl,??_UART_Rx+8
  5409  00081C  CFF4 F00A          	movff	prodh,??_UART_Rx+9
  5410  000820  CFF6 F00B          	movff	tblptrl,??_UART_Rx+10
  5411  000824  CFF7 F00C          	movff	tblptrh,??_UART_Rx+11
  5412  000828  CFF8 F00D          	movff	tblptru,??_UART_Rx+12
  5413  00082C  CFF5 F00E          	movff	tablat,??_UART_Rx+13
  5414                           
  5415                           ;newmain.c: 185: if (RCIF == 1) {
  5416  000830  AA9E               	btfss	3998,5,c	;volatile
  5417  000832  D0AB               	goto	i2l242
  5418                           
  5419                           ;newmain.c: 186: a = RCREG;
  5420  000834  CFAE F099          	movff	4014,_a	;volatile
  5421  000838  0100               	movlb	0	; () banked
  5422  00083A  6B9A               	clrf	(_a+1)& (0+255),b
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;newmain.c: 187: if (a == 'm' || a == 'M') {
  5426  00083C  0E6D               	movlw	109
  5427  00083E  0100               	movlb	0	; () banked
  5428  000840  1999               	xorwf	_a& (0+255),w,b
  5429  000842  0100               	movlb	0	; () banked
  5430  000844  119A               	iorwf	(_a+1)& (0+255),w,b
  5431  000846  B4D8               	btfsc	status,2,c
  5432  000848  D007               	goto	i2l2370
  5433                           
  5434                           ; BSR set to: 0
  5435  00084A  0E4D               	movlw	77
  5436  00084C  0100               	movlb	0	; () banked
  5437  00084E  1999               	xorwf	_a& (0+255),w,b
  5438  000850  0100               	movlb	0	; () banked
  5439  000852  119A               	iorwf	(_a+1)& (0+255),w,b
  5440  000854  A4D8               	btfss	status,2,c
  5441  000856  D005               	goto	i2l2372
  5442  000858                     i2l2370:
  5443                           
  5444                           ; BSR set to: 0
  5445                           ;newmain.c: 188: mood = 1;
  5446  000858  0E00               	movlw	0
  5447  00085A  0100               	movlb	0	; () banked
  5448  00085C  6F9C               	movwf	(_mood+1)& (0+255),b
  5449  00085E  0E01               	movlw	1
  5450  000860  D025               	goto	L3
  5451  000862                     i2l2372:
  5452                           
  5453                           ; BSR set to: 0
  5454  000862  0E61               	movlw	97
  5455  000864  0100               	movlb	0	; () banked
  5456  000866  1999               	xorwf	_a& (0+255),w,b
  5457  000868  0100               	movlb	0	; () banked
  5458  00086A  119A               	iorwf	(_a+1)& (0+255),w,b
  5459  00086C  B4D8               	btfsc	status,2,c
  5460  00086E  D007               	goto	i2l2376
  5461                           
  5462                           ; BSR set to: 0
  5463  000870  0E41               	movlw	65
  5464  000872  0100               	movlb	0	; () banked
  5465  000874  1999               	xorwf	_a& (0+255),w,b
  5466  000876  0100               	movlb	0	; () banked
  5467  000878  119A               	iorwf	(_a+1)& (0+255),w,b
  5468  00087A  A4D8               	btfss	status,2,c
  5469  00087C  D005               	goto	i2l2378
  5470  00087E                     i2l2376:
  5471                           
  5472                           ; BSR set to: 0
  5473                           ;newmain.c: 190: mood = 2;
  5474  00087E  0E00               	movlw	0
  5475  000880  0100               	movlb	0	; () banked
  5476  000882  6F9C               	movwf	(_mood+1)& (0+255),b
  5477  000884  0E02               	movlw	2
  5478  000886  D012               	goto	L3
  5479  000888                     i2l2378:
  5480                           
  5481                           ; BSR set to: 0
  5482  000888  0E73               	movlw	115
  5483  00088A  0100               	movlb	0	; () banked
  5484  00088C  1999               	xorwf	_a& (0+255),w,b
  5485  00088E  0100               	movlb	0	; () banked
  5486  000890  119A               	iorwf	(_a+1)& (0+255),w,b
  5487  000892  B4D8               	btfsc	status,2,c
  5488  000894  D007               	goto	i2l2382
  5489                           
  5490                           ; BSR set to: 0
  5491  000896  0E53               	movlw	83
  5492  000898  0100               	movlb	0	; () banked
  5493  00089A  1999               	xorwf	_a& (0+255),w,b
  5494  00089C  0100               	movlb	0	; () banked
  5495  00089E  119A               	iorwf	(_a+1)& (0+255),w,b
  5496  0008A0  A4D8               	btfss	status,2,c
  5497  0008A2  D006               	goto	i2l2384
  5498  0008A4                     i2l2382:
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;newmain.c: 192: mood = 3;
  5502  0008A4  0E00               	movlw	0
  5503  0008A6  0100               	movlb	0	; () banked
  5504  0008A8  6F9C               	movwf	(_mood+1)& (0+255),b
  5505  0008AA  0E03               	movlw	3
  5506  0008AC                     L3:
  5507  0008AC  6F9B               	movwf	_mood& (0+255),b
  5508                           
  5509                           ;newmain.c: 193: } else if (a == '0') {
  5510  0008AE  D06D               	goto	i2l242
  5511  0008B0                     i2l2384:
  5512                           
  5513                           ; BSR set to: 0
  5514  0008B0  0E30               	movlw	48
  5515  0008B2  0100               	movlb	0	; () banked
  5516  0008B4  1999               	xorwf	_a& (0+255),w,b
  5517  0008B6  0100               	movlb	0	; () banked
  5518  0008B8  119A               	iorwf	(_a+1)& (0+255),w,b
  5519  0008BA  A4D8               	btfss	status,2,c
  5520  0008BC  D005               	goto	i2l2388
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;newmain.c: 194: modo = 0;
  5524  0008BE  0E00               	movlw	0
  5525  0008C0  0100               	movlb	0	; () banked
  5526  0008C2  6FA0               	movwf	(_modo+1)& (0+255),b
  5527  0008C4  0E00               	movlw	0
  5528  0008C6  D02F               	goto	L7
  5529  0008C8                     i2l2388:
  5530                           
  5531                           ; BSR set to: 0
  5532  0008C8  0E31               	movlw	49
  5533  0008CA  0100               	movlb	0	; () banked
  5534  0008CC  1999               	xorwf	_a& (0+255),w,b
  5535  0008CE  0100               	movlb	0	; () banked
  5536  0008D0  119A               	iorwf	(_a+1)& (0+255),w,b
  5537  0008D2  A4D8               	btfss	status,2,c
  5538  0008D4  D005               	goto	i2l2392
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;newmain.c: 196: modo = 1;
  5542  0008D6  0E00               	movlw	0
  5543  0008D8  0100               	movlb	0	; () banked
  5544  0008DA  6FA0               	movwf	(_modo+1)& (0+255),b
  5545  0008DC  0E01               	movlw	1
  5546  0008DE  D023               	goto	L7
  5547  0008E0                     i2l2392:
  5548                           
  5549                           ; BSR set to: 0
  5550  0008E0  0E32               	movlw	50
  5551  0008E2  0100               	movlb	0	; () banked
  5552  0008E4  1999               	xorwf	_a& (0+255),w,b
  5553  0008E6  0100               	movlb	0	; () banked
  5554  0008E8  119A               	iorwf	(_a+1)& (0+255),w,b
  5555  0008EA  A4D8               	btfss	status,2,c
  5556  0008EC  D005               	goto	i2l2396
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;newmain.c: 198: modo = 2;
  5560  0008EE  0E00               	movlw	0
  5561  0008F0  0100               	movlb	0	; () banked
  5562  0008F2  6FA0               	movwf	(_modo+1)& (0+255),b
  5563  0008F4  0E02               	movlw	2
  5564  0008F6  D017               	goto	L7
  5565  0008F8                     i2l2396:
  5566                           
  5567                           ; BSR set to: 0
  5568  0008F8  0E33               	movlw	51
  5569  0008FA  0100               	movlb	0	; () banked
  5570  0008FC  1999               	xorwf	_a& (0+255),w,b
  5571  0008FE  0100               	movlb	0	; () banked
  5572  000900  119A               	iorwf	(_a+1)& (0+255),w,b
  5573  000902  A4D8               	btfss	status,2,c
  5574  000904  D005               	goto	i2l2400
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;newmain.c: 200: modo = 3;
  5578  000906  0E00               	movlw	0
  5579  000908  0100               	movlb	0	; () banked
  5580  00090A  6FA0               	movwf	(_modo+1)& (0+255),b
  5581  00090C  0E03               	movlw	3
  5582  00090E  D00B               	goto	L7
  5583  000910                     i2l2400:
  5584                           
  5585                           ; BSR set to: 0
  5586  000910  0E34               	movlw	52
  5587  000912  0100               	movlb	0	; () banked
  5588  000914  1999               	xorwf	_a& (0+255),w,b
  5589  000916  0100               	movlb	0	; () banked
  5590  000918  119A               	iorwf	(_a+1)& (0+255),w,b
  5591  00091A  A4D8               	btfss	status,2,c
  5592  00091C  D006               	goto	i2l2404
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;newmain.c: 202: modo = 4;
  5596  00091E  0E00               	movlw	0
  5597  000920  0100               	movlb	0	; () banked
  5598  000922  6FA0               	movwf	(_modo+1)& (0+255),b
  5599  000924  0E04               	movlw	4
  5600  000926                     L7:
  5601  000926  6F9F               	movwf	_modo& (0+255),b
  5602                           
  5603                           ;newmain.c: 203: } else if (a == '5') {
  5604  000928  D030               	goto	i2l242
  5605  00092A                     i2l2404:
  5606                           
  5607                           ; BSR set to: 0
  5608  00092A  0E35               	movlw	53
  5609  00092C  0100               	movlb	0	; () banked
  5610  00092E  1999               	xorwf	_a& (0+255),w,b
  5611  000930  0100               	movlb	0	; () banked
  5612  000932  119A               	iorwf	(_a+1)& (0+255),w,b
  5613  000934  A4D8               	btfss	status,2,c
  5614  000936  D005               	goto	i2l2408
  5615                           
  5616                           ; BSR set to: 0
  5617                           ;newmain.c: 204: PWM = 1;
  5618  000938  0E00               	movlw	0
  5619  00093A  0100               	movlb	0	; () banked
  5620  00093C  6F9E               	movwf	(_PWM+1)& (0+255),b
  5621  00093E  0E01               	movlw	1
  5622  000940  D023               	goto	L10
  5623  000942                     i2l2408:
  5624                           
  5625                           ; BSR set to: 0
  5626  000942  0E36               	movlw	54
  5627  000944  0100               	movlb	0	; () banked
  5628  000946  1999               	xorwf	_a& (0+255),w,b
  5629  000948  0100               	movlb	0	; () banked
  5630  00094A  119A               	iorwf	(_a+1)& (0+255),w,b
  5631  00094C  A4D8               	btfss	status,2,c
  5632  00094E  D005               	goto	i2l2412
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;newmain.c: 206: PWM = 2;
  5636  000950  0E00               	movlw	0
  5637  000952  0100               	movlb	0	; () banked
  5638  000954  6F9E               	movwf	(_PWM+1)& (0+255),b
  5639  000956  0E02               	movlw	2
  5640  000958  D017               	goto	L10
  5641  00095A                     i2l2412:
  5642                           
  5643                           ; BSR set to: 0
  5644  00095A  0E37               	movlw	55
  5645  00095C  0100               	movlb	0	; () banked
  5646  00095E  1999               	xorwf	_a& (0+255),w,b
  5647  000960  0100               	movlb	0	; () banked
  5648  000962  119A               	iorwf	(_a+1)& (0+255),w,b
  5649  000964  A4D8               	btfss	status,2,c
  5650  000966  D005               	goto	i2l2416
  5651                           
  5652                           ; BSR set to: 0
  5653                           ;newmain.c: 208: PWM = 3;
  5654  000968  0E00               	movlw	0
  5655  00096A  0100               	movlb	0	; () banked
  5656  00096C  6F9E               	movwf	(_PWM+1)& (0+255),b
  5657  00096E  0E03               	movlw	3
  5658  000970  D00B               	goto	L10
  5659  000972                     i2l2416:
  5660                           
  5661                           ; BSR set to: 0
  5662  000972  0E38               	movlw	56
  5663  000974  0100               	movlb	0	; () banked
  5664  000976  1999               	xorwf	_a& (0+255),w,b
  5665  000978  0100               	movlb	0	; () banked
  5666  00097A  119A               	iorwf	(_a+1)& (0+255),w,b
  5667  00097C  A4D8               	btfss	status,2,c
  5668  00097E  D005               	goto	i2l242
  5669                           
  5670                           ; BSR set to: 0
  5671                           ;newmain.c: 210: PWM = 4;
  5672  000980  0E00               	movlw	0
  5673  000982  0100               	movlb	0	; () banked
  5674  000984  6F9E               	movwf	(_PWM+1)& (0+255),b
  5675  000986  0E04               	movlw	4
  5676  000988                     L10:
  5677  000988  6F9D               	movwf	_PWM& (0+255),b
  5678  00098A                     i2l242:
  5679  00098A  C00E  FFF5         	movff	??_UART_Rx+13,tablat
  5680  00098E  C00D  FFF8         	movff	??_UART_Rx+12,tblptru
  5681  000992  C00C  FFF7         	movff	??_UART_Rx+11,tblptrh
  5682  000996  C00B  FFF6         	movff	??_UART_Rx+10,tblptrl
  5683  00099A  C00A  FFF4         	movff	??_UART_Rx+9,prodh
  5684  00099E  C009  FFF3         	movff	??_UART_Rx+8,prodl
  5685  0009A2  C008  FFDA         	movff	??_UART_Rx+7,fsr2h
  5686  0009A6  C007  FFD9         	movff	??_UART_Rx+6,fsr2l
  5687  0009AA  C006  FFE2         	movff	??_UART_Rx+5,fsr1h
  5688  0009AE  C005  FFE1         	movff	??_UART_Rx+4,fsr1l
  5689  0009B2  C004  FFEA         	movff	??_UART_Rx+3,fsr0h
  5690  0009B6  C003  FFE9         	movff	??_UART_Rx+2,fsr0l
  5691  0009BA  C002  FFFB         	movff	??_UART_Rx+1,pclatu
  5692  0009BE  C001  FFFA         	movff	??_UART_Rx,pclath
  5693  0009C2  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5694  0009C4  0011               	retfie		f
  5695  0009C6                     __end_of_UART_Rx:
  5696                           	opt stack 0
  5697  0000                     pclatu	equ	0xFFB
  5698                           pclath	equ	0xFFA
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           prodh	equ	0xFF4
  5704                           prodl	equ	0xFF3
  5705                           intcon	equ	0xFF2
  5706                           intcon2	equ	0xFF1
  5707                           intcon3	equ	0xFF0
  5708                           postinc0	equ	0xFEE
  5709                           fsr0h	equ	0xFEA
  5710                           fsr0l	equ	0xFE9
  5711                           wreg	equ	0xFE8
  5712                           fsr1h	equ	0xFE2
  5713                           fsr1l	equ	0xFE1
  5714                           bsr	equ	0xFE0
  5715                           fsr2h	equ	0xFDA
  5716                           fsr2l	equ	0xFD9
  5717                           status	equ	0xFD8
  5718                           pclatu	equ	0xFFB
  5719                           pclath	equ	0xFFA
  5720                           tblptru	equ	0xFF8
  5721                           tblptrh	equ	0xFF7
  5722                           tblptrl	equ	0xFF6
  5723                           tablat	equ	0xFF5
  5724                           prodh	equ	0xFF4
  5725                           prodl	equ	0xFF3
  5726                           intcon	equ	0xFF2
  5727                           intcon2	equ	0xFF1
  5728                           intcon3	equ	0xFF0
  5729                           postinc0	equ	0xFEE
  5730                           fsr0h	equ	0xFEA
  5731                           fsr0l	equ	0xFE9
  5732                           wreg	equ	0xFE8
  5733                           fsr1h	equ	0xFE2
  5734                           fsr1l	equ	0xFE1
  5735                           bsr	equ	0xFE0
  5736                           fsr2h	equ	0xFDA
  5737                           fsr2l	equ	0xFD9
  5738                           status	equ	0xFD8
  5739                           
  5740                           	psect	rparam
  5741  0000                     pclatu	equ	0xFFB
  5742                           pclath	equ	0xFFA
  5743                           tblptru	equ	0xFF8
  5744                           tblptrh	equ	0xFF7
  5745                           tblptrl	equ	0xFF6
  5746                           tablat	equ	0xFF5
  5747                           prodh	equ	0xFF4
  5748                           prodl	equ	0xFF3
  5749                           intcon	equ	0xFF2
  5750                           intcon2	equ	0xFF1
  5751                           intcon3	equ	0xFF0
  5752                           postinc0	equ	0xFEE
  5753                           fsr0h	equ	0xFEA
  5754                           fsr0l	equ	0xFE9
  5755                           wreg	equ	0xFE8
  5756                           fsr1h	equ	0xFE2
  5757                           fsr1l	equ	0xFE1
  5758                           bsr	equ	0xFE0
  5759                           fsr2h	equ	0xFDA
  5760                           fsr2l	equ	0xFD9
  5761                           status	equ	0xFD8
  5762                           
  5763                           	psect	temp
  5764  000040                     btemp:
  5765                           	opt stack 0
  5766  000040                     	ds	1
  5767  0000                     int$flags	set	btemp
  5768                           pclatu	equ	0xFFB
  5769                           pclath	equ	0xFFA
  5770                           tblptru	equ	0xFF8
  5771                           tblptrh	equ	0xFF7
  5772                           tblptrl	equ	0xFF6
  5773                           tablat	equ	0xFF5
  5774                           prodh	equ	0xFF4
  5775                           prodl	equ	0xFF3
  5776                           intcon	equ	0xFF2
  5777                           intcon2	equ	0xFF1
  5778                           intcon3	equ	0xFF0
  5779                           postinc0	equ	0xFEE
  5780                           fsr0h	equ	0xFEA
  5781                           fsr0l	equ	0xFE9
  5782                           wreg	equ	0xFE8
  5783                           fsr1h	equ	0xFE2
  5784                           fsr1l	equ	0xFE1
  5785                           bsr	equ	0xFE0
  5786                           fsr2h	equ	0xFDA
  5787                           fsr2l	equ	0xFD9
  5788                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     48      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _start1->___awtoft
    _start->___awtoft
    _start2->___awtoft
    ___ftmul->___awtoft

Critical Paths under _sensor in COMRAM

    None.

Critical Paths under _UART_Rx in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_start
    _main->_start1
    _start1->___ftadd
    _start->___ftadd
    _pwmB2->___ftadd
    _pwmB1->___ftadd
    _pwmA2->___ftadd
    _pwmA1->___ftadd
    ___ftadd->___ftmul
    _pwmD->___ftmul
    _automatico->_adelante
    _automatico->_start2
    _start2->___ftmul
    ___awtoft->___ftpack
    _pwmI->___ftmul
    _pwm->___ftmul
    ___ftmul->___awtoft

Critical Paths under _sensor in BANK0

    None.

Critical Paths under _UART_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _sensor in BANK1

    None.

Critical Paths under _UART_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _sensor in BANK2

    None.

Critical Paths under _UART_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _sensor in BANK3

    None.

Critical Paths under _UART_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _sensor in BANK4

    None.

Critical Paths under _UART_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _sensor in BANK5

    None.

Critical Paths under _UART_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _sensor in BANK6

    None.

Critical Paths under _UART_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _sensor in BANK7

    None.

Critical Paths under _UART_Rx in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   99934
                                             46 BANK0      2     2      0
                         _automatico
                             _manual
                           _settings
                              _start
                             _start1
 ---------------------------------------------------------------------------------
 (1) _start1                                               8     8      0   13087
                                             38 BANK0      8     8      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _start                                                8     8      0   13087
                                             38 BANK0      8     8      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _manual                                               0     0      0   50672
                           _adelante
                              _atras
                            _derecha
                              _freno
                          _izquierda
                              _pwmA1
                              _pwmA2
                              _pwmB1
                              _pwmB2
 ---------------------------------------------------------------------------------
 (2) _pwmB2                                                0     0      0    5089
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _pwmB1                                                0     0      0    6211
                            ___ftadd
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _pwmA2                                                0     0      0    5089
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _pwmA1                                                0     0      0    6211
                            ___ftadd
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5089
                                             26 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _derecha                                              0     0      0    7579
                               _pwmD
 ---------------------------------------------------------------------------------
 (3) _pwmD                                                 0     0      0    7579
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _atras                                                2     2      0    6457
                                             26 BANK0      2     2      0
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _automatico                                           2     2      0   23088
                                             28 BANK0      2     2      0
                             ___ftge
                           _adelante
                              _freno
                          _izquierda
                             _start2
 ---------------------------------------------------------------------------------
 (2) _start2                                               2     2      0    7930
                                             26 BANK0      2     2      0
                           ___awtoft
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2768
                                             31 COMRAM     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _izquierda                                            0     0      0    7579
                               _pwmI
 ---------------------------------------------------------------------------------
 (3) _pwmI                                                 0     0      0    7579
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1122
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _freno                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adelante                                             2     2      0    6457
                                             26 BANK0      2     2      0
                                _pwm
 ---------------------------------------------------------------------------------
 (3) _pwm                                                  0     0      0    6457
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4    1295
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5162
                                             11 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _sensor                                              17    17      0       0
                                             14 COMRAM    17    17      0
                          _sensorOFF
 ---------------------------------------------------------------------------------
 (7) _sensorOFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _UART_Rx                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _automatico
     ___ftge
     _adelante
       _pwm
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _freno
     _izquierda
       _pwmI
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _start2
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _manual
     _adelante
       _pwm
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _atras
       _pwm
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _derecha
       _pwmD
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _freno
     _izquierda
       _pwmI
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _pwmA1
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
     _pwmA2
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
     _pwmB1
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
     _pwmB2
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
   _settings
   _start
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _start1
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 _sensor (ROOT)
   _sensorOFF

 _UART_Rx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      20        0.0%
DATA                 0      0      85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Mar 14 15:47:55 2022

                      _a 0099                        _b 0021                        _c 00A3  
                      _i 0036                        _n 0030                        _s 0032  
                      _x 00A1                        _y 003E                        _z 0034  
                     _GO 007E11                       _d1 0093                       _d2 0090  
                     bsr 000FE0             ___ftadd@exp1 0085             ___ftadd@exp2 0084  
           ___ftadd@sign 0083                      l205 147A                      l252 00E4  
                    l181 165A                      l255 01D6                      l191 0C7E  
                    l600 0428                      l179 1650                      l198 0B26  
                    l609 04FE                      l618 0528                      l571 1288  
                    l594 03C6                      l598 0400                      _GIE 007F97  
                    _PR2 000FCB                      _PWM 009D                      _pwm 12BC  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
                   l3002 034A                     l3060 1694                     l2502 0A3A  
                   l2520 0AA6                     l3056 1664                     l2530 0AE4  
                   l3058 1670                     l2516 0A88                     l2620 0F52  
                   l2700 04E4                     l2470 123C                     l2462 11DE  
                   l2526 0AC6                     l2606 12E0                     l2542 13F0  
                   l2702 04F2                     l2480 1292                     l2472 126C  
                   l2464 11EC                     l2552 1474                     l2474 127A  
                   l2466 121C                     l2458 11CA                     l2562 10A6  
                   l2546 1430                     l2730 1736                     l2580 1138  
                   l2708 0552                     l2660 03D4                     l2486 12AE  
                   l2590 1168                     l2638 0E06                     l2718 05A0  
                   l2830 0622                     l2814 05D8                     l2496 0A00  
                   l2592 1178                     l2584 114C                     l2672 041E  
                   l2920 07D8                     l2824 0604                     l2594 1182  
                   l2690 049C                     l2682 0460                     l2666 040E  
                   l2914 07BA                     l2842 065E                     l2932 00DA  
                   l2692 04AA                     l2908 079C                     l2852 068C  
                   l2836 0640                     l2598 119E                     l2934 00E0  
                   l2694 04B6                     l2870 06E6                     l2960 01D2  
                   l2688 048E                     l2880 0714                     l2864 06C8  
                   l2858 06AA                     l2892 0750                     l2886 0732  
                   l2898 076E                     ?_pwm 0001                     u2131 09DC  
                   u2221 1082                     _LATA 000F89                     _LATB 000F8A  
                   u2151 0A16                     u3007 0230                     _LATC 000F8B  
                   u2240 10CC                     _LATD 000F8C                     u3017 0250  
                   _LATE 000F8D                     u3107 17D4                     u3027 026E  
                   u2331 0374                     u2245 10C2                     u3037 028E  
                   u2341 0392                     u3047 02AE                     u3057 02CE  
                   u3067 02EE                     u3077 030E                     u3087 032E  
                   u3097 1494                     u2820 00D8                     u2907 0B3E  
                   _PEIE 007F96                     u2917 0C96                     u2927 17AA  
                   u2937 011E                     u2947 013E                     _RCIE 007CED  
                   _RCIF 007CF5                     u2957 015E                     u2967 017E  
                   u2977 019E                     u2987 01BE                     u2997 0210  
                   _RCIP 007CFD                     _TMR2 000FCC          __end_of_UART_Rx 09C6  
                   _main 164A             ___ftpack@arg 0060                     _modo 009F  
                   _mood 009B             ___ftpack@exp 0063                     _pwmD 0DD4  
                   _pwmI 0F20                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0040                     prodh 000FF4  
                   prodl 000FF3                     start 00BA             ___ftmul@cntr 0078  
           ___param_bank 000000             ___ftmul@sign 0079             ___fttol@exp1 006E  
           ___fttol@lval 006A                    ??_pwm 0021                    ?_main 0001  
        __end_of___ftadd 05C6                    ?_pwmD 0001                    ?_pwmI 0001  
        __end_of___ftmul 0B24          __end_of___fttol 11B0                    _T2CON 000FCA  
                  _LATD0 007C60                    _LATD1 007C61                    _LATD2 007C62  
                  _LATD3 007C63                    i1l247 0072                    i2l242 098A  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXSTA 000FAC  
        __end_of_derecha 17FE            ___awtoft@sign 0020                    _atras 179C  
                  _freno 180C                    _pwmA1 15E6                    _pwmA2 16DE  
                  _pwmB1 1582                    _pwmB2 169E            ___ftpack@sign 0064  
                  _start 0C7C                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 175E             __end_of_main 169E  
           __end_of_pwmD 0F20             __end_of_pwmI 106C                   ??_main 008E  
          ___fttol@sign1 0069                   ??_pwmD 0021                   ??_pwmI 0021  
          __activetblptr 000002                ??_UART_Rx 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   ?_atras 0001  
                 ?_freno 0001                   _ADRESH 000FC4                   _ADRESL 000FC3  
                 ?_pwmA1 0001                   ?_pwmA2 0001                   ?_pwmB1 0001  
                 ?_pwmB2 0001                   _CCPR1L 000FBE                   _CCPR2L 000FBB  
       __end_of___awtoft 175E         __end_of___ftpack 12BC                   ?_start 0001  
                 _INT1IE 007F83                   _INT1IF 007F80                   _INT2IE 007F84  
                 _INT2IF 007F81                   _INT1IP 007F86                   _INT2IP 007F87  
                 i1l1692 0068                   i2l2400 0910                   i2l2412 095A  
                 i2l2404 092A                   i2l2416 0972                   i2l2408 0942  
                 i2l2370 0858                   i2l2372 0862                   i2l2382 08A4  
                 i2l2392 08E0                   i2l2384 08B0                   i2l2376 087E  
                 i2l2378 0888                   i2l2396 08F8                   i2l2388 08C8  
       __end_of_adelante 17F0                   _OSCCON 000FD3                   ___ftge 13B0  
              ??___ftadd 0080                ??___ftmul 0071                ??___fttol 0064  
                 _manual 05C6                   clear_0 177C                   clear_1 1788  
              ??_derecha 0021                   _sensor 0018                   _start1 0B24  
                 _start2 1478    ___ftmul@f3_as_product 0075             __pdataCOMRAM 003E  
       __end_of_settings 1582                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 178E  
             ___ftadd@f1 007A               ___ftadd@f2 007D               ___ftge@ff1 0060  
             ___ftge@ff2 0063            ___rparam_used 000001               ___awtoft@c 0068  
             ___ftmul@f1 006B               ___ftmul@f2 006E               ___fttol@f1 0060  
         __pcstackCOMRAM 0001            __end_of_atras 17C6            __end_of_freno 1816  
          __end_of_pwmA1 164A            __end_of_pwmA2 171E            __end_of_pwmB1 15E6  
          __end_of_pwmB2 16DE            __end_of_start 0DD4                  ??_atras 007A  
                ??_freno 0020                  ??_pwmA1 0021                  ??_pwmA2 0021  
                ??_pwmB1 0021                  ??_pwmB2 0021                  ??_start 0086  
             __pbssBANK0 0090                  ?___ftge 0060                  _CCP1CON 000FBD  
                _CCP2CON 000FBA                  ?_manual 0001                ?___awtoft 0068  
              ?___ftpack 0060                  ?_sensor 0001                  ?_start1 0001  
                ?_start2 0001       __size_of_sensorOFF 000A                ?_adelante 0001  
                _INTEDG1 007F8D                  _INTEDG2 007F8C       __size_of_izquierda 000E  
                _UART_Rx 0008                  __Hparam 0000                  __Lparam 0000  
             _automatico 00BE                ?_settings 0001          __size_of___ftge 00C8  
                ___ftadd 035E                  ___ftmul 09C6                  ___fttol 106C  
        __size_of_manual 0230                  __pcinit 175E               ??___awtoft 0020  
             ??___ftpack 0065                  __ramtop 0800                  _derecha 17F0  
                __ptext0 164A                  __ptext1 0B24                  __ptext2 0C7C  
                __ptext3 1502                  __ptext4 05C6                  __ptext5 169E  
                __ptext6 1582                  __ptext7 16DE                  __ptext8 15E6  
                __ptext9 035E          __size_of_sensor 00A2          __size_of_start1 0158  
        __size_of_start2 008A               ??_adelante 007A                _T2CONbits 000FCA  
           __size_of_pwm 00F4           __pintcode_body 07F6     end_of_initialization 178E  
          __Lmediumconst 0000                  int_func 07F6        __end_of_sensorOFF 1820  
      __end_of_izquierda 180C               ??_settings 0020                  postinc0 000FEE  
             _start1$934 0088               _start1$935 008B                _TRISCbits 000F94  
            ?_automatico 0001              ___ftmul@exp 0074           __end_of___ftge 1478  
          __pidataCOMRAM 1820           __end_of_manual 07F6           __end_of_sensor 00BA  
         __end_of_start1 0C7C           __end_of_start2 1502      start_initialization 175E  
            __end_of_pwm 13B0                 ??___ftge 0066                 ??_manual 0021  
               ??_sensor 000F                 ??_start1 0086                 ??_start2 007A  
      __size_of___awtoft 0040        __size_of___ftpack 010C              __pbssCOMRAM 0021  
      __size_of_adelante 002A            __pcstackBANK0 0060      __size_of_automatico 02A0  
               ?_UART_Rx 0001              _ciclo_util1 0024              _ciclo_util2 0096  
              __pintcode 0008                 ?___ftadd 007A                 ?___ftmul 006B  
               ?___fttol 0060              __pintcodelo 0018        __size_of_settings 0080  
               ?_derecha 0001           __size_of_atras 002A           __size_of_freno 000A  
         __size_of_pwmA1 0064           __size_of_pwmA2 0040           __size_of_pwmB1 0064  
         __size_of_pwmB2 0040           __size_of_start 0158                 _LATAbits 000F89  
               _LATEbits 000F8D                _sensorOFF 1816                _start$932 0088  
              _start$933 008B                _izquierda 17FE               _ADCON0bits 000FC2  
            _conversion1 002D              _conversion2 002A              _conversion3 0027  
       __size_of_UART_Rx 09BE                 __Hrparam 0000             ??_automatico 007C  
               __Lrparam 0000               ?_sensorOFF 0001               ?_izquierda 0001  
       __size_of___ftadd 0268         __size_of___ftmul 015E         __size_of___fttol 0144  
               ___awtoft 171E                 ___ftpack 11B0         __size_of_derecha 000E  
               _adelante 17C6                 __ptext10 17F0                 __ptext11 0DD4  
               __ptext20 17C6                 __ptext12 179C                 __ptext21 12BC  
               __ptext13 00BE                 __ptext22 106C                 __ptext14 1478  
               __ptext23 09C6                 __ptext15 171E                 __ptext24 11B0  
               __ptext16 17FE                 __ptext17 0F20                 __ptext26 1816  
               __ptext18 13B0                 __ptext19 180C       __end_of_automatico 035E  
            _duty_cicle1 003B              _duty_cicle2 0038            __size_of_main 0054  
          __size_of_pwmD 014C            __size_of_pwmI 014C                 _settings 1502  
               int$flags 0040                 intlevel1 0000                 intlevel2 0000  
            ??_sensorOFF 000F              ??_izquierda 0021      __CFG_FOSC$INTOSC_HS 000000  
