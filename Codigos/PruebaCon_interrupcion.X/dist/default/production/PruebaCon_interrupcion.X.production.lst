

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon Mar 14 13:24:33 2022

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           ; Version 1.41
    47                           ; Generated 25/01/2017 GMT
    48                           ; 
    49                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F4550 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     
    81                           	psect	idataCOMRAM
    82  001834                     __pidataCOMRAM:
    83                           	opt stack 0
    84                           
    85                           ;initializer for _y
    86  001834  0001               	dw	1
    87  0000                     _PORTBbits	set	3969
    88  0000                     _RCREG	set	4014
    89  0000                     _ADRESL	set	4035
    90  0000                     _ADRESH	set	4036
    91  0000                     _T2CONbits	set	4042
    92  0000                     _TMR2	set	4044
    93  0000                     _ADCON0bits	set	4034
    94  0000                     _TXSTA	set	4012
    95  0000                     _RCSTA	set	4011
    96  0000                     _SPBRG	set	4015
    97  0000                     _TRISCbits	set	3988
    98  0000                     _CCP2CON	set	4026
    99  0000                     _CCPR2L	set	4027
   100  0000                     _CCP1CON	set	4029
   101  0000                     _CCPR1L	set	4030
   102  0000                     _LATC	set	3979
   103  0000                     _TRISC	set	3988
   104  0000                     _T2CON	set	4042
   105  0000                     _PR2	set	4043
   106  0000                     _LATE	set	3981
   107  0000                     _TRISE	set	3990
   108  0000                     _LATA	set	3977
   109  0000                     _TRISA	set	3986
   110  0000                     _LATB	set	3978
   111  0000                     _TRISB	set	3987
   112  0000                     _ADCON2	set	4032
   113  0000                     _ADCON1	set	4033
   114  0000                     _ADCON0	set	4034
   115  0000                     _OSCCON	set	4051
   116  0000                     _LATEbits	set	3981
   117  0000                     _LATAbits	set	3977
   118  0000                     _LATB3	set	31827
   119  0000                     _LATB2	set	31826
   120  0000                     _LATB1	set	31825
   121  0000                     _LATB0	set	31824
   122  0000                     _GO	set	32273
   123  0000                     _INT2IP	set	32647
   124  0000                     _INTEDG2	set	32652
   125  0000                     _INT2IF	set	32641
   126  0000                     _INT2IE	set	32644
   127  0000                     _INT1IP	set	32646
   128  0000                     _INTEDG1	set	32653
   129  0000                     _INT1IF	set	32640
   130  0000                     _INT1IE	set	32643
   131  0000                     _RCIP	set	31997
   132  0000                     _RCIF	set	31989
   133  0000                     _RCIE	set	31981
   134  0000                     _PEIE	set	32662
   135  0000                     _GIE	set	32663
   136                           
   137                           ; #config settings
   138  0000                     
   139                           	psect	cinit
   140  001768                     __pcinit:
   141                           	opt stack 0
   142  001768                     start_initialization:
   143                           	opt stack 0
   144  001768                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (2 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  001768  0E34               	movlw	low __pidataCOMRAM
   150  00176A  6EF6               	movwf	tblptrl,c
   151  00176C  0E18               	movlw	high __pidataCOMRAM
   152  00176E  6EF7               	movwf	tblptrh,c
   153  001770  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  001772  6EF8               	movwf	tblptru,c
   155  001774  0009               	tblrd		*+	;fetch initializer
   156  001776  CFF5 F03E          	movff	tablat,__pdataCOMRAM
   157  00177A  0009               	tblrd		*+	;fetch initializer
   158  00177C  CFF5 F03F          	movff	tablat,__pdataCOMRAM+1
   159                           
   160                           ; Clear objects allocated to BANK0 (22 bytes)
   161  001780  EE00  F090         	lfsr	0,__pbssBANK0
   162  001784  0E16               	movlw	22
   163  001786                     clear_0:
   164  001786  6AEE               	clrf	postinc0,c
   165  001788  06E8               	decf	wreg,f,c
   166  00178A  E1FD               	bnz	clear_0
   167                           
   168                           ; Clear objects allocated to COMRAM (29 bytes)
   169  00178C  EE00  F021         	lfsr	0,__pbssCOMRAM
   170  001790  0E1D               	movlw	29
   171  001792                     clear_1:
   172  001792  6AEE               	clrf	postinc0,c
   173  001794  06E8               	decf	wreg,f,c
   174  001796  E1FD               	bnz	clear_1
   175  001798                     end_of_initialization:
   176                           	opt stack 0
   177  001798                     __end_of__initialization:
   178                           	opt stack 0
   179  001798  9040               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   180  00179A  9240               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   181  00179C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   182  00179E  6EF8               	movwf	tblptru,c
   183  0017A0  0100               	movlb	0
   184  0017A2  EF2A  F00B         	goto	_main	;jump to C main() function
   185                           tblptru	equ	0xFF8
   186                           tblptrh	equ	0xFF7
   187                           tblptrl	equ	0xFF6
   188                           tablat	equ	0xFF5
   189                           postinc0	equ	0xFEE
   190                           wreg	equ	0xFE8
   191                           
   192                           	psect	bssCOMRAM
   193  000021                     __pbssCOMRAM:
   194                           	opt stack 0
   195  000021                     _b:
   196                           	opt stack 0
   197  000021                     	ds	3
   198  000024                     _ciclo_util1:
   199                           	opt stack 0
   200  000024                     	ds	3
   201  000027                     _conversion3:
   202                           	opt stack 0
   203  000027                     	ds	3
   204  00002A                     _conversion2:
   205                           	opt stack 0
   206  00002A                     	ds	3
   207  00002D                     _conversion1:
   208                           	opt stack 0
   209  00002D                     	ds	3
   210  000030                     _n:
   211                           	opt stack 0
   212  000030                     	ds	2
   213  000032                     _s:
   214                           	opt stack 0
   215  000032                     	ds	2
   216  000034                     _z:
   217                           	opt stack 0
   218  000034                     	ds	2
   219  000036                     _i:
   220                           	opt stack 0
   221  000036                     	ds	2
   222  000038                     _duty_cicle2:
   223                           	opt stack 0
   224  000038                     	ds	3
   225  00003B                     _duty_cicle1:
   226                           	opt stack 0
   227  00003B                     	ds	3
   228                           tblptru	equ	0xFF8
   229                           tblptrh	equ	0xFF7
   230                           tblptrl	equ	0xFF6
   231                           tablat	equ	0xFF5
   232                           postinc0	equ	0xFEE
   233                           wreg	equ	0xFE8
   234                           
   235                           	psect	dataCOMRAM
   236  00003E                     __pdataCOMRAM:
   237                           	opt stack 0
   238  00003E                     _y:
   239                           	opt stack 0
   240  00003E                     	ds	2
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           postinc0	equ	0xFEE
   246                           wreg	equ	0xFE8
   247                           
   248                           	psect	bssBANK0
   249  000090                     __pbssBANK0:
   250                           	opt stack 0
   251  000090                     _d2:
   252                           	opt stack 0
   253  000090                     	ds	3
   254  000093                     _d1:
   255                           	opt stack 0
   256  000093                     	ds	3
   257  000096                     _ciclo_util2:
   258                           	opt stack 0
   259  000096                     	ds	3
   260  000099                     _a:
   261                           	opt stack 0
   262  000099                     	ds	2
   263  00009B                     _mood:
   264                           	opt stack 0
   265  00009B                     	ds	2
   266  00009D                     _PWM:
   267                           	opt stack 0
   268  00009D                     	ds	2
   269  00009F                     _modo:
   270                           	opt stack 0
   271  00009F                     	ds	2
   272  0000A1                     _x:
   273                           	opt stack 0
   274  0000A1                     	ds	2
   275  0000A3                     _c:
   276                           	opt stack 0
   277  0000A3                     	ds	3
   278                           tblptru	equ	0xFF8
   279                           tblptrh	equ	0xFF7
   280                           tblptrl	equ	0xFF6
   281                           tablat	equ	0xFF5
   282                           postinc0	equ	0xFEE
   283                           wreg	equ	0xFE8
   284                           
   285                           	psect	cstackBANK0
   286  000060                     __pcstackBANK0:
   287                           	opt stack 0
   288  000060                     ?___ftpack:
   289                           	opt stack 0
   290  000060                     ?___fttol:
   291                           	opt stack 0
   292  000060                     ___ftpack@arg:
   293                           	opt stack 0
   294  000060                     ___ftge@ff1:
   295                           	opt stack 0
   296  000060                     ___fttol@f1:
   297                           	opt stack 0
   298                           
   299                           ; 3 bytes @ 0x0
   300  000060                     	ds	3
   301  000063                     ___ftpack@exp:
   302                           	opt stack 0
   303  000063                     ___ftge@ff2:
   304                           	opt stack 0
   305                           
   306                           ; 3 bytes @ 0x3
   307  000063                     	ds	1
   308  000064                     ??___fttol:
   309  000064                     ___ftpack@sign:
   310                           	opt stack 0
   311                           
   312                           ; 1 bytes @ 0x4
   313  000064                     	ds	1
   314  000065                     ??___ftpack:
   315                           
   316                           ; 1 bytes @ 0x5
   317  000065                     	ds	1
   318  000066                     ??___ftge:
   319                           
   320                           ; 1 bytes @ 0x6
   321  000066                     	ds	2
   322  000068                     ?___awtoft:
   323                           	opt stack 0
   324  000068                     ___awtoft@c:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x8
   328  000068                     	ds	1
   329  000069                     ___fttol@sign1:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x9
   333  000069                     	ds	1
   334  00006A                     ___fttol@lval:
   335                           	opt stack 0
   336                           
   337                           ; 4 bytes @ 0xA
   338  00006A                     	ds	1
   339  00006B                     ?___ftmul:
   340                           	opt stack 0
   341  00006B                     ___ftmul@f1:
   342                           	opt stack 0
   343                           
   344                           ; 3 bytes @ 0xB
   345  00006B                     	ds	3
   346  00006E                     ___fttol@exp1:
   347                           	opt stack 0
   348  00006E                     ___ftmul@f2:
   349                           	opt stack 0
   350                           
   351                           ; 3 bytes @ 0xE
   352  00006E                     	ds	3
   353  000071                     ??___ftmul:
   354                           
   355                           ; 1 bytes @ 0x11
   356  000071                     	ds	3
   357  000074                     ___ftmul@exp:
   358                           	opt stack 0
   359                           
   360                           ; 1 bytes @ 0x14
   361  000074                     	ds	1
   362  000075                     ___ftmul@f3_as_product:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x15
   366  000075                     	ds	3
   367  000078                     ___ftmul@cntr:
   368                           	opt stack 0
   369                           
   370                           ; 1 bytes @ 0x18
   371  000078                     	ds	1
   372  000079                     ___ftmul@sign:
   373                           	opt stack 0
   374                           
   375                           ; 1 bytes @ 0x19
   376  000079                     	ds	1
   377  00007A                     ??_adelante:
   378  00007A                     ??_atras:
   379  00007A                     ??_start2:
   380  00007A                     ?___ftadd:
   381                           	opt stack 0
   382  00007A                     ___ftadd@f1:
   383                           	opt stack 0
   384                           
   385                           ; 3 bytes @ 0x1A
   386  00007A                     	ds	2
   387  00007C                     ??_automatico:
   388                           
   389                           ; 1 bytes @ 0x1C
   390  00007C                     	ds	1
   391  00007D                     ___ftadd@f2:
   392                           	opt stack 0
   393                           
   394                           ; 3 bytes @ 0x1D
   395  00007D                     	ds	3
   396  000080                     ??___ftadd:
   397                           
   398                           ; 1 bytes @ 0x20
   399  000080                     	ds	3
   400  000083                     ___ftadd@sign:
   401                           	opt stack 0
   402                           
   403                           ; 1 bytes @ 0x23
   404  000083                     	ds	1
   405  000084                     ___ftadd@exp2:
   406                           	opt stack 0
   407                           
   408                           ; 1 bytes @ 0x24
   409  000084                     	ds	1
   410  000085                     ___ftadd@exp1:
   411                           	opt stack 0
   412                           
   413                           ; 1 bytes @ 0x25
   414  000085                     	ds	1
   415  000086                     ??_start:
   416  000086                     ??_start1:
   417                           
   418                           ; 1 bytes @ 0x26
   419  000086                     	ds	2
   420  000088                     _start$983:
   421                           	opt stack 0
   422  000088                     _start1$985:
   423                           	opt stack 0
   424                           
   425                           ; 3 bytes @ 0x28
   426  000088                     	ds	3
   427  00008B                     _start$984:
   428                           	opt stack 0
   429  00008B                     _start1$986:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x2B
   433  00008B                     	ds	3
   434  00008E                     ??_main:
   435                           
   436                           ; 1 bytes @ 0x2E
   437  00008E                     	ds	2
   438                           tblptru	equ	0xFF8
   439                           tblptrh	equ	0xFF7
   440                           tblptrl	equ	0xFF6
   441                           tablat	equ	0xFF5
   442                           postinc0	equ	0xFEE
   443                           wreg	equ	0xFE8
   444                           
   445                           	psect	cstackCOMRAM
   446  000001                     __pcstackCOMRAM:
   447                           	opt stack 0
   448  000001                     ??_UART_Rx:
   449  000001                     
   450                           ; 1 bytes @ 0x0
   451  000001                     	ds	14
   452  00000F                     ??_sensor:
   453  00000F                     
   454                           ; 1 bytes @ 0xE
   455  00000F                     	ds	17
   456  000020                     ___awtoft@sign:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x1F
   460  000020                     	ds	1
   461  000021                     tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           
   468                           ; 1 bytes @ 0x20
   469 ;;
   470 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   471 ;;
   472 ;; *************** function _main *****************
   473 ;; Defined at:
   474 ;;		line 60 in file "newmain.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       2       0       0       0       0       0       0       0
   491 ;;      Totals:         0       2       0       0       0       0       0       0       0
   492 ;;Total ram usage:        2 bytes
   493 ;; Hardware stack levels required when called:    8
   494 ;; This function calls:
   495 ;;		_automatico
   496 ;;		_manual
   497 ;;		_settings
   498 ;;		_start
   499 ;;		_start1
   500 ;; This function is called by:
   501 ;;		Startup code after reset
   502 ;; This function uses a non-reentrant model
   503 ;;
   504                           
   505                           	psect	text0
   506  001654                     __ptext0:
   507                           	opt stack 0
   508  001654                     _main:
   509                           	opt stack 23
   510                           
   511                           ;newmain.c: 61: settings();
   512                           
   513                           ;incstack = 0
   514  001654  EC88  F00A         	call	_settings	;wreg free
   515                           
   516                           ;newmain.c: 65: switch (mood) {
   517                           
   518                           ;newmain.c: 62: while (1) {
   519  001658  D010               	goto	l3078
   520  00165A                     l177:
   521                           
   522                           ; BSR set to: 0
   523                           ;newmain.c: 67: LATAbits.LA5 = 0;
   524  00165A  9A89               	bcf	3977,5,c	;volatile
   525                           
   526                           ;newmain.c: 68: LATEbits.LATE0 = 1;
   527  00165C  808D               	bsf	3981,0,c	;volatile
   528                           
   529                           ; BSR set to: 0
   530                           ;newmain.c: 69: manual();
   531  00165E  ECE3  F002         	call	_manual	;wreg free
   532                           
   533                           ;newmain.c: 70: break;
   534  001662  D01D               	goto	l3080
   535  001664                     l179:
   536                           
   537                           ; BSR set to: 0
   538                           ;newmain.c: 72: LATAbits.LA5 = 1;
   539  001664  8A89               	bsf	3977,5,c	;volatile
   540                           
   541                           ;newmain.c: 73: LATEbits.LATE0 = 0;
   542  001666  908D               	bcf	3981,0,c	;volatile
   543                           
   544                           ; BSR set to: 0
   545                           ;newmain.c: 74: automatico();
   546  001668  EC5F  F000         	call	_automatico	;wreg free
   547                           
   548                           ;newmain.c: 75: break;
   549  00166C  D018               	goto	l3080
   550  00166E                     l3076:
   551                           
   552                           ;newmain.c: 77: mood = 0;
   553  00166E  0E00               	movlw	0
   554  001670  0100               	movlb	0	; () banked
   555  001672  6F9C               	movwf	(_mood+1)& (0+255),b
   556  001674  0E00               	movlw	0
   557  001676  6F9B               	movwf	_mood& (0+255),b
   558                           
   559                           ;newmain.c: 78: }
   560  001678  D012               	goto	l3080
   561  00167A                     l3078:
   562  00167A  C09B  F08E         	movff	_mood,??_main
   563  00167E  C09C  F08F         	movff	_mood+1,??_main+1
   564                           
   565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   566                           ; Switch size 1, requested type "space"
   567                           ; Number of cases is 1, Range of values is 0 to 0
   568                           ; switch strategies available:
   569                           ; Name         Instructions Cycles
   570                           ; simple_byte            4     3 (average)
   571                           ;	Chosen strategy is simple_byte
   572  001682  0100               	movlb	0	; () banked
   573  001684  518F               	movf	(??_main+1)& (0+255),w,b
   574  001686  0A00               	xorlw	0	; case 0
   575  001688  A4D8               	btfss	status,2,c
   576  00168A  D7F1               	goto	l3076
   577                           
   578                           ; BSR set to: 0
   579                           ; Switch size 1, requested type "space"
   580                           ; Number of cases is 2, Range of values is 1 to 2
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte            7     4 (average)
   584                           ;	Chosen strategy is simple_byte
   585  00168C  0100               	movlb	0	; () banked
   586  00168E  518E               	movf	??_main& (0+255),w,b
   587  001690  0A01               	xorlw	1	; case 1
   588  001692  B4D8               	btfsc	status,2,c
   589  001694  D7E2               	goto	l177
   590  001696  0A03               	xorlw	3	; case 2
   591  001698  B4D8               	btfsc	status,2,c
   592  00169A  D7E4               	goto	l179
   593  00169C  D7E8               	goto	l3076
   594  00169E                     l3080:
   595                           
   596                           ;newmain.c: 83: start();
   597  00169E  EC45  F006         	call	_start	;wreg free
   598                           
   599                           ;newmain.c: 84: start1();
   600  0016A2  EC99  F005         	call	_start1	;wreg free
   601  0016A6  D7E9               	goto	l3078
   602  0016A8                     __end_of_main:
   603                           	opt stack 0
   604                           tblptru	equ	0xFF8
   605                           tblptrh	equ	0xFF7
   606                           tblptrl	equ	0xFF6
   607                           tablat	equ	0xFF5
   608                           postinc0	equ	0xFEE
   609                           wreg	equ	0xFE8
   610                           status	equ	0xFD8
   611                           
   612 ;; *************** function _start1 *****************
   613 ;; Defined at:
   614 ;;		line 157 in file "newmain.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   628 ;;      Params:         0       0       0       0       0       0       0       0       0
   629 ;;      Locals:         0       6       0       0       0       0       0       0       0
   630 ;;      Temps:          0       2       0       0       0       0       0       0       0
   631 ;;      Totals:         0       8       0       0       0       0       0       0       0
   632 ;;Total ram usage:        8 bytes
   633 ;; Hardware stack levels used:    1
   634 ;; Hardware stack levels required when called:    5
   635 ;; This function calls:
   636 ;;		___awtoft
   637 ;;		___ftadd
   638 ;;		___ftmul
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text1
   645  000B32                     __ptext1:
   646                           	opt stack 0
   647  000B32                     _start1:
   648                           	opt stack 25
   649                           
   650                           ;newmain.c: 158: ADCON0bits.GO = 1;
   651                           
   652                           ;incstack = 0
   653  000B32  82C2               	bsf	4034,1,c	;volatile
   654  000B34                     l196:
   655  000B34  B2C2               	btfsc	4034,1,c	;volatile
   656  000B36  D7FE               	goto	l196
   657                           
   658                           ;newmain.c: 160: if (x == 1) {
   659  000B38  0100               	movlb	0	; () banked
   660  000B3A  05A1               	decf	_x& (0+255),w,b
   661  000B3C  0100               	movlb	0	; () banked
   662  000B3E  11A2               	iorwf	(_x+1)& (0+255),w,b
   663  000B40  A4D8               	btfss	status,2,c
   664  000B42  0012               	return	
   665                           
   666                           ; BSR set to: 0
   667                           ;newmain.c: 161: _delay((unsigned long)((10)*(8000000/4000.0)));
   668  000B44  0E1A               	movlw	26
   669  000B46  0100               	movlb	0	; () banked
   670  000B48  6F86               	movwf	??_start1& (0+255),b
   671  000B4A  0EF8               	movlw	248
   672  000B4C                     u2937:
   673  000B4C  2EE8               	decfsz	wreg,f,c
   674  000B4E  D7FE               	bra	u2937
   675  000B50  2F86               	decfsz	??_start1& (0+255),f,b
   676  000B52  D7FC               	bra	u2937
   677  000B54  F000               	nop	
   678                           
   679                           ;newmain.c: 162: a = ADRESH << 8 | ADRESL;
   680  000B56  50C3               	movf	4035,w,c	;volatile
   681  000B58  CFC4 F086          	movff	4036,??_start1	;volatile
   682  000B5C  0100               	movlb	0	; () banked
   683  000B5E  6B87               	clrf	(??_start1+1)& (0+255),b
   684  000B60  C086  F087         	movff	??_start1,??_start1+1
   685  000B64  0100               	movlb	0	; () banked
   686  000B66  6B86               	clrf	??_start1& (0+255),b
   687  000B68  0100               	movlb	0	; () banked
   688  000B6A  1186               	iorwf	??_start1& (0+255),w,b
   689  000B6C  0100               	movlb	0	; () banked
   690  000B6E  6F99               	movwf	_a& (0+255),b
   691  000B70  0100               	movlb	0	; () banked
   692  000B72  5187               	movf	(??_start1+1)& (0+255),w,b
   693  000B74  0100               	movlb	0	; () banked
   694  000B76  6F9A               	movwf	(_a+1)& (0+255),b
   695                           
   696                           ; BSR set to: 0
   697                           ;newmain.c: 163: c = (float) a * (5.0 / 1023.0);
   698  000B78  C099  F068         	movff	_a,___awtoft@c
   699  000B7C  C09A  F069         	movff	_a+1,___awtoft@c+1
   700  000B80  EC94  F00B         	call	___awtoft	;wreg free
   701  000B84  C068  F06B         	movff	?___awtoft,___ftmul@f1
   702  000B88  C069  F06C         	movff	?___awtoft+1,___ftmul@f1+1
   703  000B8C  C06A  F06D         	movff	?___awtoft+2,___ftmul@f1+2
   704  000B90  0E28               	movlw	40
   705  000B92  0100               	movlb	0	; () banked
   706  000B94  6F6E               	movwf	___ftmul@f2& (0+255),b
   707  000B96  0EA0               	movlw	160
   708  000B98  0100               	movlb	0	; () banked
   709  000B9A  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   710  000B9C  0E3B               	movlw	59
   711  000B9E  0100               	movlb	0	; () banked
   712  000BA0  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   713  000BA2  ECEA  F004         	call	___ftmul	;wreg free
   714  000BA6  C06B  F0A3         	movff	?___ftmul,_c
   715  000BAA  C06C  F0A4         	movff	?___ftmul+1,_c+1
   716  000BAE  C06D  F0A5         	movff	?___ftmul+2,_c+2
   717                           
   718                           ;newmain.c: 164: d2 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   719  000BB2  C0A3  F06E         	movff	_c,___ftmul@f2
   720  000BB6  C0A4  F06F         	movff	_c+1,___ftmul@f2+1
   721  000BBA  C0A5  F070         	movff	_c+2,___ftmul@f2+2
   722  000BBE  C0A3  F06B         	movff	_c,___ftmul@f1
   723  000BC2  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   724  000BC6  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   725  000BCA  ECEA  F004         	call	___ftmul	;wreg free
   726  000BCE  C06B  F088         	movff	?___ftmul,_start1$985
   727  000BD2  C06C  F089         	movff	?___ftmul+1,_start1$985+1
   728  000BD6  C06D  F08A         	movff	?___ftmul+2,_start1$985+2
   729                           
   730                           ;newmain.c: 164: d2 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   731  000BDA  0E1D               	movlw	29
   732  000BDC  0100               	movlb	0	; () banked
   733  000BDE  6F6E               	movwf	___ftmul@f2& (0+255),b
   734  000BE0  0E1A               	movlw	26
   735  000BE2  0100               	movlb	0	; () banked
   736  000BE4  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   737  000BE6  0E3F               	movlw	63
   738  000BE8  0100               	movlb	0	; () banked
   739  000BEA  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   740  000BEC  C0A3  F06B         	movff	_c,___ftmul@f1
   741  000BF0  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   742  000BF4  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   743  000BF8  ECEA  F004         	call	___ftmul	;wreg free
   744  000BFC  C06B  F07D         	movff	?___ftmul,___ftadd@f2
   745  000C00  C06C  F07E         	movff	?___ftmul+1,___ftadd@f2+1
   746  000C04  C06D  F07F         	movff	?___ftmul+2,___ftadd@f2+2
   747  000C08  0E6F               	movlw	111
   748  000C0A  0100               	movlb	0	; () banked
   749  000C0C  6F6E               	movwf	___ftmul@f2& (0+255),b
   750  000C0E  0E92               	movlw	146
   751  000C10  0100               	movlb	0	; () banked
   752  000C12  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   753  000C14  0E3E               	movlw	62
   754  000C16  0100               	movlb	0	; () banked
   755  000C18  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   756  000C1A  C088  F06B         	movff	_start1$985,___ftmul@f1
   757  000C1E  C089  F06C         	movff	_start1$985+1,___ftmul@f1+1
   758  000C22  C08A  F06D         	movff	_start1$985+2,___ftmul@f1+2
   759  000C26  ECEA  F004         	call	___ftmul	;wreg free
   760  000C2A  C06B  F07A         	movff	?___ftmul,___ftadd@f1
   761  000C2E  C06C  F07B         	movff	?___ftmul+1,___ftadd@f1+1
   762  000C32  C06D  F07C         	movff	?___ftmul+2,___ftadd@f1+2
   763  000C36  ECAF  F001         	call	___ftadd	;wreg free
   764  000C3A  C07A  F08B         	movff	?___ftadd,_start1$986
   765  000C3E  C07B  F08C         	movff	?___ftadd+1,_start1$986+1
   766  000C42  C07C  F08D         	movff	?___ftadd+2,_start1$986+2
   767                           
   768                           ;newmain.c: 164: d2 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   769  000C46  C08B  F07A         	movff	_start1$986,___ftadd@f1
   770  000C4A  C08C  F07B         	movff	_start1$986+1,___ftadd@f1+1
   771  000C4E  C08D  F07C         	movff	_start1$986+2,___ftadd@f1+2
   772  000C52  0EE5               	movlw	229
   773  000C54  0100               	movlb	0	; () banked
   774  000C56  6F7D               	movwf	___ftadd@f2& (0+255),b
   775  000C58  0E10               	movlw	16
   776  000C5A  0100               	movlb	0	; () banked
   777  000C5C  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
   778  000C5E  0EBE               	movlw	190
   779  000C60  0100               	movlb	0	; () banked
   780  000C62  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
   781  000C64  ECAF  F001         	call	___ftadd	;wreg free
   782  000C68  C07A  F090         	movff	?___ftadd,_d2
   783  000C6C  C07B  F091         	movff	?___ftadd+1,_d2+1
   784  000C70  C07C  F092         	movff	?___ftadd+2,_d2+2
   785                           
   786                           ;newmain.c: 165: _delay((unsigned long)((3)*(8000000/4000000.0)));
   787  000C74  D000               	nop2		;2 cycle nop
   788  000C76  D000               	nop2		;2 cycle nop
   789  000C78  D000               	nop2		;2 cycle nop
   790                           
   791                           ;newmain.c: 166: ADCON0 = 0x09;
   792  000C7A  0E09               	movlw	9
   793  000C7C  6EC2               	movwf	4034,c	;volatile
   794                           
   795                           ;newmain.c: 167: x = 2;
   796  000C7E  0E00               	movlw	0
   797  000C80  0100               	movlb	0	; () banked
   798  000C82  6FA2               	movwf	(_x+1)& (0+255),b
   799  000C84  0E02               	movlw	2
   800  000C86  6FA1               	movwf	_x& (0+255),b
   801  000C88  0012               	return	
   802  000C8A                     __end_of_start1:
   803                           	opt stack 0
   804                           tblptru	equ	0xFF8
   805                           tblptrh	equ	0xFF7
   806                           tblptrl	equ	0xFF6
   807                           tablat	equ	0xFF5
   808                           postinc0	equ	0xFEE
   809                           wreg	equ	0xFE8
   810                           status	equ	0xFD8
   811                           
   812 ;; *************** function _start *****************
   813 ;; Defined at:
   814 ;;		line 143 in file "newmain.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;		None
   819 ;; Return value:  Size  Location     Type
   820 ;;                  1    wreg      void 
   821 ;; Registers used:
   822 ;;		wreg, status,2, status,0, cstack
   823 ;; Tracked objects:
   824 ;;		On entry : 0/0
   825 ;;		On exit  : 0/0
   826 ;;		Unchanged: 0/0
   827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   828 ;;      Params:         0       0       0       0       0       0       0       0       0
   829 ;;      Locals:         0       6       0       0       0       0       0       0       0
   830 ;;      Temps:          0       2       0       0       0       0       0       0       0
   831 ;;      Totals:         0       8       0       0       0       0       0       0       0
   832 ;;Total ram usage:        8 bytes
   833 ;; Hardware stack levels used:    1
   834 ;; Hardware stack levels required when called:    5
   835 ;; This function calls:
   836 ;;		___awtoft
   837 ;;		___ftadd
   838 ;;		___ftmul
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text2
   845  000C8A                     __ptext2:
   846                           	opt stack 0
   847  000C8A                     _start:
   848                           	opt stack 25
   849                           
   850                           ;newmain.c: 144: ADCON0bits.GO = 1;
   851                           
   852                           ; BSR set to: 0
   853                           ;incstack = 0
   854  000C8A  82C2               	bsf	4034,1,c	;volatile
   855  000C8C                     l189:
   856  000C8C  B2C2               	btfsc	4034,1,c	;volatile
   857  000C8E  D7FE               	goto	l189
   858                           
   859                           ;newmain.c: 146: if (x == 0) {
   860  000C90  0100               	movlb	0	; () banked
   861  000C92  51A1               	movf	_x& (0+255),w,b
   862  000C94  0100               	movlb	0	; () banked
   863  000C96  11A2               	iorwf	(_x+1)& (0+255),w,b
   864  000C98  A4D8               	btfss	status,2,c
   865  000C9A  0012               	return	
   866                           
   867                           ; BSR set to: 0
   868                           ;newmain.c: 147: _delay((unsigned long)((10)*(8000000/4000.0)));
   869  000C9C  0E1A               	movlw	26
   870  000C9E  0100               	movlb	0	; () banked
   871  000CA0  6F86               	movwf	??_start& (0+255),b
   872  000CA2  0EF8               	movlw	248
   873  000CA4                     u2947:
   874  000CA4  2EE8               	decfsz	wreg,f,c
   875  000CA6  D7FE               	bra	u2947
   876  000CA8  2F86               	decfsz	??_start& (0+255),f,b
   877  000CAA  D7FC               	bra	u2947
   878  000CAC  F000               	nop	
   879                           
   880                           ;newmain.c: 148: a = ADRESH << 8 | ADRESL;
   881  000CAE  50C3               	movf	4035,w,c	;volatile
   882  000CB0  CFC4 F086          	movff	4036,??_start	;volatile
   883  000CB4  0100               	movlb	0	; () banked
   884  000CB6  6B87               	clrf	(??_start+1)& (0+255),b
   885  000CB8  C086  F087         	movff	??_start,??_start+1
   886  000CBC  0100               	movlb	0	; () banked
   887  000CBE  6B86               	clrf	??_start& (0+255),b
   888  000CC0  0100               	movlb	0	; () banked
   889  000CC2  1186               	iorwf	??_start& (0+255),w,b
   890  000CC4  0100               	movlb	0	; () banked
   891  000CC6  6F99               	movwf	_a& (0+255),b
   892  000CC8  0100               	movlb	0	; () banked
   893  000CCA  5187               	movf	(??_start+1)& (0+255),w,b
   894  000CCC  0100               	movlb	0	; () banked
   895  000CCE  6F9A               	movwf	(_a+1)& (0+255),b
   896                           
   897                           ; BSR set to: 0
   898                           ;newmain.c: 149: c = (float) a * (5.0 / 1023.0);
   899  000CD0  C099  F068         	movff	_a,___awtoft@c
   900  000CD4  C09A  F069         	movff	_a+1,___awtoft@c+1
   901  000CD8  EC94  F00B         	call	___awtoft	;wreg free
   902  000CDC  C068  F06B         	movff	?___awtoft,___ftmul@f1
   903  000CE0  C069  F06C         	movff	?___awtoft+1,___ftmul@f1+1
   904  000CE4  C06A  F06D         	movff	?___awtoft+2,___ftmul@f1+2
   905  000CE8  0E28               	movlw	40
   906  000CEA  0100               	movlb	0	; () banked
   907  000CEC  6F6E               	movwf	___ftmul@f2& (0+255),b
   908  000CEE  0EA0               	movlw	160
   909  000CF0  0100               	movlb	0	; () banked
   910  000CF2  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   911  000CF4  0E3B               	movlw	59
   912  000CF6  0100               	movlb	0	; () banked
   913  000CF8  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   914  000CFA  ECEA  F004         	call	___ftmul	;wreg free
   915  000CFE  C06B  F0A3         	movff	?___ftmul,_c
   916  000D02  C06C  F0A4         	movff	?___ftmul+1,_c+1
   917  000D06  C06D  F0A5         	movff	?___ftmul+2,_c+2
   918                           
   919                           ;newmain.c: 150: d1 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   920  000D0A  C0A3  F06E         	movff	_c,___ftmul@f2
   921  000D0E  C0A4  F06F         	movff	_c+1,___ftmul@f2+1
   922  000D12  C0A5  F070         	movff	_c+2,___ftmul@f2+2
   923  000D16  C0A3  F06B         	movff	_c,___ftmul@f1
   924  000D1A  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   925  000D1E  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   926  000D22  ECEA  F004         	call	___ftmul	;wreg free
   927  000D26  C06B  F088         	movff	?___ftmul,_start$983
   928  000D2A  C06C  F089         	movff	?___ftmul+1,_start$983+1
   929  000D2E  C06D  F08A         	movff	?___ftmul+2,_start$983+2
   930                           
   931                           ;newmain.c: 150: d1 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   932  000D32  0E1D               	movlw	29
   933  000D34  0100               	movlb	0	; () banked
   934  000D36  6F6E               	movwf	___ftmul@f2& (0+255),b
   935  000D38  0E1A               	movlw	26
   936  000D3A  0100               	movlb	0	; () banked
   937  000D3C  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   938  000D3E  0E3F               	movlw	63
   939  000D40  0100               	movlb	0	; () banked
   940  000D42  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   941  000D44  C0A3  F06B         	movff	_c,___ftmul@f1
   942  000D48  C0A4  F06C         	movff	_c+1,___ftmul@f1+1
   943  000D4C  C0A5  F06D         	movff	_c+2,___ftmul@f1+2
   944  000D50  ECEA  F004         	call	___ftmul	;wreg free
   945  000D54  C06B  F07D         	movff	?___ftmul,___ftadd@f2
   946  000D58  C06C  F07E         	movff	?___ftmul+1,___ftadd@f2+1
   947  000D5C  C06D  F07F         	movff	?___ftmul+2,___ftadd@f2+2
   948  000D60  0E6F               	movlw	111
   949  000D62  0100               	movlb	0	; () banked
   950  000D64  6F6E               	movwf	___ftmul@f2& (0+255),b
   951  000D66  0E92               	movlw	146
   952  000D68  0100               	movlb	0	; () banked
   953  000D6A  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
   954  000D6C  0E3E               	movlw	62
   955  000D6E  0100               	movlb	0	; () banked
   956  000D70  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
   957  000D72  C088  F06B         	movff	_start$983,___ftmul@f1
   958  000D76  C089  F06C         	movff	_start$983+1,___ftmul@f1+1
   959  000D7A  C08A  F06D         	movff	_start$983+2,___ftmul@f1+2
   960  000D7E  ECEA  F004         	call	___ftmul	;wreg free
   961  000D82  C06B  F07A         	movff	?___ftmul,___ftadd@f1
   962  000D86  C06C  F07B         	movff	?___ftmul+1,___ftadd@f1+1
   963  000D8A  C06D  F07C         	movff	?___ftmul+2,___ftadd@f1+2
   964  000D8E  ECAF  F001         	call	___ftadd	;wreg free
   965  000D92  C07A  F08B         	movff	?___ftadd,_start$984
   966  000D96  C07B  F08C         	movff	?___ftadd+1,_start$984+1
   967  000D9A  C07C  F08D         	movff	?___ftadd+2,_start$984+2
   968                           
   969                           ;newmain.c: 150: d1 = ((0.286 * (c * c))+(0.602 * c)-(0.1415));
   970  000D9E  C08B  F07A         	movff	_start$984,___ftadd@f1
   971  000DA2  C08C  F07B         	movff	_start$984+1,___ftadd@f1+1
   972  000DA6  C08D  F07C         	movff	_start$984+2,___ftadd@f1+2
   973  000DAA  0EE5               	movlw	229
   974  000DAC  0100               	movlb	0	; () banked
   975  000DAE  6F7D               	movwf	___ftadd@f2& (0+255),b
   976  000DB0  0E10               	movlw	16
   977  000DB2  0100               	movlb	0	; () banked
   978  000DB4  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
   979  000DB6  0EBE               	movlw	190
   980  000DB8  0100               	movlb	0	; () banked
   981  000DBA  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
   982  000DBC  ECAF  F001         	call	___ftadd	;wreg free
   983  000DC0  C07A  F093         	movff	?___ftadd,_d1
   984  000DC4  C07B  F094         	movff	?___ftadd+1,_d1+1
   985  000DC8  C07C  F095         	movff	?___ftadd+2,_d1+2
   986                           
   987                           ;newmain.c: 151: _delay((unsigned long)((3)*(8000000/4000000.0)));
   988  000DCC  D000               	nop2		;2 cycle nop
   989  000DCE  D000               	nop2		;2 cycle nop
   990  000DD0  D000               	nop2		;2 cycle nop
   991                           
   992                           ;newmain.c: 152: ADCON0 = 0x05;
   993  000DD2  0E05               	movlw	5
   994  000DD4  6EC2               	movwf	4034,c	;volatile
   995                           
   996                           ;newmain.c: 153: x = 1;
   997  000DD6  0E00               	movlw	0
   998  000DD8  0100               	movlb	0	; () banked
   999  000DDA  6FA2               	movwf	(_x+1)& (0+255),b
  1000  000DDC  0E01               	movlw	1
  1001  000DDE  6FA1               	movwf	_x& (0+255),b
  1002  000DE0  0012               	return	
  1003  000DE2                     __end_of_start:
  1004                           	opt stack 0
  1005                           tblptru	equ	0xFF8
  1006                           tblptrh	equ	0xFF7
  1007                           tblptrl	equ	0xFF6
  1008                           tablat	equ	0xFF5
  1009                           postinc0	equ	0xFEE
  1010                           wreg	equ	0xFE8
  1011                           status	equ	0xFD8
  1012                           
  1013 ;; *************** function _settings *****************
  1014 ;; Defined at:
  1015 ;;		line 88 in file "newmain.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;		None
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;		None
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, status,2
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1029 ;;      Params:         0       0       0       0       0       0       0       0       0
  1030 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1031 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1032 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1033 ;;Total ram usage:        0 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    3
  1036 ;; This function calls:
  1037 ;;		Nothing
  1038 ;; This function is called by:
  1039 ;;		_main
  1040 ;; This function uses a non-reentrant model
  1041 ;;
  1042                           
  1043                           	psect	text3
  1044  001510                     __ptext3:
  1045                           	opt stack 0
  1046  001510                     _settings:
  1047                           	opt stack 27
  1048                           
  1049                           ;newmain.c: 89: OSCCON = 0x72;
  1050                           
  1051                           ; BSR set to: 0
  1052                           ;incstack = 0
  1053  001510  0E72               	movlw	114
  1054  001512  6ED3               	movwf	4051,c	;volatile
  1055                           
  1056                           ;newmain.c: 91: ADCON0 = 0x01;
  1057  001514  0E01               	movlw	1
  1058  001516  6EC2               	movwf	4034,c	;volatile
  1059                           
  1060                           ;newmain.c: 92: ADCON1 = 0x0C;
  1061  001518  0E0C               	movlw	12
  1062  00151A  6EC1               	movwf	4033,c	;volatile
  1063                           
  1064                           ;newmain.c: 93: ADCON2 = 0x91;
  1065  00151C  0E91               	movlw	145
  1066  00151E  6EC0               	movwf	4032,c	;volatile
  1067                           
  1068                           ;newmain.c: 95: TRISB = 0xF0;
  1069  001520  0EF0               	movlw	240
  1070  001522  6E93               	movwf	3987,c	;volatile
  1071                           
  1072                           ;newmain.c: 96: LATB = 0xF0;
  1073  001524  0EF0               	movlw	240
  1074  001526  6E8A               	movwf	3978,c	;volatile
  1075                           
  1076                           ;newmain.c: 97: TRISA = 0x0F;
  1077  001528  0E0F               	movlw	15
  1078  00152A  6E92               	movwf	3986,c	;volatile
  1079                           
  1080                           ;newmain.c: 98: LATA = 0x0F;
  1081  00152C  0E0F               	movlw	15
  1082  00152E  6E89               	movwf	3977,c	;volatile
  1083                           
  1084                           ;newmain.c: 99: TRISE = 0;
  1085  001530  0E00               	movlw	0
  1086  001532  6E96               	movwf	3990,c	;volatile
  1087                           
  1088                           ;newmain.c: 100: LATE = 0;
  1089  001534  0E00               	movlw	0
  1090  001536  6E8D               	movwf	3981,c	;volatile
  1091                           
  1092                           ;newmain.c: 103: PR2 = 0x7C;
  1093  001538  0E7C               	movlw	124
  1094  00153A  6ECB               	movwf	4043,c	;volatile
  1095                           
  1096                           ;newmain.c: 104: T2CON = 0x03;
  1097  00153C  0E03               	movlw	3
  1098  00153E  6ECA               	movwf	4042,c	;volatile
  1099                           
  1100                           ;newmain.c: 105: TRISC = 0;
  1101  001540  0E00               	movlw	0
  1102  001542  6E94               	movwf	3988,c	;volatile
  1103                           
  1104                           ;newmain.c: 106: LATC = 0;
  1105  001544  0E00               	movlw	0
  1106  001546  6E8B               	movwf	3979,c	;volatile
  1107                           
  1108                           ;newmain.c: 107: CCPR1L = 0x7D;
  1109  001548  0E7D               	movlw	125
  1110  00154A  6EBE               	movwf	4030,c	;volatile
  1111                           
  1112                           ;newmain.c: 108: CCP1CON = 0x0C;
  1113  00154C  0E0C               	movlw	12
  1114  00154E  6EBD               	movwf	4029,c	;volatile
  1115                           
  1116                           ;newmain.c: 109: CCPR2L = 0x7D;
  1117  001550  0E7D               	movlw	125
  1118  001552  6EBB               	movwf	4027,c	;volatile
  1119                           
  1120                           ;newmain.c: 110: CCP2CON = 0x0C;
  1121  001554  0E0C               	movlw	12
  1122  001556  6EBA               	movwf	4026,c	;volatile
  1123                           
  1124                           ;newmain.c: 113: TRISCbits.RC7 = 1;
  1125  001558  8E94               	bsf	3988,7,c	;volatile
  1126                           
  1127                           ;newmain.c: 114: TRISCbits.RC6 = 0;
  1128  00155A  9C94               	bcf	3988,6,c	;volatile
  1129                           
  1130                           ;newmain.c: 115: SPBRG = 0x0C;
  1131  00155C  0E0C               	movlw	12
  1132  00155E  6EAF               	movwf	4015,c	;volatile
  1133                           
  1134                           ;newmain.c: 116: RCSTA = 0x90;
  1135  001560  0E90               	movlw	144
  1136  001562  6EAB               	movwf	4011,c	;volatile
  1137                           
  1138                           ;newmain.c: 117: TXSTA = 0x20;
  1139  001564  0E20               	movlw	32
  1140  001566  6EAC               	movwf	4012,c	;volatile
  1141                           
  1142                           ;newmain.c: 120: GIE = 1;
  1143  001568  8EF2               	bsf	intcon,7,c	;volatile
  1144                           
  1145                           ;newmain.c: 121: PEIE = 1;
  1146  00156A  8CF2               	bsf	intcon,6,c	;volatile
  1147                           
  1148                           ;newmain.c: 122: RCIE = 1;
  1149  00156C  8A9D               	bsf	3997,5,c	;volatile
  1150                           
  1151                           ;newmain.c: 123: RCIF = 0;
  1152  00156E  9A9E               	bcf	3998,5,c	;volatile
  1153                           
  1154                           ;newmain.c: 124: RCIP = 1;
  1155  001570  8A9F               	bsf	3999,5,c	;volatile
  1156                           
  1157                           ;newmain.c: 126: INT1IE = 1;
  1158  001572  86F0               	bsf	intcon3,3,c	;volatile
  1159                           
  1160                           ;newmain.c: 127: INT1IF = 0;
  1161  001574  90F0               	bcf	intcon3,0,c	;volatile
  1162                           
  1163                           ;newmain.c: 128: INTEDG1 = 1;
  1164  001576  8AF1               	bsf	intcon2,5,c	;volatile
  1165                           
  1166                           ;newmain.c: 129: INT1IP = 0;
  1167  001578  9CF0               	bcf	intcon3,6,c	;volatile
  1168                           
  1169                           ;newmain.c: 131: INT2IE = 1;
  1170  00157A  88F0               	bsf	intcon3,4,c	;volatile
  1171                           
  1172                           ;newmain.c: 132: INT2IF = 0;
  1173  00157C  92F0               	bcf	intcon3,1,c	;volatile
  1174                           
  1175                           ;newmain.c: 133: INTEDG2 = 1;
  1176  00157E  88F1               	bsf	intcon2,4,c	;volatile
  1177                           
  1178                           ;newmain.c: 134: INT2IP = 0;
  1179  001580  9EF0               	bcf	intcon3,7,c	;volatile
  1180                           
  1181                           ;newmain.c: 137: ADCON0bits.GO = 1;
  1182  001582  82C2               	bsf	4034,1,c	;volatile
  1183                           
  1184                           ;newmain.c: 139: TMR2 = 0;
  1185  001584  0E00               	movlw	0
  1186  001586  6ECC               	movwf	4044,c	;volatile
  1187                           
  1188                           ;newmain.c: 140: T2CONbits.TMR2ON = 1;
  1189  001588  84CA               	bsf	4042,2,c	;volatile
  1190  00158A  0012               	return		;funcret
  1191  00158C                     __end_of_settings:
  1192                           	opt stack 0
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           intcon	equ	0xFF2
  1198                           intcon2	equ	0xFF1
  1199                           intcon3	equ	0xFF0
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           status	equ	0xFD8
  1203                           
  1204 ;; *************** function _manual *****************
  1205 ;; Defined at:
  1206 ;;		line 276 in file "newmain.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;		None
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;		None
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0
  1221 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        0 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    7
  1227 ;; This function calls:
  1228 ;;		_adelante
  1229 ;;		_atras
  1230 ;;		_derecha
  1231 ;;		_freno
  1232 ;;		_izquierda
  1233 ;;		_pwmA1
  1234 ;;		_pwmA2
  1235 ;;		_pwmB1
  1236 ;;		_pwmB2
  1237 ;;		_sensorOFF
  1238 ;; This function is called by:
  1239 ;;		_main
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text4
  1244  0005C6                     __ptext4:
  1245                           	opt stack 0
  1246  0005C6                     _manual:
  1247                           	opt stack 23
  1248                           
  1249                           ;newmain.c: 277: if (PORTBbits.RB4 == 1) {
  1250                           
  1251                           ;incstack = 0
  1252  0005C6  A881               	btfss	3969,4,c	;volatile
  1253  0005C8  D119               	goto	l2942
  1254                           
  1255                           ;newmain.c: 278: LATAbits.LA4 = 0;
  1256  0005CA  9889               	bcf	3977,4,c	;volatile
  1257                           
  1258                           ;newmain.c: 279: if (modo == 0) {
  1259  0005CC  0100               	movlb	0	; () banked
  1260  0005CE  519F               	movf	_modo& (0+255),w,b
  1261  0005D0  0100               	movlb	0	; () banked
  1262  0005D2  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1263  0005D4  A4D8               	btfss	status,2,c
  1264  0005D6  D003               	goto	l2830
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;newmain.c: 280: freno();
  1268  0005D8  EC10  F00C         	call	_freno	;wreg free
  1269                           
  1270                           ;newmain.c: 281: } else if (modo == 1) {
  1271  0005DC  0012               	return	
  1272  0005DE                     l2830:
  1273  0005DE  0100               	movlb	0	; () banked
  1274  0005E0  059F               	decf	_modo& (0+255),w,b
  1275  0005E2  0100               	movlb	0	; () banked
  1276  0005E4  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1277  0005E6  A4D8               	btfss	status,2,c
  1278  0005E8  D03D               	goto	l2858
  1279                           
  1280                           ; BSR set to: 0
  1281                           ;newmain.c: 282: adelante();
  1282  0005EA  ECE8  F00B         	call	_adelante	;wreg free
  1283                           
  1284                           ;newmain.c: 283: if (PWM == 1) {
  1285  0005EE  0100               	movlb	0	; () banked
  1286  0005F0  059D               	decf	_PWM& (0+255),w,b
  1287  0005F2  0100               	movlb	0	; () banked
  1288  0005F4  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1289  0005F6  A4D8               	btfss	status,2,c
  1290  0005F8  D008               	goto	l2840
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;newmain.c: 284: pwmA1();
  1294  0005FA  ECF8  F00A         	call	_pwmA1	;wreg free
  1295                           
  1296                           ;newmain.c: 285: PWM = 0;
  1297  0005FE  0E00               	movlw	0
  1298  000600  0100               	movlb	0	; () banked
  1299  000602  6F9E               	movwf	(_PWM+1)& (0+255),b
  1300  000604  0E00               	movlw	0
  1301  000606  6F9D               	movwf	_PWM& (0+255),b
  1302                           
  1303                           ;newmain.c: 286: } else if (PWM == 2) {
  1304  000608  0012               	return	
  1305  00060A                     l2840:
  1306                           
  1307                           ; BSR set to: 0
  1308  00060A  0E02               	movlw	2
  1309  00060C  0100               	movlb	0	; () banked
  1310  00060E  199D               	xorwf	_PWM& (0+255),w,b
  1311  000610  0100               	movlb	0	; () banked
  1312  000612  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1313  000614  A4D8               	btfss	status,2,c
  1314  000616  D008               	goto	l2846
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;newmain.c: 287: pwmA2();
  1318  000618  EC74  F00B         	call	_pwmA2	;wreg free
  1319                           
  1320                           ;newmain.c: 288: PWM = 0;
  1321  00061C  0E00               	movlw	0
  1322  00061E  0100               	movlb	0	; () banked
  1323  000620  6F9E               	movwf	(_PWM+1)& (0+255),b
  1324  000622  0E00               	movlw	0
  1325  000624  6F9D               	movwf	_PWM& (0+255),b
  1326                           
  1327                           ;newmain.c: 289: } else if (PWM == 3) {
  1328  000626  0012               	return	
  1329  000628                     l2846:
  1330                           
  1331                           ; BSR set to: 0
  1332  000628  0E03               	movlw	3
  1333  00062A  0100               	movlb	0	; () banked
  1334  00062C  199D               	xorwf	_PWM& (0+255),w,b
  1335  00062E  0100               	movlb	0	; () banked
  1336  000630  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1337  000632  A4D8               	btfss	status,2,c
  1338  000634  D008               	goto	l2852
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;newmain.c: 290: pwmB1();
  1342  000636  ECC6  F00A         	call	_pwmB1	;wreg free
  1343                           
  1344                           ;newmain.c: 291: PWM = 0;
  1345  00063A  0E00               	movlw	0
  1346  00063C  0100               	movlb	0	; () banked
  1347  00063E  6F9E               	movwf	(_PWM+1)& (0+255),b
  1348  000640  0E00               	movlw	0
  1349  000642  6F9D               	movwf	_PWM& (0+255),b
  1350                           
  1351                           ;newmain.c: 292: } else if (PWM == 4) {
  1352  000644  0012               	return	
  1353  000646                     l2852:
  1354                           
  1355                           ; BSR set to: 0
  1356  000646  0E04               	movlw	4
  1357  000648  0100               	movlb	0	; () banked
  1358  00064A  199D               	xorwf	_PWM& (0+255),w,b
  1359  00064C  0100               	movlb	0	; () banked
  1360  00064E  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1361  000650  A4D8               	btfss	status,2,c
  1362  000652  0012               	return	
  1363                           
  1364                           ; BSR set to: 0
  1365                           ;newmain.c: 293: pwmB2();
  1366  000654  EC54  F00B         	call	_pwmB2	;wreg free
  1367                           
  1368                           ;newmain.c: 294: PWM = 0;
  1369  000658  0E00               	movlw	0
  1370  00065A  0100               	movlb	0	; () banked
  1371  00065C  6F9E               	movwf	(_PWM+1)& (0+255),b
  1372  00065E  0E00               	movlw	0
  1373  000660  6F9D               	movwf	_PWM& (0+255),b
  1374                           
  1375                           ; BSR set to: 0
  1376                           ;newmain.c: 295: }
  1377                           ;newmain.c: 296: } else if (modo == 2) {
  1378                           
  1379                           ; BSR set to: 0
  1380                           
  1381                           ; BSR set to: 0
  1382                           
  1383                           ; BSR set to: 0
  1384  000662  0012               	return	
  1385  000664                     l2858:
  1386                           
  1387                           ; BSR set to: 0
  1388  000664  0E02               	movlw	2
  1389  000666  0100               	movlb	0	; () banked
  1390  000668  199F               	xorwf	_modo& (0+255),w,b
  1391  00066A  0100               	movlb	0	; () banked
  1392  00066C  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1393  00066E  A4D8               	btfss	status,2,c
  1394  000670  D03D               	goto	l2886
  1395                           
  1396                           ; BSR set to: 0
  1397                           ;newmain.c: 297: atras();
  1398  000672  ECD3  F00B         	call	_atras	;wreg free
  1399                           
  1400                           ;newmain.c: 298: if (PWM == 1) {
  1401  000676  0100               	movlb	0	; () banked
  1402  000678  059D               	decf	_PWM& (0+255),w,b
  1403  00067A  0100               	movlb	0	; () banked
  1404  00067C  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1405  00067E  A4D8               	btfss	status,2,c
  1406  000680  D008               	goto	l2868
  1407                           
  1408                           ; BSR set to: 0
  1409                           ;newmain.c: 299: pwmA1();
  1410  000682  ECF8  F00A         	call	_pwmA1	;wreg free
  1411                           
  1412                           ;newmain.c: 300: PWM = 0;
  1413  000686  0E00               	movlw	0
  1414  000688  0100               	movlb	0	; () banked
  1415  00068A  6F9E               	movwf	(_PWM+1)& (0+255),b
  1416  00068C  0E00               	movlw	0
  1417  00068E  6F9D               	movwf	_PWM& (0+255),b
  1418                           
  1419                           ;newmain.c: 301: } else if (PWM == 2) {
  1420  000690  0012               	return	
  1421  000692                     l2868:
  1422                           
  1423                           ; BSR set to: 0
  1424  000692  0E02               	movlw	2
  1425  000694  0100               	movlb	0	; () banked
  1426  000696  199D               	xorwf	_PWM& (0+255),w,b
  1427  000698  0100               	movlb	0	; () banked
  1428  00069A  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1429  00069C  A4D8               	btfss	status,2,c
  1430  00069E  D008               	goto	l2874
  1431                           
  1432                           ; BSR set to: 0
  1433                           ;newmain.c: 302: pwmA2();
  1434  0006A0  EC74  F00B         	call	_pwmA2	;wreg free
  1435                           
  1436                           ;newmain.c: 303: PWM = 0;
  1437  0006A4  0E00               	movlw	0
  1438  0006A6  0100               	movlb	0	; () banked
  1439  0006A8  6F9E               	movwf	(_PWM+1)& (0+255),b
  1440  0006AA  0E00               	movlw	0
  1441  0006AC  6F9D               	movwf	_PWM& (0+255),b
  1442                           
  1443                           ;newmain.c: 304: } else if (PWM == 3) {
  1444  0006AE  0012               	return	
  1445  0006B0                     l2874:
  1446                           
  1447                           ; BSR set to: 0
  1448  0006B0  0E03               	movlw	3
  1449  0006B2  0100               	movlb	0	; () banked
  1450  0006B4  199D               	xorwf	_PWM& (0+255),w,b
  1451  0006B6  0100               	movlb	0	; () banked
  1452  0006B8  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1453  0006BA  A4D8               	btfss	status,2,c
  1454  0006BC  D008               	goto	l2880
  1455                           
  1456                           ; BSR set to: 0
  1457                           ;newmain.c: 305: pwmB1();
  1458  0006BE  ECC6  F00A         	call	_pwmB1	;wreg free
  1459                           
  1460                           ;newmain.c: 306: PWM = 0;
  1461  0006C2  0E00               	movlw	0
  1462  0006C4  0100               	movlb	0	; () banked
  1463  0006C6  6F9E               	movwf	(_PWM+1)& (0+255),b
  1464  0006C8  0E00               	movlw	0
  1465  0006CA  6F9D               	movwf	_PWM& (0+255),b
  1466                           
  1467                           ;newmain.c: 307: } else if (PWM == 4) {
  1468  0006CC  0012               	return	
  1469  0006CE                     l2880:
  1470                           
  1471                           ; BSR set to: 0
  1472  0006CE  0E04               	movlw	4
  1473  0006D0  0100               	movlb	0	; () banked
  1474  0006D2  199D               	xorwf	_PWM& (0+255),w,b
  1475  0006D4  0100               	movlb	0	; () banked
  1476  0006D6  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1477  0006D8  A4D8               	btfss	status,2,c
  1478  0006DA  0012               	return	
  1479                           
  1480                           ; BSR set to: 0
  1481                           ;newmain.c: 308: pwmB2();
  1482  0006DC  EC54  F00B         	call	_pwmB2	;wreg free
  1483                           
  1484                           ;newmain.c: 309: PWM = 0;
  1485  0006E0  0E00               	movlw	0
  1486  0006E2  0100               	movlb	0	; () banked
  1487  0006E4  6F9E               	movwf	(_PWM+1)& (0+255),b
  1488  0006E6  0E00               	movlw	0
  1489  0006E8  6F9D               	movwf	_PWM& (0+255),b
  1490                           
  1491                           ; BSR set to: 0
  1492                           ;newmain.c: 310: }
  1493                           ;newmain.c: 311: } else if (modo == 3) {
  1494                           
  1495                           ; BSR set to: 0
  1496                           
  1497                           ; BSR set to: 0
  1498                           
  1499                           ; BSR set to: 0
  1500  0006EA  0012               	return	
  1501  0006EC                     l2886:
  1502                           
  1503                           ; BSR set to: 0
  1504  0006EC  0E03               	movlw	3
  1505  0006EE  0100               	movlb	0	; () banked
  1506  0006F0  199F               	xorwf	_modo& (0+255),w,b
  1507  0006F2  0100               	movlb	0	; () banked
  1508  0006F4  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1509  0006F6  A4D8               	btfss	status,2,c
  1510  0006F8  D03D               	goto	l2914
  1511                           
  1512                           ; BSR set to: 0
  1513                           ;newmain.c: 312: derecha();
  1514  0006FA  ECFD  F00B         	call	_derecha	;wreg free
  1515                           
  1516                           ;newmain.c: 313: if (PWM == 1) {
  1517  0006FE  0100               	movlb	0	; () banked
  1518  000700  059D               	decf	_PWM& (0+255),w,b
  1519  000702  0100               	movlb	0	; () banked
  1520  000704  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1521  000706  A4D8               	btfss	status,2,c
  1522  000708  D008               	goto	l2896
  1523                           
  1524                           ; BSR set to: 0
  1525                           ;newmain.c: 314: pwmA1();
  1526  00070A  ECF8  F00A         	call	_pwmA1	;wreg free
  1527                           
  1528                           ;newmain.c: 315: PWM = 0;
  1529  00070E  0E00               	movlw	0
  1530  000710  0100               	movlb	0	; () banked
  1531  000712  6F9E               	movwf	(_PWM+1)& (0+255),b
  1532  000714  0E00               	movlw	0
  1533  000716  6F9D               	movwf	_PWM& (0+255),b
  1534                           
  1535                           ;newmain.c: 316: } else if (PWM == 2) {
  1536  000718  0012               	return	
  1537  00071A                     l2896:
  1538                           
  1539                           ; BSR set to: 0
  1540  00071A  0E02               	movlw	2
  1541  00071C  0100               	movlb	0	; () banked
  1542  00071E  199D               	xorwf	_PWM& (0+255),w,b
  1543  000720  0100               	movlb	0	; () banked
  1544  000722  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1545  000724  A4D8               	btfss	status,2,c
  1546  000726  D008               	goto	l2902
  1547                           
  1548                           ; BSR set to: 0
  1549                           ;newmain.c: 317: pwmA2();
  1550  000728  EC74  F00B         	call	_pwmA2	;wreg free
  1551                           
  1552                           ;newmain.c: 318: PWM = 0;
  1553  00072C  0E00               	movlw	0
  1554  00072E  0100               	movlb	0	; () banked
  1555  000730  6F9E               	movwf	(_PWM+1)& (0+255),b
  1556  000732  0E00               	movlw	0
  1557  000734  6F9D               	movwf	_PWM& (0+255),b
  1558                           
  1559                           ;newmain.c: 319: } else if (PWM == 3) {
  1560  000736  0012               	return	
  1561  000738                     l2902:
  1562                           
  1563                           ; BSR set to: 0
  1564  000738  0E03               	movlw	3
  1565  00073A  0100               	movlb	0	; () banked
  1566  00073C  199D               	xorwf	_PWM& (0+255),w,b
  1567  00073E  0100               	movlb	0	; () banked
  1568  000740  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1569  000742  A4D8               	btfss	status,2,c
  1570  000744  D008               	goto	l2908
  1571                           
  1572                           ; BSR set to: 0
  1573                           ;newmain.c: 320: pwmB1();
  1574  000746  ECC6  F00A         	call	_pwmB1	;wreg free
  1575                           
  1576                           ;newmain.c: 321: PWM = 0;
  1577  00074A  0E00               	movlw	0
  1578  00074C  0100               	movlb	0	; () banked
  1579  00074E  6F9E               	movwf	(_PWM+1)& (0+255),b
  1580  000750  0E00               	movlw	0
  1581  000752  6F9D               	movwf	_PWM& (0+255),b
  1582                           
  1583                           ;newmain.c: 322: } else if (PWM == 4) {
  1584  000754  0012               	return	
  1585  000756                     l2908:
  1586                           
  1587                           ; BSR set to: 0
  1588  000756  0E04               	movlw	4
  1589  000758  0100               	movlb	0	; () banked
  1590  00075A  199D               	xorwf	_PWM& (0+255),w,b
  1591  00075C  0100               	movlb	0	; () banked
  1592  00075E  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1593  000760  A4D8               	btfss	status,2,c
  1594  000762  0012               	return	
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;newmain.c: 323: pwmB2();
  1598  000764  EC54  F00B         	call	_pwmB2	;wreg free
  1599                           
  1600                           ;newmain.c: 324: PWM = 0;
  1601  000768  0E00               	movlw	0
  1602  00076A  0100               	movlb	0	; () banked
  1603  00076C  6F9E               	movwf	(_PWM+1)& (0+255),b
  1604  00076E  0E00               	movlw	0
  1605  000770  6F9D               	movwf	_PWM& (0+255),b
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;newmain.c: 325: }
  1609                           ;newmain.c: 326: } else if (modo == 4) {
  1610                           
  1611                           ; BSR set to: 0
  1612                           
  1613                           ; BSR set to: 0
  1614                           
  1615                           ; BSR set to: 0
  1616  000772  0012               	return	
  1617  000774                     l2914:
  1618                           
  1619                           ; BSR set to: 0
  1620  000774  0E04               	movlw	4
  1621  000776  0100               	movlb	0	; () banked
  1622  000778  199F               	xorwf	_modo& (0+255),w,b
  1623  00077A  0100               	movlb	0	; () banked
  1624  00077C  11A0               	iorwf	(_modo+1)& (0+255),w,b
  1625  00077E  A4D8               	btfss	status,2,c
  1626  000780  0012               	return	
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;newmain.c: 327: izquierda();
  1630  000782  EC04  F00C         	call	_izquierda	;wreg free
  1631                           
  1632                           ;newmain.c: 328: if (PWM == 1) {
  1633  000786  0100               	movlb	0	; () banked
  1634  000788  059D               	decf	_PWM& (0+255),w,b
  1635  00078A  0100               	movlb	0	; () banked
  1636  00078C  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1637  00078E  A4D8               	btfss	status,2,c
  1638  000790  D008               	goto	l2924
  1639                           
  1640                           ; BSR set to: 0
  1641                           ;newmain.c: 329: pwmA1();
  1642  000792  ECF8  F00A         	call	_pwmA1	;wreg free
  1643                           
  1644                           ;newmain.c: 330: PWM = 0;
  1645  000796  0E00               	movlw	0
  1646  000798  0100               	movlb	0	; () banked
  1647  00079A  6F9E               	movwf	(_PWM+1)& (0+255),b
  1648  00079C  0E00               	movlw	0
  1649  00079E  6F9D               	movwf	_PWM& (0+255),b
  1650                           
  1651                           ;newmain.c: 331: } else if (PWM == 2) {
  1652  0007A0  0012               	return	
  1653  0007A2                     l2924:
  1654                           
  1655                           ; BSR set to: 0
  1656  0007A2  0E02               	movlw	2
  1657  0007A4  0100               	movlb	0	; () banked
  1658  0007A6  199D               	xorwf	_PWM& (0+255),w,b
  1659  0007A8  0100               	movlb	0	; () banked
  1660  0007AA  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1661  0007AC  A4D8               	btfss	status,2,c
  1662  0007AE  D008               	goto	l2930
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;newmain.c: 332: pwmA2();
  1666  0007B0  EC74  F00B         	call	_pwmA2	;wreg free
  1667                           
  1668                           ;newmain.c: 333: PWM = 0;
  1669  0007B4  0E00               	movlw	0
  1670  0007B6  0100               	movlb	0	; () banked
  1671  0007B8  6F9E               	movwf	(_PWM+1)& (0+255),b
  1672  0007BA  0E00               	movlw	0
  1673  0007BC  6F9D               	movwf	_PWM& (0+255),b
  1674                           
  1675                           ;newmain.c: 334: } else if (PWM == 3) {
  1676  0007BE  0012               	return	
  1677  0007C0                     l2930:
  1678                           
  1679                           ; BSR set to: 0
  1680  0007C0  0E03               	movlw	3
  1681  0007C2  0100               	movlb	0	; () banked
  1682  0007C4  199D               	xorwf	_PWM& (0+255),w,b
  1683  0007C6  0100               	movlb	0	; () banked
  1684  0007C8  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1685  0007CA  A4D8               	btfss	status,2,c
  1686  0007CC  D008               	goto	l2936
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;newmain.c: 335: pwmB1();
  1690  0007CE  ECC6  F00A         	call	_pwmB1	;wreg free
  1691                           
  1692                           ;newmain.c: 336: PWM = 0;
  1693  0007D2  0E00               	movlw	0
  1694  0007D4  0100               	movlb	0	; () banked
  1695  0007D6  6F9E               	movwf	(_PWM+1)& (0+255),b
  1696  0007D8  0E00               	movlw	0
  1697  0007DA  6F9D               	movwf	_PWM& (0+255),b
  1698                           
  1699                           ;newmain.c: 337: } else if (PWM == 4) {
  1700  0007DC  0012               	return	
  1701  0007DE                     l2936:
  1702                           
  1703                           ; BSR set to: 0
  1704  0007DE  0E04               	movlw	4
  1705  0007E0  0100               	movlb	0	; () banked
  1706  0007E2  199D               	xorwf	_PWM& (0+255),w,b
  1707  0007E4  0100               	movlb	0	; () banked
  1708  0007E6  119E               	iorwf	(_PWM+1)& (0+255),w,b
  1709  0007E8  A4D8               	btfss	status,2,c
  1710  0007EA  0012               	return	
  1711                           
  1712                           ; BSR set to: 0
  1713                           ;newmain.c: 338: pwmB2();
  1714  0007EC  EC54  F00B         	call	_pwmB2	;wreg free
  1715                           
  1716                           ;newmain.c: 339: PWM = 0;
  1717  0007F0  0E00               	movlw	0
  1718  0007F2  0100               	movlb	0	; () banked
  1719  0007F4  6F9E               	movwf	(_PWM+1)& (0+255),b
  1720  0007F6  0E00               	movlw	0
  1721  0007F8  6F9D               	movwf	_PWM& (0+255),b
  1722                           
  1723                           ; BSR set to: 0
  1724                           ;newmain.c: 340: }
  1725                           ;newmain.c: 341: }
  1726                           ;newmain.c: 342: } else {
  1727                           
  1728                           ; BSR set to: 0
  1729                           
  1730                           ; BSR set to: 0
  1731                           
  1732                           ; BSR set to: 0
  1733                           
  1734                           ; BSR set to: 0
  1735                           
  1736                           ; BSR set to: 0
  1737                           
  1738                           ; BSR set to: 0
  1739                           
  1740                           ; BSR set to: 0
  1741                           
  1742                           ; BSR set to: 0
  1743  0007FA  0012               	return	
  1744  0007FC                     l2942:
  1745                           
  1746                           ;newmain.c: 343: sensorOFF();
  1747  0007FC  EC0B  F00C         	call	_sensorOFF	;wreg free
  1748                           
  1749                           ;newmain.c: 344: LATAbits.LA4 = 1;
  1750  000800  8889               	bsf	3977,4,c	;volatile
  1751  000802  0012               	return	
  1752  000804                     __end_of_manual:
  1753                           	opt stack 0
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           intcon	equ	0xFF2
  1759                           intcon2	equ	0xFF1
  1760                           intcon3	equ	0xFF0
  1761                           postinc0	equ	0xFEE
  1762                           wreg	equ	0xFE8
  1763                           status	equ	0xFD8
  1764                           
  1765 ;; *************** function _sensorOFF *****************
  1766 ;; Defined at:
  1767 ;;		line 466 in file "newmain.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;		None
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;		None
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		None
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        0 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    3
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		_manual
  1792 ;; This function uses a non-reentrant model
  1793 ;;
  1794                           
  1795                           	psect	text5
  1796  001816                     __ptext5:
  1797                           	opt stack 0
  1798  001816                     _sensorOFF:
  1799                           	opt stack 26
  1800                           
  1801                           ;newmain.c: 467: LATB0 = 0;
  1802                           
  1803                           ;incstack = 0
  1804  001816  908A               	bcf	3978,0,c	;volatile
  1805                           
  1806                           ;newmain.c: 468: LATB1 = 0;
  1807  001818  928A               	bcf	3978,1,c	;volatile
  1808                           
  1809                           ;newmain.c: 469: LATB2 = 0;
  1810  00181A  948A               	bcf	3978,2,c	;volatile
  1811                           
  1812                           ;newmain.c: 470: LATB3 = 0;
  1813  00181C  968A               	bcf	3978,3,c	;volatile
  1814  00181E  0012               	return		;funcret
  1815  001820                     __end_of_sensorOFF:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           intcon	equ	0xFF2
  1822                           intcon2	equ	0xFF1
  1823                           intcon3	equ	0xFF0
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           status	equ	0xFD8
  1827                           
  1828 ;; *************** function _pwmB2 *****************
  1829 ;; Defined at:
  1830 ;;		line 418 in file "newmain.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;		None
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1844 ;;      Params:         0       0       0       0       0       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1847 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1848 ;;Total ram usage:        0 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    5
  1851 ;; This function calls:
  1852 ;;		___ftadd
  1853 ;; This function is called by:
  1854 ;;		_manual
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text6
  1859  0016A8                     __ptext6:
  1860                           	opt stack 0
  1861  0016A8                     _pwmB2:
  1862                           	opt stack 24
  1863                           
  1864                           ;newmain.c: 419: duty_cicle2 = duty_cicle2 - 102.3;
  1865                           
  1866                           ;incstack = 0
  1867  0016A8  C038  F07A         	movff	_duty_cicle2,___ftadd@f1
  1868  0016AC  C039  F07B         	movff	_duty_cicle2+1,___ftadd@f1+1
  1869  0016B0  C03A  F07C         	movff	_duty_cicle2+2,___ftadd@f1+2
  1870  0016B4  0E9A               	movlw	154
  1871  0016B6  0100               	movlb	0	; () banked
  1872  0016B8  6F7D               	movwf	___ftadd@f2& (0+255),b
  1873  0016BA  0ECC               	movlw	204
  1874  0016BC  0100               	movlb	0	; () banked
  1875  0016BE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  1876  0016C0  0EC2               	movlw	194
  1877  0016C2  0100               	movlb	0	; () banked
  1878  0016C4  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  1879  0016C6  ECAF  F001         	call	___ftadd	;wreg free
  1880  0016CA  C07A  F038         	movff	?___ftadd,_duty_cicle2
  1881  0016CE  C07B  F039         	movff	?___ftadd+1,_duty_cicle2+1
  1882  0016D2  C07C  F03A         	movff	?___ftadd+2,_duty_cicle2+2
  1883                           
  1884                           ;newmain.c: 420: if (duty_cicle2 < 0) {
  1885  0016D6  AE3A               	btfss	_duty_cicle2+2,7,c
  1886  0016D8  0012               	return	
  1887                           
  1888                           ;newmain.c: 421: duty_cicle2 = 0;
  1889  0016DA  0E00               	movlw	0
  1890  0016DC  6E38               	movwf	_duty_cicle2,c
  1891  0016DE  0E00               	movlw	0
  1892  0016E0  6E39               	movwf	_duty_cicle2+1,c
  1893  0016E2  0E00               	movlw	0
  1894  0016E4  6E3A               	movwf	_duty_cicle2+2,c
  1895  0016E6  0012               	return	
  1896  0016E8                     __end_of_pwmB2:
  1897                           	opt stack 0
  1898                           tblptru	equ	0xFF8
  1899                           tblptrh	equ	0xFF7
  1900                           tblptrl	equ	0xFF6
  1901                           tablat	equ	0xFF5
  1902                           intcon	equ	0xFF2
  1903                           intcon2	equ	0xFF1
  1904                           intcon3	equ	0xFF0
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           status	equ	0xFD8
  1908                           
  1909 ;; *************** function _pwmB1 *****************
  1910 ;; Defined at:
  1911 ;;		line 411 in file "newmain.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;		None
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;		None
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1925 ;;      Params:         0       0       0       0       0       0       0       0       0
  1926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1928 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1929 ;;Total ram usage:        0 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    5
  1932 ;; This function calls:
  1933 ;;		___ftadd
  1934 ;;		___ftge
  1935 ;; This function is called by:
  1936 ;;		_manual
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           
  1940                           	psect	text7
  1941  00158C                     __ptext7:
  1942                           	opt stack 0
  1943  00158C                     _pwmB1:
  1944                           	opt stack 24
  1945                           
  1946                           ;newmain.c: 412: duty_cicle2 = duty_cicle2 + 102.3;
  1947                           
  1948                           ;incstack = 0
  1949  00158C  C038  F07A         	movff	_duty_cicle2,___ftadd@f1
  1950  001590  C039  F07B         	movff	_duty_cicle2+1,___ftadd@f1+1
  1951  001594  C03A  F07C         	movff	_duty_cicle2+2,___ftadd@f1+2
  1952  001598  0E9A               	movlw	154
  1953  00159A  0100               	movlb	0	; () banked
  1954  00159C  6F7D               	movwf	___ftadd@f2& (0+255),b
  1955  00159E  0ECC               	movlw	204
  1956  0015A0  0100               	movlb	0	; () banked
  1957  0015A2  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  1958  0015A4  0E42               	movlw	66
  1959  0015A6  0100               	movlb	0	; () banked
  1960  0015A8  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  1961  0015AA  ECAF  F001         	call	___ftadd	;wreg free
  1962  0015AE  C07A  F038         	movff	?___ftadd,_duty_cicle2
  1963  0015B2  C07B  F039         	movff	?___ftadd+1,_duty_cicle2+1
  1964  0015B6  C07C  F03A         	movff	?___ftadd+2,_duty_cicle2+2
  1965                           
  1966                           ;newmain.c: 413: if (duty_cicle2 > 1023.0) {
  1967  0015BA  0EC0               	movlw	192
  1968  0015BC  0100               	movlb	0	; () banked
  1969  0015BE  6F60               	movwf	___ftge@ff1& (0+255),b
  1970  0015C0  0E7F               	movlw	127
  1971  0015C2  0100               	movlb	0	; () banked
  1972  0015C4  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  1973  0015C6  0E44               	movlw	68
  1974  0015C8  0100               	movlb	0	; () banked
  1975  0015CA  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  1976  0015CC  C038  F063         	movff	_duty_cicle2,___ftge@ff2
  1977  0015D0  C039  F064         	movff	_duty_cicle2+1,___ftge@ff2+1
  1978  0015D4  C03A  F065         	movff	_duty_cicle2+2,___ftge@ff2+2
  1979  0015D8  ECDF  F009         	call	___ftge	;wreg free
  1980  0015DC  0100               	movlb	0	; () banked
  1981  0015DE  B0D8               	btfsc	status,0,c
  1982  0015E0  0012               	return	
  1983                           
  1984                           ; BSR set to: 0
  1985                           ;newmain.c: 414: duty_cicle2 = 1023.0;
  1986  0015E2  0EC0               	movlw	192
  1987  0015E4  6E38               	movwf	_duty_cicle2,c
  1988  0015E6  0E7F               	movlw	127
  1989  0015E8  6E39               	movwf	_duty_cicle2+1,c
  1990  0015EA  0E44               	movlw	68
  1991  0015EC  6E3A               	movwf	_duty_cicle2+2,c
  1992  0015EE  0012               	return	
  1993  0015F0                     __end_of_pwmB1:
  1994                           	opt stack 0
  1995                           tblptru	equ	0xFF8
  1996                           tblptrh	equ	0xFF7
  1997                           tblptrl	equ	0xFF6
  1998                           tablat	equ	0xFF5
  1999                           intcon	equ	0xFF2
  2000                           intcon2	equ	0xFF1
  2001                           intcon3	equ	0xFF0
  2002                           postinc0	equ	0xFEE
  2003                           wreg	equ	0xFE8
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function _pwmA2 *****************
  2007 ;; Defined at:
  2008 ;;		line 404 in file "newmain.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;		None
  2011 ;; Auto vars:     Size  Location     Type
  2012 ;;		None
  2013 ;; Return value:  Size  Location     Type
  2014 ;;                  1    wreg      void 
  2015 ;; Registers used:
  2016 ;;		wreg, status,2, status,0, cstack
  2017 ;; Tracked objects:
  2018 ;;		On entry : 0/0
  2019 ;;		On exit  : 0/0
  2020 ;;		Unchanged: 0/0
  2021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2022 ;;      Params:         0       0       0       0       0       0       0       0       0
  2023 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2024 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2025 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2026 ;;Total ram usage:        0 bytes
  2027 ;; Hardware stack levels used:    1
  2028 ;; Hardware stack levels required when called:    5
  2029 ;; This function calls:
  2030 ;;		___ftadd
  2031 ;; This function is called by:
  2032 ;;		_manual
  2033 ;; This function uses a non-reentrant model
  2034 ;;
  2035                           
  2036                           	psect	text8
  2037  0016E8                     __ptext8:
  2038                           	opt stack 0
  2039  0016E8                     _pwmA2:
  2040                           	opt stack 24
  2041                           
  2042                           ;newmain.c: 405: duty_cicle1 = duty_cicle1 - 102.3;
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;incstack = 0
  2046  0016E8  C03B  F07A         	movff	_duty_cicle1,___ftadd@f1
  2047  0016EC  C03C  F07B         	movff	_duty_cicle1+1,___ftadd@f1+1
  2048  0016F0  C03D  F07C         	movff	_duty_cicle1+2,___ftadd@f1+2
  2049  0016F4  0E9A               	movlw	154
  2050  0016F6  0100               	movlb	0	; () banked
  2051  0016F8  6F7D               	movwf	___ftadd@f2& (0+255),b
  2052  0016FA  0ECC               	movlw	204
  2053  0016FC  0100               	movlb	0	; () banked
  2054  0016FE  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2055  001700  0EC2               	movlw	194
  2056  001702  0100               	movlb	0	; () banked
  2057  001704  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2058  001706  ECAF  F001         	call	___ftadd	;wreg free
  2059  00170A  C07A  F03B         	movff	?___ftadd,_duty_cicle1
  2060  00170E  C07B  F03C         	movff	?___ftadd+1,_duty_cicle1+1
  2061  001712  C07C  F03D         	movff	?___ftadd+2,_duty_cicle1+2
  2062                           
  2063                           ;newmain.c: 406: if (duty_cicle1 < 0) {
  2064  001716  AE3D               	btfss	_duty_cicle1+2,7,c
  2065  001718  0012               	return	
  2066                           
  2067                           ;newmain.c: 407: duty_cicle1 = 0;
  2068  00171A  0E00               	movlw	0
  2069  00171C  6E3B               	movwf	_duty_cicle1,c
  2070  00171E  0E00               	movlw	0
  2071  001720  6E3C               	movwf	_duty_cicle1+1,c
  2072  001722  0E00               	movlw	0
  2073  001724  6E3D               	movwf	_duty_cicle1+2,c
  2074  001726  0012               	return	
  2075  001728                     __end_of_pwmA2:
  2076                           	opt stack 0
  2077                           tblptru	equ	0xFF8
  2078                           tblptrh	equ	0xFF7
  2079                           tblptrl	equ	0xFF6
  2080                           tablat	equ	0xFF5
  2081                           intcon	equ	0xFF2
  2082                           intcon2	equ	0xFF1
  2083                           intcon3	equ	0xFF0
  2084                           postinc0	equ	0xFEE
  2085                           wreg	equ	0xFE8
  2086                           status	equ	0xFD8
  2087                           
  2088 ;; *************** function _pwmA1 *****************
  2089 ;; Defined at:
  2090 ;;		line 397 in file "newmain.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;		None
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;		None
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  1    wreg      void 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0, cstack
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/0
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2104 ;;      Params:         0       0       0       0       0       0       0       0       0
  2105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2107 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2108 ;;Total ram usage:        0 bytes
  2109 ;; Hardware stack levels used:    1
  2110 ;; Hardware stack levels required when called:    5
  2111 ;; This function calls:
  2112 ;;		___ftadd
  2113 ;;		___ftge
  2114 ;; This function is called by:
  2115 ;;		_manual
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text9
  2120  0015F0                     __ptext9:
  2121                           	opt stack 0
  2122  0015F0                     _pwmA1:
  2123                           	opt stack 24
  2124                           
  2125                           ;newmain.c: 398: duty_cicle1 = duty_cicle1 + 102.3;
  2126                           
  2127                           ;incstack = 0
  2128  0015F0  C03B  F07A         	movff	_duty_cicle1,___ftadd@f1
  2129  0015F4  C03C  F07B         	movff	_duty_cicle1+1,___ftadd@f1+1
  2130  0015F8  C03D  F07C         	movff	_duty_cicle1+2,___ftadd@f1+2
  2131  0015FC  0E9A               	movlw	154
  2132  0015FE  0100               	movlb	0	; () banked
  2133  001600  6F7D               	movwf	___ftadd@f2& (0+255),b
  2134  001602  0ECC               	movlw	204
  2135  001604  0100               	movlb	0	; () banked
  2136  001606  6F7E               	movwf	(___ftadd@f2+1)& (0+255),b
  2137  001608  0E42               	movlw	66
  2138  00160A  0100               	movlb	0	; () banked
  2139  00160C  6F7F               	movwf	(___ftadd@f2+2)& (0+255),b
  2140  00160E  ECAF  F001         	call	___ftadd	;wreg free
  2141  001612  C07A  F03B         	movff	?___ftadd,_duty_cicle1
  2142  001616  C07B  F03C         	movff	?___ftadd+1,_duty_cicle1+1
  2143  00161A  C07C  F03D         	movff	?___ftadd+2,_duty_cicle1+2
  2144                           
  2145                           ;newmain.c: 399: if (duty_cicle1 > 1023.0) {
  2146  00161E  0EC0               	movlw	192
  2147  001620  0100               	movlb	0	; () banked
  2148  001622  6F60               	movwf	___ftge@ff1& (0+255),b
  2149  001624  0E7F               	movlw	127
  2150  001626  0100               	movlb	0	; () banked
  2151  001628  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  2152  00162A  0E44               	movlw	68
  2153  00162C  0100               	movlb	0	; () banked
  2154  00162E  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  2155  001630  C03B  F063         	movff	_duty_cicle1,___ftge@ff2
  2156  001634  C03C  F064         	movff	_duty_cicle1+1,___ftge@ff2+1
  2157  001638  C03D  F065         	movff	_duty_cicle1+2,___ftge@ff2+2
  2158  00163C  ECDF  F009         	call	___ftge	;wreg free
  2159  001640  0100               	movlb	0	; () banked
  2160  001642  B0D8               	btfsc	status,0,c
  2161  001644  0012               	return	
  2162                           
  2163                           ; BSR set to: 0
  2164                           ;newmain.c: 400: duty_cicle1 = 1023.0;
  2165  001646  0EC0               	movlw	192
  2166  001648  6E3B               	movwf	_duty_cicle1,c
  2167  00164A  0E7F               	movlw	127
  2168  00164C  6E3C               	movwf	_duty_cicle1+1,c
  2169  00164E  0E44               	movlw	68
  2170  001650  6E3D               	movwf	_duty_cicle1+2,c
  2171  001652  0012               	return	
  2172  001654                     __end_of_pwmA1:
  2173                           	opt stack 0
  2174                           tblptru	equ	0xFF8
  2175                           tblptrh	equ	0xFF7
  2176                           tblptrl	equ	0xFF6
  2177                           tablat	equ	0xFF5
  2178                           intcon	equ	0xFF2
  2179                           intcon2	equ	0xFF1
  2180                           intcon3	equ	0xFF0
  2181                           postinc0	equ	0xFEE
  2182                           wreg	equ	0xFE8
  2183                           status	equ	0xFD8
  2184                           
  2185 ;; *************** function ___ftadd *****************
  2186 ;; Defined at:
  2187 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftadd.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  f1              3   26[BANK0 ] float 
  2190 ;;  f2              3   29[BANK0 ] float 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  exp1            1   37[BANK0 ] unsigned char 
  2193 ;;  exp2            1   36[BANK0 ] unsigned char 
  2194 ;;  sign            1   35[BANK0 ] unsigned char 
  2195 ;; Return value:  Size  Location     Type
  2196 ;;                  3   26[BANK0 ] float 
  2197 ;; Registers used:
  2198 ;;		wreg, status,2, status,0, cstack
  2199 ;; Tracked objects:
  2200 ;;		On entry : 0/0
  2201 ;;		On exit  : 0/0
  2202 ;;		Unchanged: 0/0
  2203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2204 ;;      Params:         0       6       0       0       0       0       0       0       0
  2205 ;;      Locals:         0       3       0       0       0       0       0       0       0
  2206 ;;      Temps:          0       3       0       0       0       0       0       0       0
  2207 ;;      Totals:         0      12       0       0       0       0       0       0       0
  2208 ;;Total ram usage:       12 bytes
  2209 ;; Hardware stack levels used:    1
  2210 ;; Hardware stack levels required when called:    4
  2211 ;; This function calls:
  2212 ;;		___ftpack
  2213 ;; This function is called by:
  2214 ;;		_start
  2215 ;;		_start1
  2216 ;;		_pwmA1
  2217 ;;		_pwmA2
  2218 ;;		_pwmB1
  2219 ;;		_pwmB2
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223                           	psect	text10
  2224  00035E                     __ptext10:
  2225                           	opt stack 0
  2226  00035E                     ___ftadd:
  2227                           	opt stack 25
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;incstack = 0
  2231  00035E  C07C  F080         	movff	___ftadd@f1+2,??___ftadd
  2232  000362  0100               	movlb	0	; () banked
  2233  000364  6B81               	clrf	(??___ftadd+1)& (0+255),b
  2234  000366  6B82               	clrf	(??___ftadd+2)& (0+255),b
  2235  000368  0100               	movlb	0	; () banked
  2236  00036A  357B               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  2237  00036C  0100               	movlb	0	; () banked
  2238  00036E  3780               	rlcf	??___ftadd& (0+255),f,b
  2239  000370  E301               	bnc	u2351
  2240  000372  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  2241  000374                     u2351:
  2242  000374  0100               	movlb	0	; () banked
  2243  000376  5180               	movf	??___ftadd& (0+255),w,b
  2244  000378  0100               	movlb	0	; () banked
  2245  00037A  6F85               	movwf	___ftadd@exp1& (0+255),b
  2246  00037C  C07F  F080         	movff	___ftadd@f2+2,??___ftadd
  2247  000380  0100               	movlb	0	; () banked
  2248  000382  6B81               	clrf	(??___ftadd+1)& (0+255),b
  2249  000384  6B82               	clrf	(??___ftadd+2)& (0+255),b
  2250  000386  0100               	movlb	0	; () banked
  2251  000388  357E               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  2252  00038A  0100               	movlb	0	; () banked
  2253  00038C  3780               	rlcf	??___ftadd& (0+255),f,b
  2254  00038E  E301               	bnc	u2361
  2255  000390  8181               	bsf	(??___ftadd+1)& (0+255),0,b
  2256  000392                     u2361:
  2257  000392  0100               	movlb	0	; () banked
  2258  000394  5180               	movf	??___ftadd& (0+255),w,b
  2259  000396  0100               	movlb	0	; () banked
  2260  000398  6F84               	movwf	___ftadd@exp2& (0+255),b
  2261                           
  2262                           ; BSR set to: 0
  2263  00039A  0100               	movlb	0	; () banked
  2264  00039C  5185               	movf	___ftadd@exp1& (0+255),w,b
  2265  00039E  0100               	movlb	0	; () banked
  2266  0003A0  B4D8               	btfsc	status,2,c
  2267  0003A2  D011               	goto	l594
  2268                           
  2269                           ; BSR set to: 0
  2270  0003A4  0100               	movlb	0	; () banked
  2271  0003A6  5184               	movf	___ftadd@exp2& (0+255),w,b
  2272  0003A8  0100               	movlb	0	; () banked
  2273  0003AA  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  2274  0003AC  B0D8               	btfsc	status,0,c
  2275  0003AE  D012               	goto	l2672
  2276                           
  2277                           ; BSR set to: 0
  2278  0003B0  0100               	movlb	0	; () banked
  2279  0003B2  5185               	movf	___ftadd@exp1& (0+255),w,b
  2280  0003B4  0800               	sublw	0
  2281  0003B6  0100               	movlb	0	; () banked
  2282  0003B8  2584               	addwf	___ftadd@exp2& (0+255),w,b
  2283  0003BA  0100               	movlb	0	; () banked
  2284  0003BC  6F80               	movwf	??___ftadd& (0+255),b
  2285  0003BE  0E18               	movlw	24
  2286  0003C0  0100               	movlb	0	; () banked
  2287  0003C2  6580               	cpfsgt	??___ftadd& (0+255),b
  2288  0003C4  D007               	goto	l2672
  2289  0003C6                     l594:
  2290                           
  2291                           ; BSR set to: 0
  2292  0003C6  C07D  F07A         	movff	___ftadd@f2,?___ftadd
  2293  0003CA  C07E  F07B         	movff	___ftadd@f2+1,?___ftadd+1
  2294  0003CE  C07F  F07C         	movff	___ftadd@f2+2,?___ftadd+2
  2295  0003D2  0012               	return	
  2296  0003D4                     l2672:
  2297                           
  2298                           ; BSR set to: 0
  2299  0003D4  0100               	movlb	0	; () banked
  2300  0003D6  5184               	movf	___ftadd@exp2& (0+255),w,b
  2301  0003D8  0100               	movlb	0	; () banked
  2302  0003DA  B4D8               	btfsc	status,2,c
  2303  0003DC  D011               	goto	l598
  2304                           
  2305                           ; BSR set to: 0
  2306  0003DE  0100               	movlb	0	; () banked
  2307  0003E0  5185               	movf	___ftadd@exp1& (0+255),w,b
  2308  0003E2  0100               	movlb	0	; () banked
  2309  0003E4  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  2310  0003E6  B0D8               	btfsc	status,0,c
  2311  0003E8  D012               	goto	l2678
  2312                           
  2313                           ; BSR set to: 0
  2314  0003EA  0100               	movlb	0	; () banked
  2315  0003EC  5184               	movf	___ftadd@exp2& (0+255),w,b
  2316  0003EE  0800               	sublw	0
  2317  0003F0  0100               	movlb	0	; () banked
  2318  0003F2  2585               	addwf	___ftadd@exp1& (0+255),w,b
  2319  0003F4  0100               	movlb	0	; () banked
  2320  0003F6  6F80               	movwf	??___ftadd& (0+255),b
  2321  0003F8  0E18               	movlw	24
  2322  0003FA  0100               	movlb	0	; () banked
  2323  0003FC  6580               	cpfsgt	??___ftadd& (0+255),b
  2324  0003FE  D007               	goto	l2678
  2325  000400                     l598:
  2326                           
  2327                           ; BSR set to: 0
  2328  000400  C07A  F07A         	movff	___ftadd@f1,?___ftadd
  2329  000404  C07B  F07B         	movff	___ftadd@f1+1,?___ftadd+1
  2330  000408  C07C  F07C         	movff	___ftadd@f1+2,?___ftadd+2
  2331  00040C  0012               	return	
  2332  00040E                     l2678:
  2333                           
  2334                           ; BSR set to: 0
  2335  00040E  0E06               	movlw	6
  2336  000410  0100               	movlb	0	; () banked
  2337  000412  6F83               	movwf	___ftadd@sign& (0+255),b
  2338                           
  2339                           ; BSR set to: 0
  2340  000414  0100               	movlb	0	; () banked
  2341  000416  AF7C               	btfss	(___ftadd@f1+2)& (0+255),7,b
  2342  000418  D002               	goto	l2684
  2343                           
  2344                           ; BSR set to: 0
  2345  00041A  0100               	movlb	0	; () banked
  2346  00041C  8F83               	bsf	___ftadd@sign& (0+255),7,b
  2347  00041E                     l2684:
  2348                           
  2349                           ; BSR set to: 0
  2350  00041E  0100               	movlb	0	; () banked
  2351  000420  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2352  000422  D002               	goto	l600
  2353                           
  2354                           ; BSR set to: 0
  2355  000424  0100               	movlb	0	; () banked
  2356  000426  8D83               	bsf	___ftadd@sign& (0+255),6,b
  2357  000428                     l600:
  2358                           
  2359                           ; BSR set to: 0
  2360  000428  0100               	movlb	0	; () banked
  2361  00042A  8F7B               	bsf	(___ftadd@f1+1)& (0+255),7,b
  2362                           
  2363                           ; BSR set to: 0
  2364  00042C  0EFF               	movlw	255
  2365  00042E  0100               	movlb	0	; () banked
  2366  000430  177A               	andwf	___ftadd@f1& (0+255),f,b
  2367  000432  0EFF               	movlw	255
  2368  000434  0100               	movlb	0	; () banked
  2369  000436  177B               	andwf	(___ftadd@f1+1)& (0+255),f,b
  2370  000438  0E00               	movlw	0
  2371  00043A  0100               	movlb	0	; () banked
  2372  00043C  177C               	andwf	(___ftadd@f1+2)& (0+255),f,b
  2373  00043E  0100               	movlb	0	; () banked
  2374  000440  8F7E               	bsf	(___ftadd@f2+1)& (0+255),7,b
  2375                           
  2376                           ; BSR set to: 0
  2377  000442  0EFF               	movlw	255
  2378  000444  0100               	movlb	0	; () banked
  2379  000446  177D               	andwf	___ftadd@f2& (0+255),f,b
  2380  000448  0EFF               	movlw	255
  2381  00044A  0100               	movlb	0	; () banked
  2382  00044C  177E               	andwf	(___ftadd@f2+1)& (0+255),f,b
  2383  00044E  0E00               	movlw	0
  2384  000450  0100               	movlb	0	; () banked
  2385  000452  177F               	andwf	(___ftadd@f2+2)& (0+255),f,b
  2386                           
  2387                           ; BSR set to: 0
  2388  000454  0100               	movlb	0	; () banked
  2389  000456  5184               	movf	___ftadd@exp2& (0+255),w,b
  2390  000458  0100               	movlb	0	; () banked
  2391  00045A  5D85               	subwf	___ftadd@exp1& (0+255),w,b
  2392  00045C  B0D8               	btfsc	status,0,c
  2393  00045E  D025               	goto	l2704
  2394  000460                     l2694:
  2395                           
  2396                           ; BSR set to: 0
  2397  000460  0100               	movlb	0	; () banked
  2398  000462  90D8               	bcf	status,0,c
  2399  000464  377D               	rlcf	___ftadd@f2& (0+255),f,b
  2400  000466  377E               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  2401  000468  377F               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  2402  00046A  0100               	movlb	0	; () banked
  2403  00046C  0784               	decf	___ftadd@exp2& (0+255),f,b
  2404                           
  2405                           ; BSR set to: 0
  2406  00046E  0100               	movlb	0	; () banked
  2407  000470  5185               	movf	___ftadd@exp1& (0+255),w,b
  2408  000472  0100               	movlb	0	; () banked
  2409  000474  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  2410  000476  B4D8               	btfsc	status,2,c
  2411  000478  D011               	goto	l2702
  2412                           
  2413                           ; BSR set to: 0
  2414  00047A  0100               	movlb	0	; () banked
  2415  00047C  0783               	decf	___ftadd@sign& (0+255),f,b
  2416  00047E  C083  F080         	movff	___ftadd@sign,??___ftadd
  2417  000482  0E07               	movlw	7
  2418  000484  0100               	movlb	0	; () banked
  2419  000486  1780               	andwf	??___ftadd& (0+255),f,b
  2420  000488  B4D8               	btfsc	status,2,c
  2421  00048A  D008               	goto	l2702
  2422  00048C  D7E9               	goto	l2694
  2423  00048E                     l2700:
  2424                           
  2425                           ; BSR set to: 0
  2426  00048E  0100               	movlb	0	; () banked
  2427  000490  90D8               	bcf	status,0,c
  2428  000492  337C               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  2429  000494  337B               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  2430  000496  337A               	rrcf	___ftadd@f1& (0+255),f,b
  2431  000498  0100               	movlb	0	; () banked
  2432  00049A  2B85               	incf	___ftadd@exp1& (0+255),f,b
  2433  00049C                     l2702:
  2434                           
  2435                           ; BSR set to: 0
  2436  00049C  0100               	movlb	0	; () banked
  2437  00049E  5184               	movf	___ftadd@exp2& (0+255),w,b
  2438  0004A0  0100               	movlb	0	; () banked
  2439  0004A2  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  2440  0004A4  B4D8               	btfsc	status,2,c
  2441  0004A6  D02B               	goto	l609
  2442  0004A8  D7F2               	goto	l2700
  2443  0004AA                     l2704:
  2444                           
  2445                           ; BSR set to: 0
  2446  0004AA  0100               	movlb	0	; () banked
  2447  0004AC  5185               	movf	___ftadd@exp1& (0+255),w,b
  2448  0004AE  0100               	movlb	0	; () banked
  2449  0004B0  5D84               	subwf	___ftadd@exp2& (0+255),w,b
  2450  0004B2  B0D8               	btfsc	status,0,c
  2451  0004B4  D024               	goto	l609
  2452  0004B6                     l2706:
  2453                           
  2454                           ; BSR set to: 0
  2455  0004B6  0100               	movlb	0	; () banked
  2456  0004B8  90D8               	bcf	status,0,c
  2457  0004BA  377A               	rlcf	___ftadd@f1& (0+255),f,b
  2458  0004BC  377B               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  2459  0004BE  377C               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  2460  0004C0  0100               	movlb	0	; () banked
  2461  0004C2  0785               	decf	___ftadd@exp1& (0+255),f,b
  2462                           
  2463                           ; BSR set to: 0
  2464  0004C4  0100               	movlb	0	; () banked
  2465  0004C6  5185               	movf	___ftadd@exp1& (0+255),w,b
  2466  0004C8  0100               	movlb	0	; () banked
  2467  0004CA  1984               	xorwf	___ftadd@exp2& (0+255),w,b
  2468  0004CC  B4D8               	btfsc	status,2,c
  2469  0004CE  D011               	goto	l2714
  2470                           
  2471                           ; BSR set to: 0
  2472  0004D0  0100               	movlb	0	; () banked
  2473  0004D2  0783               	decf	___ftadd@sign& (0+255),f,b
  2474  0004D4  C083  F080         	movff	___ftadd@sign,??___ftadd
  2475  0004D8  0E07               	movlw	7
  2476  0004DA  0100               	movlb	0	; () banked
  2477  0004DC  1780               	andwf	??___ftadd& (0+255),f,b
  2478  0004DE  B4D8               	btfsc	status,2,c
  2479  0004E0  D008               	goto	l2714
  2480  0004E2  D7E9               	goto	l2706
  2481  0004E4                     l2712:
  2482                           
  2483                           ; BSR set to: 0
  2484  0004E4  0100               	movlb	0	; () banked
  2485  0004E6  90D8               	bcf	status,0,c
  2486  0004E8  337F               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  2487  0004EA  337E               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  2488  0004EC  337D               	rrcf	___ftadd@f2& (0+255),f,b
  2489  0004EE  0100               	movlb	0	; () banked
  2490  0004F0  2B84               	incf	___ftadd@exp2& (0+255),f,b
  2491  0004F2                     l2714:
  2492                           
  2493                           ; BSR set to: 0
  2494  0004F2  0100               	movlb	0	; () banked
  2495  0004F4  5184               	movf	___ftadd@exp2& (0+255),w,b
  2496  0004F6  0100               	movlb	0	; () banked
  2497  0004F8  1985               	xorwf	___ftadd@exp1& (0+255),w,b
  2498  0004FA  A4D8               	btfss	status,2,c
  2499  0004FC  D7F3               	goto	l2712
  2500  0004FE                     l609:
  2501                           
  2502                           ; BSR set to: 0
  2503  0004FE  0100               	movlb	0	; () banked
  2504  000500  AF83               	btfss	___ftadd@sign& (0+255),7,b
  2505  000502  D012               	goto	l618
  2506                           
  2507                           ; BSR set to: 0
  2508  000504  0EFF               	movlw	255
  2509  000506  0100               	movlb	0	; () banked
  2510  000508  1B7A               	xorwf	___ftadd@f1& (0+255),f,b
  2511  00050A  0EFF               	movlw	255
  2512  00050C  0100               	movlb	0	; () banked
  2513  00050E  1B7B               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  2514  000510  0EFF               	movlw	255
  2515  000512  0100               	movlb	0	; () banked
  2516  000514  1B7C               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  2517  000516  0E01               	movlw	1
  2518  000518  0100               	movlb	0	; () banked
  2519  00051A  277A               	addwf	___ftadd@f1& (0+255),f,b
  2520  00051C  0E00               	movlw	0
  2521  00051E  0100               	movlb	0	; () banked
  2522  000520  237B               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  2523  000522  0E00               	movlw	0
  2524  000524  0100               	movlb	0	; () banked
  2525  000526  237C               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  2526  000528                     l618:
  2527                           
  2528                           ; BSR set to: 0
  2529  000528  0100               	movlb	0	; () banked
  2530  00052A  AD83               	btfss	___ftadd@sign& (0+255),6,b
  2531  00052C  D012               	goto	l2720
  2532                           
  2533                           ; BSR set to: 0
  2534  00052E  0EFF               	movlw	255
  2535  000530  0100               	movlb	0	; () banked
  2536  000532  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  2537  000534  0EFF               	movlw	255
  2538  000536  0100               	movlb	0	; () banked
  2539  000538  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2540  00053A  0EFF               	movlw	255
  2541  00053C  0100               	movlb	0	; () banked
  2542  00053E  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2543  000540  0E01               	movlw	1
  2544  000542  0100               	movlb	0	; () banked
  2545  000544  277D               	addwf	___ftadd@f2& (0+255),f,b
  2546  000546  0E00               	movlw	0
  2547  000548  0100               	movlb	0	; () banked
  2548  00054A  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2549  00054C  0E00               	movlw	0
  2550  00054E  0100               	movlb	0	; () banked
  2551  000550  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2552  000552                     l2720:
  2553                           
  2554                           ; BSR set to: 0
  2555  000552  0E00               	movlw	0
  2556  000554  0100               	movlb	0	; () banked
  2557  000556  6F83               	movwf	___ftadd@sign& (0+255),b
  2558                           
  2559                           ; BSR set to: 0
  2560  000558  0100               	movlb	0	; () banked
  2561  00055A  517A               	movf	___ftadd@f1& (0+255),w,b
  2562  00055C  0100               	movlb	0	; () banked
  2563  00055E  277D               	addwf	___ftadd@f2& (0+255),f,b
  2564  000560  0100               	movlb	0	; () banked
  2565  000562  517B               	movf	(___ftadd@f1+1)& (0+255),w,b
  2566  000564  0100               	movlb	0	; () banked
  2567  000566  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2568  000568  0100               	movlb	0	; () banked
  2569  00056A  517C               	movf	(___ftadd@f1+2)& (0+255),w,b
  2570  00056C  0100               	movlb	0	; () banked
  2571  00056E  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2572                           
  2573                           ; BSR set to: 0
  2574  000570  0100               	movlb	0	; () banked
  2575  000572  AF7F               	btfss	(___ftadd@f2+2)& (0+255),7,b
  2576  000574  D015               	goto	l2730
  2577                           
  2578                           ; BSR set to: 0
  2579  000576  0EFF               	movlw	255
  2580  000578  0100               	movlb	0	; () banked
  2581  00057A  1B7D               	xorwf	___ftadd@f2& (0+255),f,b
  2582  00057C  0EFF               	movlw	255
  2583  00057E  0100               	movlb	0	; () banked
  2584  000580  1B7E               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  2585  000582  0EFF               	movlw	255
  2586  000584  0100               	movlb	0	; () banked
  2587  000586  1B7F               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  2588  000588  0E01               	movlw	1
  2589  00058A  0100               	movlb	0	; () banked
  2590  00058C  277D               	addwf	___ftadd@f2& (0+255),f,b
  2591  00058E  0E00               	movlw	0
  2592  000590  0100               	movlb	0	; () banked
  2593  000592  237E               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  2594  000594  0E00               	movlw	0
  2595  000596  0100               	movlb	0	; () banked
  2596  000598  237F               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  2597                           
  2598                           ; BSR set to: 0
  2599  00059A  0E01               	movlw	1
  2600  00059C  0100               	movlb	0	; () banked
  2601  00059E  6F83               	movwf	___ftadd@sign& (0+255),b
  2602  0005A0                     l2730:
  2603                           
  2604                           ; BSR set to: 0
  2605  0005A0  C07D  F060         	movff	___ftadd@f2,___ftpack@arg
  2606  0005A4  C07E  F061         	movff	___ftadd@f2+1,___ftpack@arg+1
  2607  0005A8  C07F  F062         	movff	___ftadd@f2+2,___ftpack@arg+2
  2608  0005AC  C085  F063         	movff	___ftadd@exp1,___ftpack@exp
  2609  0005B0  C083  F064         	movff	___ftadd@sign,___ftpack@sign
  2610  0005B4  ECDF  F008         	call	___ftpack	;wreg free
  2611  0005B8  C060  F07A         	movff	?___ftpack,?___ftadd
  2612  0005BC  C061  F07B         	movff	?___ftpack+1,?___ftadd+1
  2613  0005C0  C062  F07C         	movff	?___ftpack+2,?___ftadd+2
  2614  0005C4  0012               	return	
  2615  0005C6                     __end_of___ftadd:
  2616                           	opt stack 0
  2617                           tblptru	equ	0xFF8
  2618                           tblptrh	equ	0xFF7
  2619                           tblptrl	equ	0xFF6
  2620                           tablat	equ	0xFF5
  2621                           intcon	equ	0xFF2
  2622                           intcon2	equ	0xFF1
  2623                           intcon3	equ	0xFF0
  2624                           postinc0	equ	0xFEE
  2625                           wreg	equ	0xFE8
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _derecha *****************
  2629 ;; Defined at:
  2630 ;;		line 443 in file "newmain.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2644 ;;      Params:         0       0       0       0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used:    1
  2650 ;; Hardware stack levels required when called:    6
  2651 ;; This function calls:
  2652 ;;		_pwmD
  2653 ;; This function is called by:
  2654 ;;		_manual
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           	psect	text11
  2659  0017FA                     __ptext11:
  2660                           	opt stack 0
  2661  0017FA                     _derecha:
  2662                           	opt stack 23
  2663                           
  2664                           ;newmain.c: 444: pwmD();
  2665                           
  2666                           ;incstack = 0
  2667  0017FA  ECF1  F006         	call	_pwmD	;wreg free
  2668                           
  2669                           ;newmain.c: 445: LATB0 = 1;
  2670  0017FE  808A               	bsf	3978,0,c	;volatile
  2671                           
  2672                           ;newmain.c: 446: LATB1 = 0;
  2673  001800  928A               	bcf	3978,1,c	;volatile
  2674                           
  2675                           ;newmain.c: 447: LATB2 = 1;
  2676  001802  848A               	bsf	3978,2,c	;volatile
  2677                           
  2678                           ;newmain.c: 448: LATB3 = 0;
  2679  001804  968A               	bcf	3978,3,c	;volatile
  2680  001806  0012               	return		;funcret
  2681  001808                     __end_of_derecha:
  2682                           	opt stack 0
  2683                           tblptru	equ	0xFF8
  2684                           tblptrh	equ	0xFF7
  2685                           tblptrl	equ	0xFF6
  2686                           tablat	equ	0xFF5
  2687                           intcon	equ	0xFF2
  2688                           intcon2	equ	0xFF1
  2689                           intcon3	equ	0xFF0
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           status	equ	0xFD8
  2693                           
  2694 ;; *************** function _pwmD *****************
  2695 ;; Defined at:
  2696 ;;		line 379 in file "newmain.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, status,2, status,0, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2710 ;;      Params:         0       0       0       0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:    5
  2717 ;; This function calls:
  2718 ;;		___ftge
  2719 ;;		___ftmul
  2720 ;;		___fttol
  2721 ;; This function is called by:
  2722 ;;		_derecha
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text12
  2727  000DE2                     __ptext12:
  2728                           	opt stack 0
  2729  000DE2                     _pwmD:
  2730                           	opt stack 23
  2731                           
  2732                           ;newmain.c: 380: if (y == 3) {
  2733                           
  2734                           ;incstack = 0
  2735  000DE2  0E03               	movlw	3
  2736  000DE4  183E               	xorwf	_y,w,c
  2737  000DE6  103F               	iorwf	_y+1,w,c
  2738  000DE8  A4D8               	btfss	status,2,c
  2739  000DEA  D014               	goto	l2650
  2740                           
  2741                           ;newmain.c: 381: duty_cicle1 = 373.3;
  2742  000DEC  0EA6               	movlw	166
  2743  000DEE  6E3B               	movwf	_duty_cicle1,c
  2744  000DF0  0EBA               	movlw	186
  2745  000DF2  6E3C               	movwf	_duty_cicle1+1,c
  2746  000DF4  0E43               	movlw	67
  2747  000DF6  6E3D               	movwf	_duty_cicle1+2,c
  2748                           
  2749                           ;newmain.c: 382: duty_cicle2 = 190;
  2750  000DF8  0E00               	movlw	0
  2751  000DFA  6E38               	movwf	_duty_cicle2,c
  2752  000DFC  0E3E               	movlw	62
  2753  000DFE  6E39               	movwf	_duty_cicle2+1,c
  2754  000E00  0E43               	movlw	67
  2755  000E02  6E3A               	movwf	_duty_cicle2+2,c
  2756                           
  2757                           ;newmain.c: 383: y = 1;
  2758  000E04  0E00               	movlw	0
  2759  000E06  6E3F               	movwf	_y+1,c
  2760  000E08  0E01               	movlw	1
  2761  000E0A  6E3E               	movwf	_y,c
  2762                           
  2763                           ;newmain.c: 384: y = 2;
  2764  000E0C  0E00               	movlw	0
  2765  000E0E  6E3F               	movwf	_y+1,c
  2766  000E10  0E02               	movlw	2
  2767  000E12  6E3E               	movwf	_y,c
  2768  000E14                     l2650:
  2769                           
  2770                           ;newmain.c: 385: }
  2771                           ;newmain.c: 386: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  2772  000E14  C03B  F06B         	movff	_duty_cicle1,___ftmul@f1
  2773  000E18  C03C  F06C         	movff	_duty_cicle1+1,___ftmul@f1+1
  2774  000E1C  C03D  F06D         	movff	_duty_cicle1+2,___ftmul@f1+2
  2775  000E20  0E3F               	movlw	63
  2776  000E22  0100               	movlb	0	; () banked
  2777  000E24  6F6E               	movwf	___ftmul@f2& (0+255),b
  2778  000E26  0EFA               	movlw	250
  2779  000E28  0100               	movlb	0	; () banked
  2780  000E2A  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  2781  000E2C  0E3E               	movlw	62
  2782  000E2E  0100               	movlb	0	; () banked
  2783  000E30  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  2784  000E32  ECEA  F004         	call	___ftmul	;wreg free
  2785  000E36  C06B  F02D         	movff	?___ftmul,_conversion1
  2786  000E3A  C06C  F02E         	movff	?___ftmul+1,_conversion1+1
  2787  000E3E  C06D  F02F         	movff	?___ftmul+2,_conversion1+2
  2788                           
  2789                           ;newmain.c: 387: CCPR1L = (int) conversion1 >> 2;
  2790  000E42  C02D  F060         	movff	_conversion1,___fttol@f1
  2791  000E46  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  2792  000E4A  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  2793  000E4E  EC3D  F008         	call	___fttol	;wreg free
  2794  000E52  0100               	movlb	0	; () banked
  2795  000E54  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2796  000E56  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2797  000E58  3360               	rrcf	?___fttol& (0+255),f,b
  2798  000E5A  0100               	movlb	0	; () banked
  2799  000E5C  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2800  000E5E  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2801  000E60  3360               	rrcf	?___fttol& (0+255),f,b
  2802  000E62  0100               	movlb	0	; () banked
  2803  000E64  5160               	movf	?___fttol& (0+255),w,b
  2804  000E66  6EBE               	movwf	4030,c	;volatile
  2805                           
  2806                           ; BSR set to: 0
  2807                           ;newmain.c: 388: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  2808  000E68  C02D  F060         	movff	_conversion1,___fttol@f1
  2809  000E6C  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  2810  000E70  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  2811  000E74  EC3D  F008         	call	___fttol	;wreg free
  2812  000E78  0E03               	movlw	3
  2813  000E7A  0100               	movlb	0	; () banked
  2814  000E7C  1760               	andwf	?___fttol& (0+255),f,b
  2815  000E7E  0100               	movlb	0	; () banked
  2816  000E80  3B60               	swapf	?___fttol& (0+255),f,b
  2817  000E82  0EF0               	movlw	240
  2818  000E84  0100               	movlb	0	; () banked
  2819  000E86  1760               	andwf	?___fttol& (0+255),f,b
  2820  000E88  50BD               	movf	4029,w,c	;volatile
  2821  000E8A  0B0F               	andlw	15
  2822  000E8C  0100               	movlb	0	; () banked
  2823  000E8E  1160               	iorwf	?___fttol& (0+255),w,b
  2824  000E90  6EBD               	movwf	4029,c	;volatile
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;newmain.c: 389: conversion2 = (float) duty_cicle2 * (500.0 / 1023.0);
  2828  000E92  C038  F06B         	movff	_duty_cicle2,___ftmul@f1
  2829  000E96  C039  F06C         	movff	_duty_cicle2+1,___ftmul@f1+1
  2830  000E9A  C03A  F06D         	movff	_duty_cicle2+2,___ftmul@f1+2
  2831  000E9E  0E3F               	movlw	63
  2832  000EA0  0100               	movlb	0	; () banked
  2833  000EA2  6F6E               	movwf	___ftmul@f2& (0+255),b
  2834  000EA4  0EFA               	movlw	250
  2835  000EA6  0100               	movlb	0	; () banked
  2836  000EA8  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  2837  000EAA  0E3E               	movlw	62
  2838  000EAC  0100               	movlb	0	; () banked
  2839  000EAE  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  2840  000EB0  ECEA  F004         	call	___ftmul	;wreg free
  2841  000EB4  C06B  F02A         	movff	?___ftmul,_conversion2
  2842  000EB8  C06C  F02B         	movff	?___ftmul+1,_conversion2+1
  2843  000EBC  C06D  F02C         	movff	?___ftmul+2,_conversion2+2
  2844                           
  2845                           ;newmain.c: 390: CCPR2L = (int) conversion2 >> 2;
  2846  000EC0  C02A  F060         	movff	_conversion2,___fttol@f1
  2847  000EC4  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  2848  000EC8  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  2849  000ECC  EC3D  F008         	call	___fttol	;wreg free
  2850  000ED0  0100               	movlb	0	; () banked
  2851  000ED2  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2852  000ED4  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2853  000ED6  3360               	rrcf	?___fttol& (0+255),f,b
  2854  000ED8  0100               	movlb	0	; () banked
  2855  000EDA  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  2856  000EDC  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  2857  000EDE  3360               	rrcf	?___fttol& (0+255),f,b
  2858  000EE0  0100               	movlb	0	; () banked
  2859  000EE2  5160               	movf	?___fttol& (0+255),w,b
  2860  000EE4  6EBB               	movwf	4027,c	;volatile
  2861                           
  2862                           ; BSR set to: 0
  2863                           ;newmain.c: 391: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  2864  000EE6  C02A  F060         	movff	_conversion2,___fttol@f1
  2865  000EEA  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  2866  000EEE  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  2867  000EF2  EC3D  F008         	call	___fttol	;wreg free
  2868  000EF6  0E03               	movlw	3
  2869  000EF8  0100               	movlb	0	; () banked
  2870  000EFA  1760               	andwf	?___fttol& (0+255),f,b
  2871  000EFC  0100               	movlb	0	; () banked
  2872  000EFE  3B60               	swapf	?___fttol& (0+255),f,b
  2873  000F00  0EF0               	movlw	240
  2874  000F02  0100               	movlb	0	; () banked
  2875  000F04  1760               	andwf	?___fttol& (0+255),f,b
  2876  000F06  50BD               	movf	4029,w,c	;volatile
  2877  000F08  0B0F               	andlw	15
  2878  000F0A  0100               	movlb	0	; () banked
  2879  000F0C  1160               	iorwf	?___fttol& (0+255),w,b
  2880  000F0E  6EBA               	movwf	4026,c	;volatile
  2881                           
  2882                           ; BSR set to: 0
  2883                           ;newmain.c: 392: if (conversion1 <= conversion2) {
  2884  000F10  C02A  F060         	movff	_conversion2,___ftge@ff1
  2885  000F14  C02B  F061         	movff	_conversion2+1,___ftge@ff1+1
  2886  000F18  C02C  F062         	movff	_conversion2+2,___ftge@ff1+2
  2887  000F1C  C02D  F063         	movff	_conversion1,___ftge@ff2
  2888  000F20  C02E  F064         	movff	_conversion1+1,___ftge@ff2+1
  2889  000F24  C02F  F065         	movff	_conversion1+2,___ftge@ff2+2
  2890  000F28  ECDF  F009         	call	___ftge	;wreg free
  2891  000F2C  0012               	return	
  2892  000F2E                     __end_of_pwmD:
  2893                           	opt stack 0
  2894                           tblptru	equ	0xFF8
  2895                           tblptrh	equ	0xFF7
  2896                           tblptrl	equ	0xFF6
  2897                           tablat	equ	0xFF5
  2898                           intcon	equ	0xFF2
  2899                           intcon2	equ	0xFF1
  2900                           intcon3	equ	0xFF0
  2901                           postinc0	equ	0xFEE
  2902                           wreg	equ	0xFE8
  2903                           status	equ	0xFD8
  2904                           
  2905 ;; *************** function _atras *****************
  2906 ;; Defined at:
  2907 ;;		line 434 in file "newmain.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2923 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2924 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2925 ;;Total ram usage:        2 bytes
  2926 ;; Hardware stack levels used:    1
  2927 ;; Hardware stack levels required when called:    6
  2928 ;; This function calls:
  2929 ;;		_pwm
  2930 ;; This function is called by:
  2931 ;;		_manual
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           	psect	text13
  2936  0017A6                     __ptext13:
  2937                           	opt stack 0
  2938  0017A6                     _atras:
  2939                           	opt stack 23
  2940                           
  2941                           ;newmain.c: 435: _delay((unsigned long)((100)*(8000000/4000.0)));
  2942                           
  2943                           ;incstack = 0
  2944  0017A6  0E02               	movlw	2
  2945  0017A8  0100               	movlb	0	; () banked
  2946  0017AA  6F7B               	movwf	(??_atras+1)& (0+255),b
  2947  0017AC  0E04               	movlw	4
  2948  0017AE  0100               	movlb	0	; () banked
  2949  0017B0  6F7A               	movwf	??_atras& (0+255),b
  2950  0017B2  0EBA               	movlw	186
  2951  0017B4                     u2957:
  2952  0017B4  2EE8               	decfsz	wreg,f,c
  2953  0017B6  D7FE               	bra	u2957
  2954  0017B8  2F7A               	decfsz	??_atras& (0+255),f,b
  2955  0017BA  D7FC               	bra	u2957
  2956  0017BC  2F7B               	decfsz	(??_atras+1)& (0+255),f,b
  2957  0017BE  D7FA               	bra	u2957
  2958  0017C0  F000               	nop	
  2959                           
  2960                           ;newmain.c: 436: pwm();
  2961  0017C2  EC65  F009         	call	_pwm	;wreg free
  2962                           
  2963                           ;newmain.c: 437: LATB0 = 0;
  2964  0017C6  908A               	bcf	3978,0,c	;volatile
  2965                           
  2966                           ;newmain.c: 438: LATB1 = 1;
  2967  0017C8  828A               	bsf	3978,1,c	;volatile
  2968                           
  2969                           ;newmain.c: 439: LATB2 = 0;
  2970  0017CA  948A               	bcf	3978,2,c	;volatile
  2971                           
  2972                           ;newmain.c: 440: LATB3 = 1;
  2973  0017CC  868A               	bsf	3978,3,c	;volatile
  2974  0017CE  0012               	return		;funcret
  2975  0017D0                     __end_of_atras:
  2976                           	opt stack 0
  2977                           tblptru	equ	0xFF8
  2978                           tblptrh	equ	0xFF7
  2979                           tblptrl	equ	0xFF6
  2980                           tablat	equ	0xFF5
  2981                           intcon	equ	0xFF2
  2982                           intcon2	equ	0xFF1
  2983                           intcon3	equ	0xFF0
  2984                           postinc0	equ	0xFEE
  2985                           wreg	equ	0xFE8
  2986                           status	equ	0xFD8
  2987                           
  2988 ;; *************** function _automatico *****************
  2989 ;; Defined at:
  2990 ;;		line 224 in file "newmain.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0, cstack
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3007 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        2 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    7
  3011 ;; This function calls:
  3012 ;;		___ftge
  3013 ;;		_adelante
  3014 ;;		_freno
  3015 ;;		_izquierda
  3016 ;;		_start2
  3017 ;; This function is called by:
  3018 ;;		_main
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text14
  3023  0000BE                     __ptext14:
  3024                           	opt stack 0
  3025  0000BE                     _automatico:
  3026                           	opt stack 23
  3027                           
  3028                           ;newmain.c: 225: for (i = 0; i <= 3; i++) {
  3029                           
  3030                           ;incstack = 0
  3031  0000BE  0E00               	movlw	0
  3032  0000C0  6E37               	movwf	_i+1,c
  3033  0000C2  0E00               	movlw	0
  3034  0000C4  6E36               	movwf	_i,c
  3035  0000C6  BE37               	btfsc	_i+1,7,c
  3036  0000C8  D008               	goto	l2952
  3037  0000CA  5037               	movf	_i+1,w,c
  3038  0000CC  E105               	bnz	u2850
  3039  0000CE  0E04               	movlw	4
  3040  0000D0  5C36               	subwf	_i,w,c
  3041  0000D2  B0D8               	btfsc	status,0,c
  3042  0000D4  D13A               	goto	l3022
  3043  0000D6  D001               	goto	l2952
  3044  0000D8                     u2850:
  3045  0000D8  D138               	goto	l3022
  3046  0000DA                     l2952:
  3047                           
  3048                           ;newmain.c: 227: start2();
  3049  0000DA  EC43  F00A         	call	_start2	;wreg free
  3050                           
  3051                           ;newmain.c: 228: while (b >= 4.5) {
  3052  0000DE  D002               	goto	l250
  3053  0000E0                     l2954:
  3054                           
  3055                           ;newmain.c: 229: start2();
  3056  0000E0  EC43  F00A         	call	_start2	;wreg free
  3057  0000E4                     l250:
  3058  0000E4  C021  F060         	movff	_b,___ftge@ff1
  3059  0000E8  C022  F061         	movff	_b+1,___ftge@ff1+1
  3060  0000EC  C023  F062         	movff	_b+2,___ftge@ff1+2
  3061  0000F0  0E00               	movlw	0
  3062  0000F2  0100               	movlb	0	; () banked
  3063  0000F4  6F63               	movwf	___ftge@ff2& (0+255),b
  3064  0000F6  0E90               	movlw	144
  3065  0000F8  0100               	movlb	0	; () banked
  3066  0000FA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  3067  0000FC  0E40               	movlw	64
  3068  0000FE  0100               	movlb	0	; () banked
  3069  000100  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  3070  000102  ECDF  F009         	call	___ftge	;wreg free
  3071  000106  0100               	movlb	0	; () banked
  3072  000108  B0D8               	btfsc	status,0,c
  3073  00010A  D7EA               	goto	l2954
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;newmain.c: 230: }
  3077                           ;newmain.c: 231: adelante();
  3078                           
  3079                           ; BSR set to: 0
  3080  00010C  ECE8  F00B         	call	_adelante	;wreg free
  3081                           
  3082                           ;newmain.c: 232: _delay((unsigned long)((2400)*(8000000/4000.0)));
  3083  000110  0E19               	movlw	25
  3084  000112  0100               	movlb	0	; () banked
  3085  000114  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3086  000116  0E5A               	movlw	90
  3087  000118  0100               	movlb	0	; () banked
  3088  00011A  6F7C               	movwf	??_automatico& (0+255),b
  3089  00011C  0EB1               	movlw	177
  3090  00011E                     u2967:
  3091  00011E  2EE8               	decfsz	wreg,f,c
  3092  000120  D7FE               	bra	u2967
  3093  000122  2F7C               	decfsz	??_automatico& (0+255),f,b
  3094  000124  D7FC               	bra	u2967
  3095  000126  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3096  000128  D7FA               	bra	u2967
  3097  00012A  D000               	nop2	
  3098                           
  3099                           ;newmain.c: 233: freno();
  3100  00012C  EC10  F00C         	call	_freno	;wreg free
  3101                           
  3102                           ;newmain.c: 234: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3103  000130  0E15               	movlw	21
  3104  000132  0100               	movlb	0	; () banked
  3105  000134  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3106  000136  0E4B               	movlw	75
  3107  000138  0100               	movlb	0	; () banked
  3108  00013A  6F7C               	movwf	??_automatico& (0+255),b
  3109  00013C  0EBE               	movlw	190
  3110  00013E                     u2977:
  3111  00013E  2EE8               	decfsz	wreg,f,c
  3112  000140  D7FE               	bra	u2977
  3113  000142  2F7C               	decfsz	??_automatico& (0+255),f,b
  3114  000144  D7FC               	bra	u2977
  3115  000146  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3116  000148  D7FA               	bra	u2977
  3117  00014A  F000               	nop	
  3118                           
  3119                           ;newmain.c: 235: izquierda();
  3120  00014C  EC04  F00C         	call	_izquierda	;wreg free
  3121                           
  3122                           ;newmain.c: 236: _delay((unsigned long)((800)*(8000000/4000.0)));
  3123  000150  0E09               	movlw	9
  3124  000152  0100               	movlb	0	; () banked
  3125  000154  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3126  000156  0E1E               	movlw	30
  3127  000158  0100               	movlb	0	; () banked
  3128  00015A  6F7C               	movwf	??_automatico& (0+255),b
  3129  00015C  0EE4               	movlw	228
  3130  00015E                     u2987:
  3131  00015E  2EE8               	decfsz	wreg,f,c
  3132  000160  D7FE               	bra	u2987
  3133  000162  2F7C               	decfsz	??_automatico& (0+255),f,b
  3134  000164  D7FC               	bra	u2987
  3135  000166  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3136  000168  D7FA               	bra	u2987
  3137  00016A  F000               	nop	
  3138                           
  3139                           ;newmain.c: 237: freno();
  3140  00016C  EC10  F00C         	call	_freno	;wreg free
  3141                           
  3142                           ;newmain.c: 238: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3143  000170  0E15               	movlw	21
  3144  000172  0100               	movlb	0	; () banked
  3145  000174  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3146  000176  0E4B               	movlw	75
  3147  000178  0100               	movlb	0	; () banked
  3148  00017A  6F7C               	movwf	??_automatico& (0+255),b
  3149  00017C  0EBE               	movlw	190
  3150  00017E                     u2997:
  3151  00017E  2EE8               	decfsz	wreg,f,c
  3152  000180  D7FE               	bra	u2997
  3153  000182  2F7C               	decfsz	??_automatico& (0+255),f,b
  3154  000184  D7FC               	bra	u2997
  3155  000186  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3156  000188  D7FA               	bra	u2997
  3157  00018A  F000               	nop	
  3158                           
  3159                           ;newmain.c: 239: adelante();
  3160  00018C  ECE8  F00B         	call	_adelante	;wreg free
  3161                           
  3162                           ;newmain.c: 240: _delay((unsigned long)((2200)*(8000000/4000.0)));
  3163  000190  0E17               	movlw	23
  3164  000192  0100               	movlb	0	; () banked
  3165  000194  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3166  000196  0E53               	movlw	83
  3167  000198  0100               	movlb	0	; () banked
  3168  00019A  6F7C               	movwf	??_automatico& (0+255),b
  3169  00019C  0E37               	movlw	55
  3170  00019E                     u3007:
  3171  00019E  2EE8               	decfsz	wreg,f,c
  3172  0001A0  D7FE               	bra	u3007
  3173  0001A2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3174  0001A4  D7FC               	bra	u3007
  3175  0001A6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3176  0001A8  D7FA               	bra	u3007
  3177  0001AA  D000               	nop2	
  3178                           
  3179                           ;newmain.c: 241: freno();
  3180  0001AC  EC10  F00C         	call	_freno	;wreg free
  3181                           
  3182                           ;newmain.c: 242: _delay((unsigned long)((2900)*(8000000/4000.0)));
  3183  0001B0  0E1E               	movlw	30
  3184  0001B2  0100               	movlb	0	; () banked
  3185  0001B4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3186  0001B6  0E6D               	movlw	109
  3187  0001B8  0100               	movlb	0	; () banked
  3188  0001BA  6F7C               	movwf	??_automatico& (0+255),b
  3189  0001BC  0E61               	movlw	97
  3190  0001BE                     u3017:
  3191  0001BE  2EE8               	decfsz	wreg,f,c
  3192  0001C0  D7FE               	bra	u3017
  3193  0001C2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3194  0001C4  D7FC               	bra	u3017
  3195  0001C6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3196  0001C8  D7FA               	bra	u3017
  3197  0001CA  D000               	nop2	
  3198                           
  3199                           ;newmain.c: 243: start2();
  3200  0001CC  EC43  F00A         	call	_start2	;wreg free
  3201                           
  3202                           ;newmain.c: 245: while (b < 4.5) {
  3203  0001D0  D002               	goto	l253
  3204  0001D2                     l2980:
  3205                           
  3206                           ;newmain.c: 246: start2();
  3207  0001D2  EC43  F00A         	call	_start2	;wreg free
  3208  0001D6                     l253:
  3209  0001D6  C021  F060         	movff	_b,___ftge@ff1
  3210  0001DA  C022  F061         	movff	_b+1,___ftge@ff1+1
  3211  0001DE  C023  F062         	movff	_b+2,___ftge@ff1+2
  3212  0001E2  0E00               	movlw	0
  3213  0001E4  0100               	movlb	0	; () banked
  3214  0001E6  6F63               	movwf	___ftge@ff2& (0+255),b
  3215  0001E8  0E90               	movlw	144
  3216  0001EA  0100               	movlb	0	; () banked
  3217  0001EC  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  3218  0001EE  0E40               	movlw	64
  3219  0001F0  0100               	movlb	0	; () banked
  3220  0001F2  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  3221  0001F4  ECDF  F009         	call	___ftge	;wreg free
  3222  0001F8  0100               	movlb	0	; () banked
  3223  0001FA  A0D8               	btfss	status,0,c
  3224  0001FC  D7EA               	goto	l2980
  3225                           
  3226                           ; BSR set to: 0
  3227                           ;newmain.c: 247: }
  3228                           ;newmain.c: 248: izquierda();
  3229                           
  3230                           ; BSR set to: 0
  3231  0001FE  EC04  F00C         	call	_izquierda	;wreg free
  3232                           
  3233                           ;newmain.c: 249: _delay((unsigned long)((800)*(8000000/4000.0)));
  3234  000202  0E09               	movlw	9
  3235  000204  0100               	movlb	0	; () banked
  3236  000206  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3237  000208  0E1E               	movlw	30
  3238  00020A  0100               	movlb	0	; () banked
  3239  00020C  6F7C               	movwf	??_automatico& (0+255),b
  3240  00020E  0EE4               	movlw	228
  3241  000210                     u3027:
  3242  000210  2EE8               	decfsz	wreg,f,c
  3243  000212  D7FE               	bra	u3027
  3244  000214  2F7C               	decfsz	??_automatico& (0+255),f,b
  3245  000216  D7FC               	bra	u3027
  3246  000218  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3247  00021A  D7FA               	bra	u3027
  3248  00021C  F000               	nop	
  3249                           
  3250                           ;newmain.c: 250: freno();
  3251  00021E  EC10  F00C         	call	_freno	;wreg free
  3252                           
  3253                           ;newmain.c: 251: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3254  000222  0E15               	movlw	21
  3255  000224  0100               	movlb	0	; () banked
  3256  000226  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3257  000228  0E4B               	movlw	75
  3258  00022A  0100               	movlb	0	; () banked
  3259  00022C  6F7C               	movwf	??_automatico& (0+255),b
  3260  00022E  0EBE               	movlw	190
  3261  000230                     u3037:
  3262  000230  2EE8               	decfsz	wreg,f,c
  3263  000232  D7FE               	bra	u3037
  3264  000234  2F7C               	decfsz	??_automatico& (0+255),f,b
  3265  000236  D7FC               	bra	u3037
  3266  000238  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3267  00023A  D7FA               	bra	u3037
  3268  00023C  F000               	nop	
  3269                           
  3270                           ;newmain.c: 252: adelante();
  3271  00023E  ECE8  F00B         	call	_adelante	;wreg free
  3272                           
  3273                           ;newmain.c: 253: _delay((unsigned long)((1900)*(8000000/4000.0)));
  3274  000242  0E14               	movlw	20
  3275  000244  0100               	movlb	0	; () banked
  3276  000246  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3277  000248  0E48               	movlw	72
  3278  00024A  0100               	movlb	0	; () banked
  3279  00024C  6F7C               	movwf	??_automatico& (0+255),b
  3280  00024E  0E01               	movlw	1
  3281  000250                     u3047:
  3282  000250  2EE8               	decfsz	wreg,f,c
  3283  000252  D7FE               	bra	u3047
  3284  000254  2F7C               	decfsz	??_automatico& (0+255),f,b
  3285  000256  D7FC               	bra	u3047
  3286  000258  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3287  00025A  D7FA               	bra	u3047
  3288                           
  3289                           ;newmain.c: 254: freno();
  3290  00025C  EC10  F00C         	call	_freno	;wreg free
  3291                           
  3292                           ;newmain.c: 255: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3293  000260  0E15               	movlw	21
  3294  000262  0100               	movlb	0	; () banked
  3295  000264  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3296  000266  0E4B               	movlw	75
  3297  000268  0100               	movlb	0	; () banked
  3298  00026A  6F7C               	movwf	??_automatico& (0+255),b
  3299  00026C  0EBE               	movlw	190
  3300  00026E                     u3057:
  3301  00026E  2EE8               	decfsz	wreg,f,c
  3302  000270  D7FE               	bra	u3057
  3303  000272  2F7C               	decfsz	??_automatico& (0+255),f,b
  3304  000274  D7FC               	bra	u3057
  3305  000276  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3306  000278  D7FA               	bra	u3057
  3307  00027A  F000               	nop	
  3308                           
  3309                           ;newmain.c: 256: izquierda();
  3310  00027C  EC04  F00C         	call	_izquierda	;wreg free
  3311                           
  3312                           ;newmain.c: 257: _delay((unsigned long)((800)*(8000000/4000.0)));
  3313  000280  0E09               	movlw	9
  3314  000282  0100               	movlb	0	; () banked
  3315  000284  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3316  000286  0E1E               	movlw	30
  3317  000288  0100               	movlb	0	; () banked
  3318  00028A  6F7C               	movwf	??_automatico& (0+255),b
  3319  00028C  0EE4               	movlw	228
  3320  00028E                     u3067:
  3321  00028E  2EE8               	decfsz	wreg,f,c
  3322  000290  D7FE               	bra	u3067
  3323  000292  2F7C               	decfsz	??_automatico& (0+255),f,b
  3324  000294  D7FC               	bra	u3067
  3325  000296  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3326  000298  D7FA               	bra	u3067
  3327  00029A  F000               	nop	
  3328                           
  3329                           ;newmain.c: 258: freno();
  3330  00029C  EC10  F00C         	call	_freno	;wreg free
  3331                           
  3332                           ;newmain.c: 259: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3333  0002A0  0E15               	movlw	21
  3334  0002A2  0100               	movlb	0	; () banked
  3335  0002A4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3336  0002A6  0E4B               	movlw	75
  3337  0002A8  0100               	movlb	0	; () banked
  3338  0002AA  6F7C               	movwf	??_automatico& (0+255),b
  3339  0002AC  0EBE               	movlw	190
  3340  0002AE                     u3077:
  3341  0002AE  2EE8               	decfsz	wreg,f,c
  3342  0002B0  D7FE               	bra	u3077
  3343  0002B2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3344  0002B4  D7FC               	bra	u3077
  3345  0002B6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3346  0002B8  D7FA               	bra	u3077
  3347  0002BA  F000               	nop	
  3348                           
  3349                           ;newmain.c: 260: adelante();
  3350  0002BC  ECE8  F00B         	call	_adelante	;wreg free
  3351                           
  3352                           ;newmain.c: 261: _delay((unsigned long)((1800)*(8000000/4000.0)));
  3353  0002C0  0E13               	movlw	19
  3354  0002C2  0100               	movlb	0	; () banked
  3355  0002C4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3356  0002C6  0E44               	movlw	68
  3357  0002C8  0100               	movlb	0	; () banked
  3358  0002CA  6F7C               	movwf	??_automatico& (0+255),b
  3359  0002CC  0E44               	movlw	68
  3360  0002CE                     u3087:
  3361  0002CE  2EE8               	decfsz	wreg,f,c
  3362  0002D0  D7FE               	bra	u3087
  3363  0002D2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3364  0002D4  D7FC               	bra	u3087
  3365  0002D6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3366  0002D8  D7FA               	bra	u3087
  3367  0002DA  F000               	nop	
  3368                           
  3369                           ;newmain.c: 262: freno();
  3370  0002DC  EC10  F00C         	call	_freno	;wreg free
  3371                           
  3372                           ;newmain.c: 263: _delay((unsigned long)((2000)*(8000000/4000.0)));
  3373  0002E0  0E15               	movlw	21
  3374  0002E2  0100               	movlb	0	; () banked
  3375  0002E4  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3376  0002E6  0E4B               	movlw	75
  3377  0002E8  0100               	movlb	0	; () banked
  3378  0002EA  6F7C               	movwf	??_automatico& (0+255),b
  3379  0002EC  0EBE               	movlw	190
  3380  0002EE                     u3097:
  3381  0002EE  2EE8               	decfsz	wreg,f,c
  3382  0002F0  D7FE               	bra	u3097
  3383  0002F2  2F7C               	decfsz	??_automatico& (0+255),f,b
  3384  0002F4  D7FC               	bra	u3097
  3385  0002F6  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3386  0002F8  D7FA               	bra	u3097
  3387  0002FA  F000               	nop	
  3388                           
  3389                           ;newmain.c: 264: izquierda();
  3390  0002FC  EC04  F00C         	call	_izquierda	;wreg free
  3391                           
  3392                           ;newmain.c: 265: _delay((unsigned long)((800)*(8000000/4000.0)));
  3393  000300  0E09               	movlw	9
  3394  000302  0100               	movlb	0	; () banked
  3395  000304  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3396  000306  0E1E               	movlw	30
  3397  000308  0100               	movlb	0	; () banked
  3398  00030A  6F7C               	movwf	??_automatico& (0+255),b
  3399  00030C  0EE4               	movlw	228
  3400  00030E                     u3107:
  3401  00030E  2EE8               	decfsz	wreg,f,c
  3402  000310  D7FE               	bra	u3107
  3403  000312  2F7C               	decfsz	??_automatico& (0+255),f,b
  3404  000314  D7FC               	bra	u3107
  3405  000316  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3406  000318  D7FA               	bra	u3107
  3407  00031A  F000               	nop	
  3408                           
  3409                           ;newmain.c: 266: freno();
  3410  00031C  EC10  F00C         	call	_freno	;wreg free
  3411                           
  3412                           ;newmain.c: 267: _delay((unsigned long)((5000)*(8000000/4000.0)));
  3413  000320  0E33               	movlw	51
  3414  000322  0100               	movlb	0	; () banked
  3415  000324  6F7D               	movwf	(??_automatico+1)& (0+255),b
  3416  000326  0EBB               	movlw	187
  3417  000328  0100               	movlb	0	; () banked
  3418  00032A  6F7C               	movwf	??_automatico& (0+255),b
  3419  00032C  0EDF               	movlw	223
  3420  00032E                     u3117:
  3421  00032E  2EE8               	decfsz	wreg,f,c
  3422  000330  D7FE               	bra	u3117
  3423  000332  2F7C               	decfsz	??_automatico& (0+255),f,b
  3424  000334  D7FC               	bra	u3117
  3425  000336  2F7D               	decfsz	(??_automatico+1)& (0+255),f,b
  3426  000338  D7FA               	bra	u3117
  3427  00033A  D000               	nop2	
  3428  00033C  4A36               	infsnz	_i,f,c
  3429  00033E  2A37               	incf	_i+1,f,c
  3430  000340  BE37               	btfsc	_i+1,7,c
  3431  000342  D6CB               	goto	l2952
  3432  000344  5037               	movf	_i+1,w,c
  3433  000346  E101               	bnz	l3022
  3434  000348  D6C2               	goto	L1
  3435  00034A                     l3022:
  3436                           
  3437                           ;newmain.c: 270: }
  3438                           ;newmain.c: 271: ADCON0 = 0x01;
  3439  00034A  0E01               	movlw	1
  3440  00034C  6EC2               	movwf	4034,c	;volatile
  3441                           
  3442                           ;newmain.c: 272: x = 0;
  3443  00034E  0E00               	movlw	0
  3444  000350  0100               	movlb	0	; () banked
  3445  000352  6FA2               	movwf	(_x+1)& (0+255),b
  3446  000354  0E00               	movlw	0
  3447  000356  6FA1               	movwf	_x& (0+255),b
  3448                           
  3449                           ; BSR set to: 0
  3450                           ;newmain.c: 273: freno();
  3451  000358  EC10  F00C         	call	_freno	;wreg free
  3452  00035C  0012               	return		;funcret
  3453  00035E                     __end_of_automatico:
  3454                           	opt stack 0
  3455                           tblptru	equ	0xFF8
  3456                           tblptrh	equ	0xFF7
  3457                           tblptrl	equ	0xFF6
  3458                           tablat	equ	0xFF5
  3459                           intcon	equ	0xFF2
  3460                           intcon2	equ	0xFF1
  3461                           intcon3	equ	0xFF0
  3462                           postinc0	equ	0xFEE
  3463                           wreg	equ	0xFE8
  3464                           status	equ	0xFD8
  3465                           
  3466 ;; *************** function _start2 *****************
  3467 ;; Defined at:
  3468 ;;		line 171 in file "newmain.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;		None
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;		None
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0, cstack
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3482 ;;      Params:         0       0       0       0       0       0       0       0       0
  3483 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3484 ;;      Temps:          0       2       0       0       0       0       0       0       0
  3485 ;;      Totals:         0       2       0       0       0       0       0       0       0
  3486 ;;Total ram usage:        2 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    5
  3489 ;; This function calls:
  3490 ;;		___awtoft
  3491 ;;		___ftmul
  3492 ;; This function is called by:
  3493 ;;		_automatico
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text15
  3498  001486                     __ptext15:
  3499                           	opt stack 0
  3500  001486                     _start2:
  3501                           	opt stack 24
  3502                           
  3503                           ;newmain.c: 172: ADCON0bits.GO = 1;
  3504                           
  3505                           ;incstack = 0
  3506  001486  82C2               	bsf	4034,1,c	;volatile
  3507  001488                     l203:
  3508  001488  B2C2               	btfsc	4034,1,c	;volatile
  3509  00148A  D7FE               	goto	l203
  3510                           
  3511                           ;newmain.c: 174: if (x == 2) {
  3512  00148C  0E02               	movlw	2
  3513  00148E  0100               	movlb	0	; () banked
  3514  001490  19A1               	xorwf	_x& (0+255),w,b
  3515  001492  0100               	movlb	0	; () banked
  3516  001494  11A2               	iorwf	(_x+1)& (0+255),w,b
  3517  001496  A4D8               	btfss	status,2,c
  3518  001498  0012               	return	
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;newmain.c: 175: _delay((unsigned long)((10)*(8000000/4000.0)));
  3522  00149A  0E1A               	movlw	26
  3523  00149C  0100               	movlb	0	; () banked
  3524  00149E  6F7A               	movwf	??_start2& (0+255),b
  3525  0014A0  0EF8               	movlw	248
  3526  0014A2                     u3127:
  3527  0014A2  2EE8               	decfsz	wreg,f,c
  3528  0014A4  D7FE               	bra	u3127
  3529  0014A6  2F7A               	decfsz	??_start2& (0+255),f,b
  3530  0014A8  D7FC               	bra	u3127
  3531  0014AA  F000               	nop	
  3532                           
  3533                           ;newmain.c: 176: a = ADRESH << 8 | ADRESL;
  3534  0014AC  50C3               	movf	4035,w,c	;volatile
  3535  0014AE  CFC4 F07A          	movff	4036,??_start2	;volatile
  3536  0014B2  0100               	movlb	0	; () banked
  3537  0014B4  6B7B               	clrf	(??_start2+1)& (0+255),b
  3538  0014B6  C07A  F07B         	movff	??_start2,??_start2+1
  3539  0014BA  0100               	movlb	0	; () banked
  3540  0014BC  6B7A               	clrf	??_start2& (0+255),b
  3541  0014BE  0100               	movlb	0	; () banked
  3542  0014C0  117A               	iorwf	??_start2& (0+255),w,b
  3543  0014C2  0100               	movlb	0	; () banked
  3544  0014C4  6F99               	movwf	_a& (0+255),b
  3545  0014C6  0100               	movlb	0	; () banked
  3546  0014C8  517B               	movf	(??_start2+1)& (0+255),w,b
  3547  0014CA  0100               	movlb	0	; () banked
  3548  0014CC  6F9A               	movwf	(_a+1)& (0+255),b
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;newmain.c: 177: b = (float) a * (5.0 / 1023.0);
  3552  0014CE  C099  F068         	movff	_a,___awtoft@c
  3553  0014D2  C09A  F069         	movff	_a+1,___awtoft@c+1
  3554  0014D6  EC94  F00B         	call	___awtoft	;wreg free
  3555  0014DA  C068  F06B         	movff	?___awtoft,___ftmul@f1
  3556  0014DE  C069  F06C         	movff	?___awtoft+1,___ftmul@f1+1
  3557  0014E2  C06A  F06D         	movff	?___awtoft+2,___ftmul@f1+2
  3558  0014E6  0E28               	movlw	40
  3559  0014E8  0100               	movlb	0	; () banked
  3560  0014EA  6F6E               	movwf	___ftmul@f2& (0+255),b
  3561  0014EC  0EA0               	movlw	160
  3562  0014EE  0100               	movlb	0	; () banked
  3563  0014F0  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3564  0014F2  0E3B               	movlw	59
  3565  0014F4  0100               	movlb	0	; () banked
  3566  0014F6  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3567  0014F8  ECEA  F004         	call	___ftmul	;wreg free
  3568  0014FC  C06B  F021         	movff	?___ftmul,_b
  3569  001500  C06C  F022         	movff	?___ftmul+1,_b+1
  3570  001504  C06D  F023         	movff	?___ftmul+2,_b+2
  3571                           
  3572                           ;newmain.c: 178: _delay((unsigned long)((3)*(8000000/4000000.0)));
  3573  001508  D000               	nop2		;2 cycle nop
  3574  00150A  D000               	nop2		;2 cycle nop
  3575  00150C  D000               	nop2		;2 cycle nop
  3576  00150E  0012               	return	
  3577  001510                     __end_of_start2:
  3578                           	opt stack 0
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           intcon	equ	0xFF2
  3584                           intcon2	equ	0xFF1
  3585                           intcon3	equ	0xFF0
  3586                           postinc0	equ	0xFEE
  3587                           wreg	equ	0xFE8
  3588                           status	equ	0xFD8
  3589                           
  3590 ;; *************** function ___awtoft *****************
  3591 ;; Defined at:
  3592 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awtoft.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  c               2    8[BANK0 ] int 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;  sign            1   31[COMRAM] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  3    8[BANK0 ] float 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3606 ;;      Params:         0       3       0       0       0       0       0       0       0
  3607 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3608 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3609 ;;      Totals:         1       3       0       0       0       0       0       0       0
  3610 ;;Total ram usage:        4 bytes
  3611 ;; Hardware stack levels used:    1
  3612 ;; Hardware stack levels required when called:    4
  3613 ;; This function calls:
  3614 ;;		___ftpack
  3615 ;; This function is called by:
  3616 ;;		_start
  3617 ;;		_start1
  3618 ;;		_start2
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text16
  3623  001728                     __ptext16:
  3624                           	opt stack 0
  3625  001728                     ___awtoft:
  3626                           	opt stack 25
  3627                           
  3628                           ;incstack = 0
  3629  001728  0E00               	movlw	0
  3630  00172A  6E20               	movwf	___awtoft@sign,c
  3631  00172C  0100               	movlb	0	; () banked
  3632  00172E  AF69               	btfss	(___awtoft@c+1)& (0+255),7,b
  3633  001730  D007               	goto	l2742
  3634                           
  3635                           ; BSR set to: 0
  3636  001732  0100               	movlb	0	; () banked
  3637  001734  6D68               	negf	___awtoft@c& (0+255),b
  3638  001736  1F69               	comf	(___awtoft@c+1)& (0+255),f,b
  3639  001738  B0D8               	btfsc	status,0,c
  3640  00173A  2B69               	incf	(___awtoft@c+1)& (0+255),f,b
  3641                           
  3642                           ; BSR set to: 0
  3643  00173C  0E01               	movlw	1
  3644  00173E  6E20               	movwf	___awtoft@sign,c
  3645  001740                     l2742:
  3646                           
  3647                           ; BSR set to: 0
  3648  001740  C068  F060         	movff	___awtoft@c,___ftpack@arg
  3649  001744  C069  F061         	movff	___awtoft@c+1,___ftpack@arg+1
  3650  001748  0100               	movlb	0	; () banked
  3651  00174A  6B62               	clrf	(___ftpack@arg+2)& (0+255),b
  3652  00174C  0E8E               	movlw	142
  3653  00174E  0100               	movlb	0	; () banked
  3654  001750  6F63               	movwf	___ftpack@exp& (0+255),b
  3655  001752  C020  F064         	movff	___awtoft@sign,___ftpack@sign
  3656  001756  ECDF  F008         	call	___ftpack	;wreg free
  3657  00175A  C060  F068         	movff	?___ftpack,?___awtoft
  3658  00175E  C061  F069         	movff	?___ftpack+1,?___awtoft+1
  3659  001762  C062  F06A         	movff	?___ftpack+2,?___awtoft+2
  3660  001766  0012               	return	
  3661  001768                     __end_of___awtoft:
  3662                           	opt stack 0
  3663                           tblptru	equ	0xFF8
  3664                           tblptrh	equ	0xFF7
  3665                           tblptrl	equ	0xFF6
  3666                           tablat	equ	0xFF5
  3667                           intcon	equ	0xFF2
  3668                           intcon2	equ	0xFF1
  3669                           intcon3	equ	0xFF0
  3670                           postinc0	equ	0xFEE
  3671                           wreg	equ	0xFE8
  3672                           status	equ	0xFD8
  3673                           
  3674 ;; *************** function _izquierda *****************
  3675 ;; Defined at:
  3676 ;;		line 451 in file "newmain.c"
  3677 ;; Parameters:    Size  Location     Type
  3678 ;;		None
  3679 ;; Auto vars:     Size  Location     Type
  3680 ;;		None
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  1    wreg      void 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0, cstack
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3690 ;;      Params:         0       0       0       0       0       0       0       0       0
  3691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3693 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3694 ;;Total ram usage:        0 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; Hardware stack levels required when called:    6
  3697 ;; This function calls:
  3698 ;;		_pwmI
  3699 ;; This function is called by:
  3700 ;;		_automatico
  3701 ;;		_manual
  3702 ;; This function uses a non-reentrant model
  3703 ;;
  3704                           
  3705                           	psect	text17
  3706  001808                     __ptext17:
  3707                           	opt stack 0
  3708  001808                     _izquierda:
  3709                           	opt stack 23
  3710                           
  3711                           ;newmain.c: 452: pwmI();
  3712                           
  3713                           ;incstack = 0
  3714  001808  EC97  F007         	call	_pwmI	;wreg free
  3715                           
  3716                           ;newmain.c: 453: LATB0 = 1;
  3717  00180C  808A               	bsf	3978,0,c	;volatile
  3718                           
  3719                           ;newmain.c: 454: LATB1 = 0;
  3720  00180E  928A               	bcf	3978,1,c	;volatile
  3721                           
  3722                           ;newmain.c: 455: LATB2 = 1;
  3723  001810  848A               	bsf	3978,2,c	;volatile
  3724                           
  3725                           ;newmain.c: 456: LATB3 = 0;
  3726  001812  968A               	bcf	3978,3,c	;volatile
  3727  001814  0012               	return		;funcret
  3728  001816                     __end_of_izquierda:
  3729                           	opt stack 0
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           intcon	equ	0xFF2
  3735                           intcon2	equ	0xFF1
  3736                           intcon3	equ	0xFF0
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           status	equ	0xFD8
  3740                           
  3741 ;; *************** function _pwmI *****************
  3742 ;; Defined at:
  3743 ;;		line 361 in file "newmain.c"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg, status,2, status,0, cstack
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used:    1
  3763 ;; Hardware stack levels required when called:    5
  3764 ;; This function calls:
  3765 ;;		___ftge
  3766 ;;		___ftmul
  3767 ;;		___fttol
  3768 ;; This function is called by:
  3769 ;;		_izquierda
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text18
  3774  000F2E                     __ptext18:
  3775                           	opt stack 0
  3776  000F2E                     _pwmI:
  3777                           	opt stack 23
  3778                           
  3779                           ;newmain.c: 362: if (y == 2) {
  3780                           
  3781                           ;incstack = 0
  3782  000F2E  0E02               	movlw	2
  3783  000F30  183E               	xorwf	_y,w,c
  3784  000F32  103F               	iorwf	_y+1,w,c
  3785  000F34  A4D8               	btfss	status,2,c
  3786  000F36  D014               	goto	l2632
  3787                           
  3788                           ;newmain.c: 363: duty_cicle1 = 190;
  3789  000F38  0E00               	movlw	0
  3790  000F3A  6E3B               	movwf	_duty_cicle1,c
  3791  000F3C  0E3E               	movlw	62
  3792  000F3E  6E3C               	movwf	_duty_cicle1+1,c
  3793  000F40  0E43               	movlw	67
  3794  000F42  6E3D               	movwf	_duty_cicle1+2,c
  3795                           
  3796                           ;newmain.c: 364: duty_cicle2 = 373.3;
  3797  000F44  0EA6               	movlw	166
  3798  000F46  6E38               	movwf	_duty_cicle2,c
  3799  000F48  0EBA               	movlw	186
  3800  000F4A  6E39               	movwf	_duty_cicle2+1,c
  3801  000F4C  0E43               	movlw	67
  3802  000F4E  6E3A               	movwf	_duty_cicle2+2,c
  3803                           
  3804                           ;newmain.c: 365: y = 1;
  3805  000F50  0E00               	movlw	0
  3806  000F52  6E3F               	movwf	_y+1,c
  3807  000F54  0E01               	movlw	1
  3808  000F56  6E3E               	movwf	_y,c
  3809                           
  3810                           ;newmain.c: 366: y = 3;
  3811  000F58  0E00               	movlw	0
  3812  000F5A  6E3F               	movwf	_y+1,c
  3813  000F5C  0E03               	movlw	3
  3814  000F5E  6E3E               	movwf	_y,c
  3815  000F60                     l2632:
  3816                           
  3817                           ;newmain.c: 367: }
  3818                           ;newmain.c: 368: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  3819  000F60  C03B  F06B         	movff	_duty_cicle1,___ftmul@f1
  3820  000F64  C03C  F06C         	movff	_duty_cicle1+1,___ftmul@f1+1
  3821  000F68  C03D  F06D         	movff	_duty_cicle1+2,___ftmul@f1+2
  3822  000F6C  0E3F               	movlw	63
  3823  000F6E  0100               	movlb	0	; () banked
  3824  000F70  6F6E               	movwf	___ftmul@f2& (0+255),b
  3825  000F72  0EFA               	movlw	250
  3826  000F74  0100               	movlb	0	; () banked
  3827  000F76  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3828  000F78  0E3E               	movlw	62
  3829  000F7A  0100               	movlb	0	; () banked
  3830  000F7C  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3831  000F7E  ECEA  F004         	call	___ftmul	;wreg free
  3832  000F82  C06B  F02D         	movff	?___ftmul,_conversion1
  3833  000F86  C06C  F02E         	movff	?___ftmul+1,_conversion1+1
  3834  000F8A  C06D  F02F         	movff	?___ftmul+2,_conversion1+2
  3835                           
  3836                           ;newmain.c: 369: CCPR1L = (int) conversion1 >> 2;
  3837  000F8E  C02D  F060         	movff	_conversion1,___fttol@f1
  3838  000F92  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  3839  000F96  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  3840  000F9A  EC3D  F008         	call	___fttol	;wreg free
  3841  000F9E  0100               	movlb	0	; () banked
  3842  000FA0  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3843  000FA2  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3844  000FA4  3360               	rrcf	?___fttol& (0+255),f,b
  3845  000FA6  0100               	movlb	0	; () banked
  3846  000FA8  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3847  000FAA  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3848  000FAC  3360               	rrcf	?___fttol& (0+255),f,b
  3849  000FAE  0100               	movlb	0	; () banked
  3850  000FB0  5160               	movf	?___fttol& (0+255),w,b
  3851  000FB2  6EBE               	movwf	4030,c	;volatile
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;newmain.c: 370: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  3855  000FB4  C02D  F060         	movff	_conversion1,___fttol@f1
  3856  000FB8  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  3857  000FBC  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  3858  000FC0  EC3D  F008         	call	___fttol	;wreg free
  3859  000FC4  0E03               	movlw	3
  3860  000FC6  0100               	movlb	0	; () banked
  3861  000FC8  1760               	andwf	?___fttol& (0+255),f,b
  3862  000FCA  0100               	movlb	0	; () banked
  3863  000FCC  3B60               	swapf	?___fttol& (0+255),f,b
  3864  000FCE  0EF0               	movlw	240
  3865  000FD0  0100               	movlb	0	; () banked
  3866  000FD2  1760               	andwf	?___fttol& (0+255),f,b
  3867  000FD4  50BD               	movf	4029,w,c	;volatile
  3868  000FD6  0B0F               	andlw	15
  3869  000FD8  0100               	movlb	0	; () banked
  3870  000FDA  1160               	iorwf	?___fttol& (0+255),w,b
  3871  000FDC  6EBD               	movwf	4029,c	;volatile
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;newmain.c: 371: conversion2 = (float) duty_cicle2 * (500.0 / 1023.0);
  3875  000FDE  C038  F06B         	movff	_duty_cicle2,___ftmul@f1
  3876  000FE2  C039  F06C         	movff	_duty_cicle2+1,___ftmul@f1+1
  3877  000FE6  C03A  F06D         	movff	_duty_cicle2+2,___ftmul@f1+2
  3878  000FEA  0E3F               	movlw	63
  3879  000FEC  0100               	movlb	0	; () banked
  3880  000FEE  6F6E               	movwf	___ftmul@f2& (0+255),b
  3881  000FF0  0EFA               	movlw	250
  3882  000FF2  0100               	movlb	0	; () banked
  3883  000FF4  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  3884  000FF6  0E3E               	movlw	62
  3885  000FF8  0100               	movlb	0	; () banked
  3886  000FFA  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  3887  000FFC  ECEA  F004         	call	___ftmul	;wreg free
  3888  001000  C06B  F02A         	movff	?___ftmul,_conversion2
  3889  001004  C06C  F02B         	movff	?___ftmul+1,_conversion2+1
  3890  001008  C06D  F02C         	movff	?___ftmul+2,_conversion2+2
  3891                           
  3892                           ;newmain.c: 372: CCPR2L = (int) conversion2 >> 2;
  3893  00100C  C02A  F060         	movff	_conversion2,___fttol@f1
  3894  001010  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  3895  001014  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  3896  001018  EC3D  F008         	call	___fttol	;wreg free
  3897  00101C  0100               	movlb	0	; () banked
  3898  00101E  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3899  001020  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3900  001022  3360               	rrcf	?___fttol& (0+255),f,b
  3901  001024  0100               	movlb	0	; () banked
  3902  001026  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  3903  001028  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  3904  00102A  3360               	rrcf	?___fttol& (0+255),f,b
  3905  00102C  0100               	movlb	0	; () banked
  3906  00102E  5160               	movf	?___fttol& (0+255),w,b
  3907  001030  6EBB               	movwf	4027,c	;volatile
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;newmain.c: 373: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion2 & 0x03) << 4);
  3911  001032  C02A  F060         	movff	_conversion2,___fttol@f1
  3912  001036  C02B  F061         	movff	_conversion2+1,___fttol@f1+1
  3913  00103A  C02C  F062         	movff	_conversion2+2,___fttol@f1+2
  3914  00103E  EC3D  F008         	call	___fttol	;wreg free
  3915  001042  0E03               	movlw	3
  3916  001044  0100               	movlb	0	; () banked
  3917  001046  1760               	andwf	?___fttol& (0+255),f,b
  3918  001048  0100               	movlb	0	; () banked
  3919  00104A  3B60               	swapf	?___fttol& (0+255),f,b
  3920  00104C  0EF0               	movlw	240
  3921  00104E  0100               	movlb	0	; () banked
  3922  001050  1760               	andwf	?___fttol& (0+255),f,b
  3923  001052  50BD               	movf	4029,w,c	;volatile
  3924  001054  0B0F               	andlw	15
  3925  001056  0100               	movlb	0	; () banked
  3926  001058  1160               	iorwf	?___fttol& (0+255),w,b
  3927  00105A  6EBA               	movwf	4026,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;newmain.c: 374: if (conversion1 >= conversion2) {
  3931  00105C  C02D  F060         	movff	_conversion1,___ftge@ff1
  3932  001060  C02E  F061         	movff	_conversion1+1,___ftge@ff1+1
  3933  001064  C02F  F062         	movff	_conversion1+2,___ftge@ff1+2
  3934  001068  C02A  F063         	movff	_conversion2,___ftge@ff2
  3935  00106C  C02B  F064         	movff	_conversion2+1,___ftge@ff2+1
  3936  001070  C02C  F065         	movff	_conversion2+2,___ftge@ff2+2
  3937  001074  ECDF  F009         	call	___ftge	;wreg free
  3938  001078  0012               	return	
  3939  00107A                     __end_of_pwmI:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           tblptrh	equ	0xFF7
  3943                           tblptrl	equ	0xFF6
  3944                           tablat	equ	0xFF5
  3945                           intcon	equ	0xFF2
  3946                           intcon2	equ	0xFF1
  3947                           intcon3	equ	0xFF0
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           status	equ	0xFD8
  3951                           
  3952 ;; *************** function ___ftge *****************
  3953 ;; Defined at:
  3954 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftge.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  ff1             3    0[BANK0 ] float 
  3957 ;;  ff2             3    3[BANK0 ] float 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;		None               void
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         0       6       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3971 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3972 ;;      Totals:         0       9       0       0       0       0       0       0       0
  3973 ;;Total ram usage:        9 bytes
  3974 ;; Hardware stack levels used:    1
  3975 ;; Hardware stack levels required when called:    3
  3976 ;; This function calls:
  3977 ;;		Nothing
  3978 ;; This function is called by:
  3979 ;;		_automatico
  3980 ;;		_pwmI
  3981 ;;		_pwmD
  3982 ;;		_pwmA1
  3983 ;;		_pwmB1
  3984 ;; This function uses a non-reentrant model
  3985 ;;
  3986                           
  3987                           	psect	text19
  3988  0013BE                     __ptext19:
  3989                           	opt stack 0
  3990  0013BE                     ___ftge:
  3991                           	opt stack 25
  3992                           
  3993                           ;incstack = 0
  3994  0013BE  0100               	movlb	0	; () banked
  3995  0013C0  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  3996  0013C2  D01D               	goto	l2554
  3997                           
  3998                           ; BSR set to: 0
  3999  0013C4  C060  F066         	movff	___ftge@ff1,??___ftge
  4000  0013C8  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  4001  0013CC  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  4002  0013D0  0100               	movlb	0	; () banked
  4003  0013D2  1F66               	comf	??___ftge& (0+255),f,b
  4004  0013D4  1F67               	comf	(??___ftge+1)& (0+255),f,b
  4005  0013D6  1F68               	comf	(??___ftge+2)& (0+255),f,b
  4006  0013D8  2B66               	incf	??___ftge& (0+255),f,b
  4007  0013DA  0E00               	movlw	0
  4008  0013DC  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  4009  0013DE  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  4010  0013E0  0E00               	movlw	0
  4011  0013E2  0100               	movlb	0	; () banked
  4012  0013E4  2566               	addwf	??___ftge& (0+255),w,b
  4013  0013E6  0100               	movlb	0	; () banked
  4014  0013E8  6F60               	movwf	___ftge@ff1& (0+255),b
  4015  0013EA  0E00               	movlw	0
  4016  0013EC  0100               	movlb	0	; () banked
  4017  0013EE  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  4018  0013F0  0100               	movlb	0	; () banked
  4019  0013F2  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  4020  0013F4  0E80               	movlw	128
  4021  0013F6  0100               	movlb	0	; () banked
  4022  0013F8  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  4023  0013FA  0100               	movlb	0	; () banked
  4024  0013FC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  4025  0013FE                     l2554:
  4026                           
  4027                           ; BSR set to: 0
  4028  0013FE  0100               	movlb	0	; () banked
  4029  001400  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  4030  001402  D01D               	goto	l2558
  4031                           
  4032                           ; BSR set to: 0
  4033  001404  C063  F066         	movff	___ftge@ff2,??___ftge
  4034  001408  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  4035  00140C  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  4036  001410  0100               	movlb	0	; () banked
  4037  001412  1F66               	comf	??___ftge& (0+255),f,b
  4038  001414  1F67               	comf	(??___ftge+1)& (0+255),f,b
  4039  001416  1F68               	comf	(??___ftge+2)& (0+255),f,b
  4040  001418  2B66               	incf	??___ftge& (0+255),f,b
  4041  00141A  0E00               	movlw	0
  4042  00141C  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  4043  00141E  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  4044  001420  0E00               	movlw	0
  4045  001422  0100               	movlb	0	; () banked
  4046  001424  2566               	addwf	??___ftge& (0+255),w,b
  4047  001426  0100               	movlb	0	; () banked
  4048  001428  6F63               	movwf	___ftge@ff2& (0+255),b
  4049  00142A  0E00               	movlw	0
  4050  00142C  0100               	movlb	0	; () banked
  4051  00142E  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  4052  001430  0100               	movlb	0	; () banked
  4053  001432  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4054  001434  0E80               	movlw	128
  4055  001436  0100               	movlb	0	; () banked
  4056  001438  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  4057  00143A  0100               	movlb	0	; () banked
  4058  00143C  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  4059  00143E                     l2558:
  4060                           
  4061                           ; BSR set to: 0
  4062  00143E  0E00               	movlw	0
  4063  001440  0100               	movlb	0	; () banked
  4064  001442  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  4065  001444  0E00               	movlw	0
  4066  001446  0100               	movlb	0	; () banked
  4067  001448  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  4068  00144A  0E80               	movlw	128
  4069  00144C  0100               	movlb	0	; () banked
  4070  00144E  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  4071                           
  4072                           ; BSR set to: 0
  4073  001450  0E00               	movlw	0
  4074  001452  0100               	movlb	0	; () banked
  4075  001454  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  4076  001456  0E00               	movlw	0
  4077  001458  0100               	movlb	0	; () banked
  4078  00145A  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  4079  00145C  0E80               	movlw	128
  4080  00145E  0100               	movlb	0	; () banked
  4081  001460  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  4082  001462  0100               	movlb	0	; () banked
  4083  001464  5163               	movf	___ftge@ff2& (0+255),w,b
  4084  001466  0100               	movlb	0	; () banked
  4085  001468  5D60               	subwf	___ftge@ff1& (0+255),w,b
  4086  00146A  0100               	movlb	0	; () banked
  4087  00146C  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  4088  00146E  0100               	movlb	0	; () banked
  4089  001470  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  4090  001472  0100               	movlb	0	; () banked
  4091  001474  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  4092  001476  0100               	movlb	0	; () banked
  4093  001478  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  4094  00147A  B0D8               	btfsc	status,0,c
  4095  00147C  D002               	goto	l2564
  4096                           
  4097                           ; BSR set to: 0
  4098  00147E  90D8               	bcf	status,0,c
  4099  001480  0012               	return	
  4100  001482                     l2564:
  4101                           
  4102                           ; BSR set to: 0
  4103  001482  80D8               	bsf	status,0,c
  4104                           
  4105                           ; BSR set to: 0
  4106  001484  0012               	return	
  4107  001486                     __end_of___ftge:
  4108                           	opt stack 0
  4109                           tblptru	equ	0xFF8
  4110                           tblptrh	equ	0xFF7
  4111                           tblptrl	equ	0xFF6
  4112                           tablat	equ	0xFF5
  4113                           intcon	equ	0xFF2
  4114                           intcon2	equ	0xFF1
  4115                           intcon3	equ	0xFF0
  4116                           postinc0	equ	0xFEE
  4117                           wreg	equ	0xFE8
  4118                           status	equ	0xFD8
  4119                           
  4120 ;; *************** function _freno *****************
  4121 ;; Defined at:
  4122 ;;		line 459 in file "newmain.c"
  4123 ;; Parameters:    Size  Location     Type
  4124 ;;		None
  4125 ;; Auto vars:     Size  Location     Type
  4126 ;;		None
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      void 
  4129 ;; Registers used:
  4130 ;;		None
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4136 ;;      Params:         0       0       0       0       0       0       0       0       0
  4137 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4139 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4140 ;;Total ram usage:        0 bytes
  4141 ;; Hardware stack levels used:    1
  4142 ;; Hardware stack levels required when called:    3
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_automatico
  4147 ;;		_manual
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text20
  4152  001820                     __ptext20:
  4153                           	opt stack 0
  4154  001820                     _freno:
  4155                           	opt stack 26
  4156                           
  4157                           ;newmain.c: 460: LATB0 = 0;
  4158                           
  4159                           ; BSR set to: 0
  4160                           ;incstack = 0
  4161  001820  908A               	bcf	3978,0,c	;volatile
  4162                           
  4163                           ;newmain.c: 461: LATB1 = 0;
  4164  001822  928A               	bcf	3978,1,c	;volatile
  4165                           
  4166                           ;newmain.c: 462: LATB2 = 0;
  4167  001824  948A               	bcf	3978,2,c	;volatile
  4168                           
  4169                           ;newmain.c: 463: LATB3 = 0;
  4170  001826  968A               	bcf	3978,3,c	;volatile
  4171  001828  0012               	return		;funcret
  4172  00182A                     __end_of_freno:
  4173                           	opt stack 0
  4174                           tblptru	equ	0xFF8
  4175                           tblptrh	equ	0xFF7
  4176                           tblptrl	equ	0xFF6
  4177                           tablat	equ	0xFF5
  4178                           intcon	equ	0xFF2
  4179                           intcon2	equ	0xFF1
  4180                           intcon3	equ	0xFF0
  4181                           postinc0	equ	0xFEE
  4182                           wreg	equ	0xFE8
  4183                           status	equ	0xFD8
  4184                           
  4185 ;; *************** function _adelante *****************
  4186 ;; Defined at:
  4187 ;;		line 425 in file "newmain.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;		None
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;		None
  4192 ;; Return value:  Size  Location     Type
  4193 ;;                  1    wreg      void 
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0, cstack
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4201 ;;      Params:         0       0       0       0       0       0       0       0       0
  4202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4203 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4204 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4205 ;;Total ram usage:        2 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; Hardware stack levels required when called:    6
  4208 ;; This function calls:
  4209 ;;		_pwm
  4210 ;; This function is called by:
  4211 ;;		_automatico
  4212 ;;		_manual
  4213 ;; This function uses a non-reentrant model
  4214 ;;
  4215                           
  4216                           	psect	text21
  4217  0017D0                     __ptext21:
  4218                           	opt stack 0
  4219  0017D0                     _adelante:
  4220                           	opt stack 23
  4221                           
  4222                           ;newmain.c: 426: _delay((unsigned long)((100)*(8000000/4000.0)));
  4223                           
  4224                           ;incstack = 0
  4225  0017D0  0E02               	movlw	2
  4226  0017D2  0100               	movlb	0	; () banked
  4227  0017D4  6F7B               	movwf	(??_adelante+1)& (0+255),b
  4228  0017D6  0E04               	movlw	4
  4229  0017D8  0100               	movlb	0	; () banked
  4230  0017DA  6F7A               	movwf	??_adelante& (0+255),b
  4231  0017DC  0EBA               	movlw	186
  4232  0017DE                     u3137:
  4233  0017DE  2EE8               	decfsz	wreg,f,c
  4234  0017E0  D7FE               	bra	u3137
  4235  0017E2  2F7A               	decfsz	??_adelante& (0+255),f,b
  4236  0017E4  D7FC               	bra	u3137
  4237  0017E6  2F7B               	decfsz	(??_adelante+1)& (0+255),f,b
  4238  0017E8  D7FA               	bra	u3137
  4239  0017EA  F000               	nop	
  4240                           
  4241                           ;newmain.c: 427: pwm();
  4242  0017EC  EC65  F009         	call	_pwm	;wreg free
  4243                           
  4244                           ;newmain.c: 428: LATB0 = 1;
  4245  0017F0  808A               	bsf	3978,0,c	;volatile
  4246                           
  4247                           ;newmain.c: 429: LATB1 = 0;
  4248  0017F2  928A               	bcf	3978,1,c	;volatile
  4249                           
  4250                           ;newmain.c: 430: LATB2 = 1;
  4251  0017F4  848A               	bsf	3978,2,c	;volatile
  4252                           
  4253                           ;newmain.c: 431: LATB3 = 0;
  4254  0017F6  968A               	bcf	3978,3,c	;volatile
  4255  0017F8  0012               	return		;funcret
  4256  0017FA                     __end_of_adelante:
  4257                           	opt stack 0
  4258                           tblptru	equ	0xFF8
  4259                           tblptrh	equ	0xFF7
  4260                           tblptrl	equ	0xFF6
  4261                           tablat	equ	0xFF5
  4262                           intcon	equ	0xFF2
  4263                           intcon2	equ	0xFF1
  4264                           intcon3	equ	0xFF0
  4265                           postinc0	equ	0xFEE
  4266                           wreg	equ	0xFE8
  4267                           status	equ	0xFD8
  4268                           
  4269 ;; *************** function _pwm *****************
  4270 ;; Defined at:
  4271 ;;		line 348 in file "newmain.c"
  4272 ;; Parameters:    Size  Location     Type
  4273 ;;		None
  4274 ;; Auto vars:     Size  Location     Type
  4275 ;;		None
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      void 
  4278 ;; Registers used:
  4279 ;;		wreg, status,2, status,0, cstack
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:         0       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:        0 bytes
  4290 ;; Hardware stack levels used:    1
  4291 ;; Hardware stack levels required when called:    5
  4292 ;; This function calls:
  4293 ;;		___ftmul
  4294 ;;		___fttol
  4295 ;; This function is called by:
  4296 ;;		_adelante
  4297 ;;		_atras
  4298 ;; This function uses a non-reentrant model
  4299 ;;
  4300                           
  4301                           	psect	text22
  4302  0012CA                     __ptext22:
  4303                           	opt stack 0
  4304  0012CA                     _pwm:
  4305                           	opt stack 23
  4306                           
  4307                           ;newmain.c: 349: if (y == 1) {
  4308                           
  4309                           ;incstack = 0
  4310  0012CA  043E               	decf	_y,w,c
  4311  0012CC  103F               	iorwf	_y+1,w,c
  4312  0012CE  A4D8               	btfss	status,2,c
  4313  0012D0  D00E               	goto	l2618
  4314                           
  4315                           ;newmain.c: 350: duty_cicle1 = 511.2;
  4316  0012D2  0E9A               	movlw	154
  4317  0012D4  6E3B               	movwf	_duty_cicle1,c
  4318  0012D6  0EFF               	movlw	255
  4319  0012D8  6E3C               	movwf	_duty_cicle1+1,c
  4320  0012DA  0E43               	movlw	67
  4321  0012DC  6E3D               	movwf	_duty_cicle1+2,c
  4322                           
  4323                           ;newmain.c: 351: y = 2;
  4324  0012DE  0E00               	movlw	0
  4325  0012E0  6E3F               	movwf	_y+1,c
  4326  0012E2  0E02               	movlw	2
  4327  0012E4  6E3E               	movwf	_y,c
  4328                           
  4329                           ;newmain.c: 352: y = 3;
  4330  0012E6  0E00               	movlw	0
  4331  0012E8  6E3F               	movwf	_y+1,c
  4332  0012EA  0E03               	movlw	3
  4333  0012EC  6E3E               	movwf	_y,c
  4334  0012EE                     l2618:
  4335                           
  4336                           ;newmain.c: 353: }
  4337                           ;newmain.c: 354: conversion1 = (float) duty_cicle1 * (500.0 / 1023.0);
  4338  0012EE  C03B  F06B         	movff	_duty_cicle1,___ftmul@f1
  4339  0012F2  C03C  F06C         	movff	_duty_cicle1+1,___ftmul@f1+1
  4340  0012F6  C03D  F06D         	movff	_duty_cicle1+2,___ftmul@f1+2
  4341  0012FA  0E3F               	movlw	63
  4342  0012FC  0100               	movlb	0	; () banked
  4343  0012FE  6F6E               	movwf	___ftmul@f2& (0+255),b
  4344  001300  0EFA               	movlw	250
  4345  001302  0100               	movlb	0	; () banked
  4346  001304  6F6F               	movwf	(___ftmul@f2+1)& (0+255),b
  4347  001306  0E3E               	movlw	62
  4348  001308  0100               	movlb	0	; () banked
  4349  00130A  6F70               	movwf	(___ftmul@f2+2)& (0+255),b
  4350  00130C  ECEA  F004         	call	___ftmul	;wreg free
  4351  001310  C06B  F02D         	movff	?___ftmul,_conversion1
  4352  001314  C06C  F02E         	movff	?___ftmul+1,_conversion1+1
  4353  001318  C06D  F02F         	movff	?___ftmul+2,_conversion1+2
  4354                           
  4355                           ;newmain.c: 355: CCPR1L = (int) conversion1 >> 2;
  4356  00131C  C02D  F060         	movff	_conversion1,___fttol@f1
  4357  001320  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4358  001324  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4359  001328  EC3D  F008         	call	___fttol	;wreg free
  4360  00132C  0100               	movlb	0	; () banked
  4361  00132E  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4362  001330  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4363  001332  3360               	rrcf	?___fttol& (0+255),f,b
  4364  001334  0100               	movlb	0	; () banked
  4365  001336  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4366  001338  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4367  00133A  3360               	rrcf	?___fttol& (0+255),f,b
  4368  00133C  0100               	movlb	0	; () banked
  4369  00133E  5160               	movf	?___fttol& (0+255),w,b
  4370  001340  6EBE               	movwf	4030,c	;volatile
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;newmain.c: 356: CCP1CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  4374  001342  C02D  F060         	movff	_conversion1,___fttol@f1
  4375  001346  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4376  00134A  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4377  00134E  EC3D  F008         	call	___fttol	;wreg free
  4378  001352  0E03               	movlw	3
  4379  001354  0100               	movlb	0	; () banked
  4380  001356  1760               	andwf	?___fttol& (0+255),f,b
  4381  001358  0100               	movlb	0	; () banked
  4382  00135A  3B60               	swapf	?___fttol& (0+255),f,b
  4383  00135C  0EF0               	movlw	240
  4384  00135E  0100               	movlb	0	; () banked
  4385  001360  1760               	andwf	?___fttol& (0+255),f,b
  4386  001362  50BD               	movf	4029,w,c	;volatile
  4387  001364  0B0F               	andlw	15
  4388  001366  0100               	movlb	0	; () banked
  4389  001368  1160               	iorwf	?___fttol& (0+255),w,b
  4390  00136A  6EBD               	movwf	4029,c	;volatile
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;newmain.c: 357: CCPR2L = (int) conversion1 >> 2;
  4394  00136C  C02D  F060         	movff	_conversion1,___fttol@f1
  4395  001370  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4396  001374  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4397  001378  EC3D  F008         	call	___fttol	;wreg free
  4398  00137C  0100               	movlb	0	; () banked
  4399  00137E  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4400  001380  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4401  001382  3360               	rrcf	?___fttol& (0+255),f,b
  4402  001384  0100               	movlb	0	; () banked
  4403  001386  3561               	rlcf	(?___fttol+1)& (0+255),w,b
  4404  001388  3361               	rrcf	(?___fttol+1)& (0+255),f,b
  4405  00138A  3360               	rrcf	?___fttol& (0+255),f,b
  4406  00138C  0100               	movlb	0	; () banked
  4407  00138E  5160               	movf	?___fttol& (0+255),w,b
  4408  001390  6EBB               	movwf	4027,c	;volatile
  4409                           
  4410                           ; BSR set to: 0
  4411                           ;newmain.c: 358: CCP2CON = (CCP1CON & 0x0F) | (((int) conversion1 & 0x03) << 4);
  4412  001392  C02D  F060         	movff	_conversion1,___fttol@f1
  4413  001396  C02E  F061         	movff	_conversion1+1,___fttol@f1+1
  4414  00139A  C02F  F062         	movff	_conversion1+2,___fttol@f1+2
  4415  00139E  EC3D  F008         	call	___fttol	;wreg free
  4416  0013A2  0E03               	movlw	3
  4417  0013A4  0100               	movlb	0	; () banked
  4418  0013A6  1760               	andwf	?___fttol& (0+255),f,b
  4419  0013A8  0100               	movlb	0	; () banked
  4420  0013AA  3B60               	swapf	?___fttol& (0+255),f,b
  4421  0013AC  0EF0               	movlw	240
  4422  0013AE  0100               	movlb	0	; () banked
  4423  0013B0  1760               	andwf	?___fttol& (0+255),f,b
  4424  0013B2  50BD               	movf	4029,w,c	;volatile
  4425  0013B4  0B0F               	andlw	15
  4426  0013B6  0100               	movlb	0	; () banked
  4427  0013B8  1160               	iorwf	?___fttol& (0+255),w,b
  4428  0013BA  6EBA               	movwf	4026,c	;volatile
  4429                           
  4430                           ; BSR set to: 0
  4431  0013BC  0012               	return		;funcret
  4432  0013BE                     __end_of_pwm:
  4433                           	opt stack 0
  4434                           tblptru	equ	0xFF8
  4435                           tblptrh	equ	0xFF7
  4436                           tblptrl	equ	0xFF6
  4437                           tablat	equ	0xFF5
  4438                           intcon	equ	0xFF2
  4439                           intcon2	equ	0xFF1
  4440                           intcon3	equ	0xFF0
  4441                           postinc0	equ	0xFEE
  4442                           wreg	equ	0xFE8
  4443                           status	equ	0xFD8
  4444                           
  4445 ;; *************** function ___fttol *****************
  4446 ;; Defined at:
  4447 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  f1              3    0[BANK0 ] float 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  lval            4   10[BANK0 ] unsigned long 
  4452 ;;  exp1            1   14[BANK0 ] unsigned char 
  4453 ;;  sign1           1    9[BANK0 ] unsigned char 
  4454 ;; Return value:  Size  Location     Type
  4455 ;;                  4    0[BANK0 ] long 
  4456 ;; Registers used:
  4457 ;;		wreg, status,2, status,0
  4458 ;; Tracked objects:
  4459 ;;		On entry : 0/0
  4460 ;;		On exit  : 0/0
  4461 ;;		Unchanged: 0/0
  4462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4463 ;;      Params:         0       4       0       0       0       0       0       0       0
  4464 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4465 ;;      Temps:          0       5       0       0       0       0       0       0       0
  4466 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4467 ;;Total ram usage:       15 bytes
  4468 ;; Hardware stack levels used:    1
  4469 ;; Hardware stack levels required when called:    3
  4470 ;; This function calls:
  4471 ;;		Nothing
  4472 ;; This function is called by:
  4473 ;;		_pwm
  4474 ;;		_pwmI
  4475 ;;		_pwmD
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text23
  4480  00107A                     __ptext23:
  4481                           	opt stack 0
  4482  00107A                     ___fttol:
  4483                           	opt stack 24
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;incstack = 0
  4487  00107A  C062  F064         	movff	___fttol@f1+2,??___fttol
  4488  00107E  0100               	movlb	0	; () banked
  4489  001080  6B65               	clrf	(??___fttol+1)& (0+255),b
  4490  001082  6B66               	clrf	(??___fttol+2)& (0+255),b
  4491  001084  0100               	movlb	0	; () banked
  4492  001086  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  4493  001088  0100               	movlb	0	; () banked
  4494  00108A  3764               	rlcf	??___fttol& (0+255),f,b
  4495  00108C  E301               	bnc	u2241
  4496  00108E  8165               	bsf	(??___fttol+1)& (0+255),0,b
  4497  001090                     u2241:
  4498  001090  0100               	movlb	0	; () banked
  4499  001092  5164               	movf	??___fttol& (0+255),w,b
  4500  001094  0100               	movlb	0	; () banked
  4501  001096  6F6E               	movwf	___fttol@exp1& (0+255),b
  4502  001098  0100               	movlb	0	; () banked
  4503  00109A  516E               	movf	___fttol@exp1& (0+255),w,b
  4504  00109C  A4D8               	btfss	status,2,c
  4505  00109E  D00A               	goto	l2574
  4506                           
  4507                           ; BSR set to: 0
  4508  0010A0  0E00               	movlw	0
  4509  0010A2  0100               	movlb	0	; () banked
  4510  0010A4  6F60               	movwf	?___fttol& (0+255),b
  4511  0010A6  0E00               	movlw	0
  4512  0010A8  6F61               	movwf	(?___fttol+1)& (0+255),b
  4513  0010AA  0E00               	movlw	0
  4514  0010AC  6F62               	movwf	(?___fttol+2)& (0+255),b
  4515  0010AE  0E00               	movlw	0
  4516  0010B0  6F63               	movwf	(?___fttol+3)& (0+255),b
  4517                           
  4518                           ; BSR set to: 0
  4519  0010B2  0012               	return	
  4520  0010B4                     l2574:
  4521                           
  4522                           ; BSR set to: 0
  4523  0010B4  0E17               	movlw	23
  4524  0010B6  0100               	movlb	0	; () banked
  4525  0010B8  6F64               	movwf	??___fttol& (0+255),b
  4526  0010BA  C060  F065         	movff	___fttol@f1,??___fttol+1
  4527  0010BE  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  4528  0010C2  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  4529  0010C6  0100               	movlb	0	; () banked
  4530  0010C8  2964               	incf	??___fttol& (0+255),w,b
  4531  0010CA  0100               	movlb	0	; () banked
  4532  0010CC  6F68               	movwf	(??___fttol+4)& (0+255),b
  4533  0010CE  D005               	goto	u2260
  4534  0010D0                     u2265:
  4535  0010D0  0100               	movlb	0	; () banked
  4536  0010D2  90D8               	bcf	status,0,c
  4537  0010D4  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  4538  0010D6  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  4539  0010D8  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  4540  0010DA                     u2260:
  4541  0010DA  0100               	movlb	0	; () banked
  4542  0010DC  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  4543  0010DE  D7F8               	goto	u2265
  4544  0010E0  0100               	movlb	0	; () banked
  4545  0010E2  5165               	movf	(??___fttol+1)& (0+255),w,b
  4546  0010E4  0100               	movlb	0	; () banked
  4547  0010E6  6F69               	movwf	___fttol@sign1& (0+255),b
  4548                           
  4549                           ; BSR set to: 0
  4550  0010E8  0100               	movlb	0	; () banked
  4551  0010EA  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  4552                           
  4553                           ; BSR set to: 0
  4554  0010EC  0EFF               	movlw	255
  4555  0010EE  0100               	movlb	0	; () banked
  4556  0010F0  1760               	andwf	___fttol@f1& (0+255),f,b
  4557  0010F2  0EFF               	movlw	255
  4558  0010F4  0100               	movlb	0	; () banked
  4559  0010F6  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  4560  0010F8  0E00               	movlw	0
  4561  0010FA  0100               	movlb	0	; () banked
  4562  0010FC  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  4563                           
  4564                           ; BSR set to: 0
  4565  0010FE  0100               	movlb	0	; () banked
  4566  001100  5160               	movf	___fttol@f1& (0+255),w,b
  4567  001102  0100               	movlb	0	; () banked
  4568  001104  6F6A               	movwf	___fttol@lval& (0+255),b
  4569  001106  0100               	movlb	0	; () banked
  4570  001108  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  4571  00110A  0100               	movlb	0	; () banked
  4572  00110C  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  4573  00110E  0100               	movlb	0	; () banked
  4574  001110  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  4575  001112  0100               	movlb	0	; () banked
  4576  001114  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  4577  001116  0100               	movlb	0	; () banked
  4578  001118  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  4579                           
  4580                           ; BSR set to: 0
  4581  00111A  0E8E               	movlw	142
  4582  00111C  0100               	movlb	0	; () banked
  4583  00111E  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  4584                           
  4585                           ; BSR set to: 0
  4586  001120  0100               	movlb	0	; () banked
  4587  001122  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  4588  001124  D01A               	goto	l2596
  4589                           
  4590                           ; BSR set to: 0
  4591  001126  0100               	movlb	0	; () banked
  4592  001128  516E               	movf	___fttol@exp1& (0+255),w,b
  4593  00112A  0A80               	xorlw	128
  4594  00112C  0F8F               	addlw	143
  4595  00112E  B0D8               	btfsc	status,0,c
  4596  001130  D00A               	goto	l2592
  4597                           
  4598                           ; BSR set to: 0
  4599  001132  0E00               	movlw	0
  4600  001134  0100               	movlb	0	; () banked
  4601  001136  6F60               	movwf	?___fttol& (0+255),b
  4602  001138  0E00               	movlw	0
  4603  00113A  6F61               	movwf	(?___fttol+1)& (0+255),b
  4604  00113C  0E00               	movlw	0
  4605  00113E  6F62               	movwf	(?___fttol+2)& (0+255),b
  4606  001140  0E00               	movlw	0
  4607  001142  6F63               	movwf	(?___fttol+3)& (0+255),b
  4608                           
  4609                           ; BSR set to: 0
  4610  001144  0012               	return	
  4611  001146                     l2592:
  4612                           
  4613                           ; BSR set to: 0
  4614  001146  0100               	movlb	0	; () banked
  4615  001148  90D8               	bcf	status,0,c
  4616  00114A  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  4617  00114C  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  4618  00114E  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  4619  001150  336A               	rrcf	___fttol@lval& (0+255),f,b
  4620                           
  4621                           ; BSR set to: 0
  4622  001152  0100               	movlb	0	; () banked
  4623  001154  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  4624  001156  D7F7               	goto	l2592
  4625                           
  4626                           ; BSR set to: 0
  4627  001158  D01B               	goto	l2606
  4628  00115A                     l2596:
  4629                           
  4630                           ; BSR set to: 0
  4631  00115A  0E17               	movlw	23
  4632  00115C  0100               	movlb	0	; () banked
  4633  00115E  656E               	cpfsgt	___fttol@exp1& (0+255),b
  4634  001160  D012               	goto	l2604
  4635                           
  4636                           ; BSR set to: 0
  4637  001162  0E00               	movlw	0
  4638  001164  0100               	movlb	0	; () banked
  4639  001166  6F60               	movwf	?___fttol& (0+255),b
  4640  001168  0E00               	movlw	0
  4641  00116A  6F61               	movwf	(?___fttol+1)& (0+255),b
  4642  00116C  0E00               	movlw	0
  4643  00116E  6F62               	movwf	(?___fttol+2)& (0+255),b
  4644  001170  0E00               	movlw	0
  4645  001172  6F63               	movwf	(?___fttol+3)& (0+255),b
  4646                           
  4647                           ; BSR set to: 0
  4648  001174  0012               	return	
  4649  001176                     l2602:
  4650                           
  4651                           ; BSR set to: 0
  4652  001176  0100               	movlb	0	; () banked
  4653  001178  90D8               	bcf	status,0,c
  4654  00117A  376A               	rlcf	___fttol@lval& (0+255),f,b
  4655  00117C  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  4656  00117E  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  4657  001180  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  4658  001182  0100               	movlb	0	; () banked
  4659  001184  076E               	decf	___fttol@exp1& (0+255),f,b
  4660  001186                     l2604:
  4661                           
  4662                           ; BSR set to: 0
  4663  001186  0100               	movlb	0	; () banked
  4664  001188  516E               	movf	___fttol@exp1& (0+255),w,b
  4665  00118A  0100               	movlb	0	; () banked
  4666  00118C  A4D8               	btfss	status,2,c
  4667  00118E  D7F3               	goto	l2602
  4668  001190                     l2606:
  4669                           
  4670                           ; BSR set to: 0
  4671  001190  0100               	movlb	0	; () banked
  4672  001192  5169               	movf	___fttol@sign1& (0+255),w,b
  4673  001194  0100               	movlb	0	; () banked
  4674  001196  B4D8               	btfsc	status,2,c
  4675  001198  D009               	goto	l2610
  4676                           
  4677                           ; BSR set to: 0
  4678  00119A  0100               	movlb	0	; () banked
  4679  00119C  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  4680  00119E  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  4681  0011A0  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  4682  0011A2  6D6A               	negf	___fttol@lval& (0+255),b
  4683  0011A4  0E00               	movlw	0
  4684  0011A6  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  4685  0011A8  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  4686  0011AA  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  4687  0011AC                     l2610:
  4688                           
  4689                           ; BSR set to: 0
  4690  0011AC  C06A  F060         	movff	___fttol@lval,?___fttol
  4691  0011B0  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  4692  0011B4  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  4693  0011B8  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  4694  0011BC  0012               	return	
  4695  0011BE                     __end_of___fttol:
  4696                           	opt stack 0
  4697                           tblptru	equ	0xFF8
  4698                           tblptrh	equ	0xFF7
  4699                           tblptrl	equ	0xFF6
  4700                           tablat	equ	0xFF5
  4701                           intcon	equ	0xFF2
  4702                           intcon2	equ	0xFF1
  4703                           intcon3	equ	0xFF0
  4704                           postinc0	equ	0xFEE
  4705                           wreg	equ	0xFE8
  4706                           status	equ	0xFD8
  4707                           
  4708 ;; *************** function ___ftmul *****************
  4709 ;; Defined at:
  4710 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  f1              3   11[BANK0 ] float 
  4713 ;;  f2              3   14[BANK0 ] float 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  f3_as_produc    3   21[BANK0 ] unsigned um
  4716 ;;  sign            1   25[BANK0 ] unsigned char 
  4717 ;;  cntr            1   24[BANK0 ] unsigned char 
  4718 ;;  exp             1   20[BANK0 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  3   11[BANK0 ] float 
  4721 ;; Registers used:
  4722 ;;		wreg, status,2, status,0, cstack
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4728 ;;      Params:         0       6       0       0       0       0       0       0       0
  4729 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4730 ;;      Temps:          0       3       0       0       0       0       0       0       0
  4731 ;;      Totals:         0      15       0       0       0       0       0       0       0
  4732 ;;Total ram usage:       15 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    4
  4735 ;; This function calls:
  4736 ;;		___ftpack
  4737 ;; This function is called by:
  4738 ;;		_start
  4739 ;;		_start1
  4740 ;;		_start2
  4741 ;;		_pwm
  4742 ;;		_pwmI
  4743 ;;		_pwmD
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text24
  4748  0009D4                     __ptext24:
  4749                           	opt stack 0
  4750  0009D4                     ___ftmul:
  4751                           	opt stack 25
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;incstack = 0
  4755  0009D4  C06D  F071         	movff	___ftmul@f1+2,??___ftmul
  4756  0009D8  0100               	movlb	0	; () banked
  4757  0009DA  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4758  0009DC  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4759  0009DE  0100               	movlb	0	; () banked
  4760  0009E0  356C               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  4761  0009E2  0100               	movlb	0	; () banked
  4762  0009E4  3771               	rlcf	??___ftmul& (0+255),f,b
  4763  0009E6  E301               	bnc	u2151
  4764  0009E8  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4765  0009EA                     u2151:
  4766  0009EA  0100               	movlb	0	; () banked
  4767  0009EC  5171               	movf	??___ftmul& (0+255),w,b
  4768  0009EE  0100               	movlb	0	; () banked
  4769  0009F0  6F74               	movwf	___ftmul@exp& (0+255),b
  4770  0009F2  0100               	movlb	0	; () banked
  4771  0009F4  5174               	movf	___ftmul@exp& (0+255),w,b
  4772  0009F6  A4D8               	btfss	status,2,c
  4773  0009F8  D00A               	goto	l2508
  4774                           
  4775                           ; BSR set to: 0
  4776  0009FA  0E00               	movlw	0
  4777  0009FC  0100               	movlb	0	; () banked
  4778  0009FE  6F6B               	movwf	?___ftmul& (0+255),b
  4779  000A00  0E00               	movlw	0
  4780  000A02  0100               	movlb	0	; () banked
  4781  000A04  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4782  000A06  0E00               	movlw	0
  4783  000A08  0100               	movlb	0	; () banked
  4784  000A0A  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4785                           
  4786                           ; BSR set to: 0
  4787  000A0C  0012               	return	
  4788  000A0E                     l2508:
  4789                           
  4790                           ; BSR set to: 0
  4791  000A0E  C070  F071         	movff	___ftmul@f2+2,??___ftmul
  4792  000A12  0100               	movlb	0	; () banked
  4793  000A14  6B72               	clrf	(??___ftmul+1)& (0+255),b
  4794  000A16  6B73               	clrf	(??___ftmul+2)& (0+255),b
  4795  000A18  0100               	movlb	0	; () banked
  4796  000A1A  356F               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  4797  000A1C  0100               	movlb	0	; () banked
  4798  000A1E  3771               	rlcf	??___ftmul& (0+255),f,b
  4799  000A20  E301               	bnc	u2171
  4800  000A22  8172               	bsf	(??___ftmul+1)& (0+255),0,b
  4801  000A24                     u2171:
  4802  000A24  0100               	movlb	0	; () banked
  4803  000A26  5171               	movf	??___ftmul& (0+255),w,b
  4804  000A28  0100               	movlb	0	; () banked
  4805  000A2A  6F79               	movwf	___ftmul@sign& (0+255),b
  4806  000A2C  0100               	movlb	0	; () banked
  4807  000A2E  5179               	movf	___ftmul@sign& (0+255),w,b
  4808  000A30  A4D8               	btfss	status,2,c
  4809  000A32  D00A               	goto	l2514
  4810                           
  4811                           ; BSR set to: 0
  4812  000A34  0E00               	movlw	0
  4813  000A36  0100               	movlb	0	; () banked
  4814  000A38  6F6B               	movwf	?___ftmul& (0+255),b
  4815  000A3A  0E00               	movlw	0
  4816  000A3C  0100               	movlb	0	; () banked
  4817  000A3E  6F6C               	movwf	(?___ftmul+1)& (0+255),b
  4818  000A40  0E00               	movlw	0
  4819  000A42  0100               	movlb	0	; () banked
  4820  000A44  6F6D               	movwf	(?___ftmul+2)& (0+255),b
  4821                           
  4822                           ; BSR set to: 0
  4823  000A46  0012               	return	
  4824  000A48                     l2514:
  4825                           
  4826                           ; BSR set to: 0
  4827  000A48  0100               	movlb	0	; () banked
  4828  000A4A  5179               	movf	___ftmul@sign& (0+255),w,b
  4829  000A4C  0F7B               	addlw	123
  4830  000A4E  0100               	movlb	0	; () banked
  4831  000A50  2774               	addwf	___ftmul@exp& (0+255),f,b
  4832                           
  4833                           ; BSR set to: 0
  4834  000A52  C06D  F079         	movff	___ftmul@f1+2,___ftmul@sign
  4835  000A56  0100               	movlb	0	; () banked
  4836  000A58  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4837  000A5A  0100               	movlb	0	; () banked
  4838  000A5C  1B79               	xorwf	___ftmul@sign& (0+255),f,b
  4839  000A5E  0E80               	movlw	128
  4840  000A60  0100               	movlb	0	; () banked
  4841  000A62  1779               	andwf	___ftmul@sign& (0+255),f,b
  4842                           
  4843                           ; BSR set to: 0
  4844  000A64  0100               	movlb	0	; () banked
  4845  000A66  8F6C               	bsf	(___ftmul@f1+1)& (0+255),7,b
  4846                           
  4847                           ; BSR set to: 0
  4848  000A68  0100               	movlb	0	; () banked
  4849  000A6A  8F6F               	bsf	(___ftmul@f2+1)& (0+255),7,b
  4850                           
  4851                           ; BSR set to: 0
  4852  000A6C  0EFF               	movlw	255
  4853  000A6E  0100               	movlb	0	; () banked
  4854  000A70  176E               	andwf	___ftmul@f2& (0+255),f,b
  4855  000A72  0EFF               	movlw	255
  4856  000A74  0100               	movlb	0	; () banked
  4857  000A76  176F               	andwf	(___ftmul@f2+1)& (0+255),f,b
  4858  000A78  0E00               	movlw	0
  4859  000A7A  0100               	movlb	0	; () banked
  4860  000A7C  1770               	andwf	(___ftmul@f2+2)& (0+255),f,b
  4861                           
  4862                           ; BSR set to: 0
  4863  000A7E  0E00               	movlw	0
  4864  000A80  0100               	movlb	0	; () banked
  4865  000A82  6F75               	movwf	___ftmul@f3_as_product& (0+255),b
  4866  000A84  0E00               	movlw	0
  4867  000A86  0100               	movlb	0	; () banked
  4868  000A88  6F76               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  4869  000A8A  0E00               	movlw	0
  4870  000A8C  0100               	movlb	0	; () banked
  4871  000A8E  6F77               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  4872                           
  4873                           ; BSR set to: 0
  4874  000A90  0E07               	movlw	7
  4875  000A92  0100               	movlb	0	; () banked
  4876  000A94  6F78               	movwf	___ftmul@cntr& (0+255),b
  4877  000A96                     l2528:
  4878                           
  4879                           ; BSR set to: 0
  4880  000A96  0100               	movlb	0	; () banked
  4881  000A98  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4882  000A9A  D00C               	goto	l2532
  4883                           
  4884                           ; BSR set to: 0
  4885  000A9C  0100               	movlb	0	; () banked
  4886  000A9E  516E               	movf	___ftmul@f2& (0+255),w,b
  4887  000AA0  0100               	movlb	0	; () banked
  4888  000AA2  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4889  000AA4  0100               	movlb	0	; () banked
  4890  000AA6  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4891  000AA8  0100               	movlb	0	; () banked
  4892  000AAA  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4893  000AAC  0100               	movlb	0	; () banked
  4894  000AAE  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4895  000AB0  0100               	movlb	0	; () banked
  4896  000AB2  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4897  000AB4                     l2532:
  4898                           
  4899                           ; BSR set to: 0
  4900  000AB4  0100               	movlb	0	; () banked
  4901  000AB6  90D8               	bcf	status,0,c
  4902  000AB8  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4903  000ABA  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4904  000ABC  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4905  000ABE  0100               	movlb	0	; () banked
  4906  000AC0  90D8               	bcf	status,0,c
  4907  000AC2  376E               	rlcf	___ftmul@f2& (0+255),f,b
  4908  000AC4  376F               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  4909  000AC6  3770               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  4910                           
  4911                           ; BSR set to: 0
  4912  000AC8  0100               	movlb	0	; () banked
  4913  000ACA  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4914  000ACC  D7E4               	goto	l2528
  4915                           
  4916                           ; BSR set to: 0
  4917                           
  4918                           ; BSR set to: 0
  4919  000ACE  0E09               	movlw	9
  4920  000AD0  0100               	movlb	0	; () banked
  4921  000AD2  6F78               	movwf	___ftmul@cntr& (0+255),b
  4922  000AD4                     l2538:
  4923                           
  4924                           ; BSR set to: 0
  4925  000AD4  0100               	movlb	0	; () banked
  4926  000AD6  A16B               	btfss	___ftmul@f1& (0+255),0,b
  4927  000AD8  D00C               	goto	l2542
  4928                           
  4929                           ; BSR set to: 0
  4930  000ADA  0100               	movlb	0	; () banked
  4931  000ADC  516E               	movf	___ftmul@f2& (0+255),w,b
  4932  000ADE  0100               	movlb	0	; () banked
  4933  000AE0  2775               	addwf	___ftmul@f3_as_product& (0+255),f,b
  4934  000AE2  0100               	movlb	0	; () banked
  4935  000AE4  516F               	movf	(___ftmul@f2+1)& (0+255),w,b
  4936  000AE6  0100               	movlb	0	; () banked
  4937  000AE8  2376               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  4938  000AEA  0100               	movlb	0	; () banked
  4939  000AEC  5170               	movf	(___ftmul@f2+2)& (0+255),w,b
  4940  000AEE  0100               	movlb	0	; () banked
  4941  000AF0  2377               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  4942  000AF2                     l2542:
  4943                           
  4944                           ; BSR set to: 0
  4945  000AF2  0100               	movlb	0	; () banked
  4946  000AF4  90D8               	bcf	status,0,c
  4947  000AF6  336D               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  4948  000AF8  336C               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  4949  000AFA  336B               	rrcf	___ftmul@f1& (0+255),f,b
  4950  000AFC  0100               	movlb	0	; () banked
  4951  000AFE  90D8               	bcf	status,0,c
  4952  000B00  3377               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  4953  000B02  3376               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  4954  000B04  3375               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  4955                           
  4956                           ; BSR set to: 0
  4957  000B06  0100               	movlb	0	; () banked
  4958  000B08  2F78               	decfsz	___ftmul@cntr& (0+255),f,b
  4959  000B0A  D7E4               	goto	l2538
  4960                           
  4961                           ; BSR set to: 0
  4962                           
  4963                           ; BSR set to: 0
  4964  000B0C  C075  F060         	movff	___ftmul@f3_as_product,___ftpack@arg
  4965  000B10  C076  F061         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4966  000B14  C077  F062         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4967  000B18  C074  F063         	movff	___ftmul@exp,___ftpack@exp
  4968  000B1C  C079  F064         	movff	___ftmul@sign,___ftpack@sign
  4969  000B20  ECDF  F008         	call	___ftpack	;wreg free
  4970  000B24  C060  F06B         	movff	?___ftpack,?___ftmul
  4971  000B28  C061  F06C         	movff	?___ftpack+1,?___ftmul+1
  4972  000B2C  C062  F06D         	movff	?___ftpack+2,?___ftmul+2
  4973  000B30  0012               	return	
  4974  000B32                     __end_of___ftmul:
  4975                           	opt stack 0
  4976                           tblptru	equ	0xFF8
  4977                           tblptrh	equ	0xFF7
  4978                           tblptrl	equ	0xFF6
  4979                           tablat	equ	0xFF5
  4980                           intcon	equ	0xFF2
  4981                           intcon2	equ	0xFF1
  4982                           intcon3	equ	0xFF0
  4983                           postinc0	equ	0xFEE
  4984                           wreg	equ	0xFE8
  4985                           status	equ	0xFD8
  4986                           
  4987 ;; *************** function ___ftpack *****************
  4988 ;; Defined at:
  4989 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  arg             3    0[BANK0 ] unsigned um
  4992 ;;  exp             1    3[BANK0 ] unsigned char 
  4993 ;;  sign            1    4[BANK0 ] unsigned char 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  3    0[BANK0 ] float 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5005 ;;      Params:         0       5       0       0       0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5007 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5008 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5009 ;;Total ram usage:        8 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    3
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		___awtoft
  5016 ;;		___ftadd
  5017 ;;		___ftmul
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text25
  5022  0011BE                     __ptext25:
  5023                           	opt stack 0
  5024  0011BE                     ___ftpack:
  5025                           	opt stack 25
  5026                           
  5027                           ;incstack = 0
  5028  0011BE  0100               	movlb	0	; () banked
  5029  0011C0  5163               	movf	___ftpack@exp& (0+255),w,b
  5030  0011C2  0100               	movlb	0	; () banked
  5031  0011C4  B4D8               	btfsc	status,2,c
  5032  0011C6  D008               	goto	l2470
  5033                           
  5034                           ; BSR set to: 0
  5035  0011C8  0100               	movlb	0	; () banked
  5036  0011CA  5160               	movf	___ftpack@arg& (0+255),w,b
  5037  0011CC  0100               	movlb	0	; () banked
  5038  0011CE  1161               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  5039  0011D0  0100               	movlb	0	; () banked
  5040  0011D2  1162               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  5041  0011D4  A4D8               	btfss	status,2,c
  5042  0011D6  D011               	goto	l2476
  5043  0011D8                     l2470:
  5044                           
  5045                           ; BSR set to: 0
  5046  0011D8  0E00               	movlw	0
  5047  0011DA  0100               	movlb	0	; () banked
  5048  0011DC  6F60               	movwf	?___ftpack& (0+255),b
  5049  0011DE  0E00               	movlw	0
  5050  0011E0  0100               	movlb	0	; () banked
  5051  0011E2  6F61               	movwf	(?___ftpack+1)& (0+255),b
  5052  0011E4  0E00               	movlw	0
  5053  0011E6  0100               	movlb	0	; () banked
  5054  0011E8  6F62               	movwf	(?___ftpack+2)& (0+255),b
  5055                           
  5056                           ; BSR set to: 0
  5057  0011EA  0012               	return	
  5058  0011EC                     l2474:
  5059                           
  5060                           ; BSR set to: 0
  5061  0011EC  0100               	movlb	0	; () banked
  5062  0011EE  2B63               	incf	___ftpack@exp& (0+255),f,b
  5063  0011F0  0100               	movlb	0	; () banked
  5064  0011F2  90D8               	bcf	status,0,c
  5065  0011F4  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5066  0011F6  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5067  0011F8  3360               	rrcf	___ftpack@arg& (0+255),f,b
  5068  0011FA                     l2476:
  5069                           
  5070                           ; BSR set to: 0
  5071  0011FA  0E00               	movlw	0
  5072  0011FC  0100               	movlb	0	; () banked
  5073  0011FE  1560               	andwf	___ftpack@arg& (0+255),w,b
  5074  001200  0100               	movlb	0	; () banked
  5075  001202  6F65               	movwf	??___ftpack& (0+255),b
  5076  001204  0E00               	movlw	0
  5077  001206  0100               	movlb	0	; () banked
  5078  001208  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5079  00120A  0100               	movlb	0	; () banked
  5080  00120C  6F66               	movwf	(??___ftpack+1)& (0+255),b
  5081  00120E  0EFE               	movlw	254
  5082  001210  0100               	movlb	0	; () banked
  5083  001212  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5084  001214  0100               	movlb	0	; () banked
  5085  001216  6F67               	movwf	(??___ftpack+2)& (0+255),b
  5086  001218  0100               	movlb	0	; () banked
  5087  00121A  5165               	movf	??___ftpack& (0+255),w,b
  5088  00121C  0100               	movlb	0	; () banked
  5089  00121E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  5090  001220  0100               	movlb	0	; () banked
  5091  001222  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  5092  001224  B4D8               	btfsc	status,2,c
  5093  001226  D011               	goto	l2482
  5094  001228  D7E1               	goto	l2474
  5095  00122A                     l2478:
  5096                           
  5097                           ; BSR set to: 0
  5098  00122A  0100               	movlb	0	; () banked
  5099  00122C  2B63               	incf	___ftpack@exp& (0+255),f,b
  5100                           
  5101                           ; BSR set to: 0
  5102  00122E  0E01               	movlw	1
  5103  001230  0100               	movlb	0	; () banked
  5104  001232  2760               	addwf	___ftpack@arg& (0+255),f,b
  5105  001234  0E00               	movlw	0
  5106  001236  0100               	movlb	0	; () banked
  5107  001238  2361               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5108  00123A  0E00               	movlw	0
  5109  00123C  0100               	movlb	0	; () banked
  5110  00123E  2362               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5111  001240  0100               	movlb	0	; () banked
  5112  001242  90D8               	bcf	status,0,c
  5113  001244  3362               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5114  001246  3361               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5115  001248  3360               	rrcf	___ftpack@arg& (0+255),f,b
  5116  00124A                     l2482:
  5117                           
  5118                           ; BSR set to: 0
  5119  00124A  0E00               	movlw	0
  5120  00124C  0100               	movlb	0	; () banked
  5121  00124E  1560               	andwf	___ftpack@arg& (0+255),w,b
  5122  001250  0100               	movlb	0	; () banked
  5123  001252  6F65               	movwf	??___ftpack& (0+255),b
  5124  001254  0E00               	movlw	0
  5125  001256  0100               	movlb	0	; () banked
  5126  001258  1561               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5127  00125A  0100               	movlb	0	; () banked
  5128  00125C  6F66               	movwf	(??___ftpack+1)& (0+255),b
  5129  00125E  0EFF               	movlw	255
  5130  001260  0100               	movlb	0	; () banked
  5131  001262  1562               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5132  001264  0100               	movlb	0	; () banked
  5133  001266  6F67               	movwf	(??___ftpack+2)& (0+255),b
  5134  001268  0100               	movlb	0	; () banked
  5135  00126A  5165               	movf	??___ftpack& (0+255),w,b
  5136  00126C  0100               	movlb	0	; () banked
  5137  00126E  1166               	iorwf	(??___ftpack+1)& (0+255),w,b
  5138  001270  0100               	movlb	0	; () banked
  5139  001272  1167               	iorwf	(??___ftpack+2)& (0+255),w,b
  5140  001274  B4D8               	btfsc	status,2,c
  5141  001276  D008               	goto	l2486
  5142  001278  D7D8               	goto	l2478
  5143  00127A                     l2484:
  5144                           
  5145                           ; BSR set to: 0
  5146  00127A  0100               	movlb	0	; () banked
  5147  00127C  0763               	decf	___ftpack@exp& (0+255),f,b
  5148  00127E  0100               	movlb	0	; () banked
  5149  001280  90D8               	bcf	status,0,c
  5150  001282  3760               	rlcf	___ftpack@arg& (0+255),f,b
  5151  001284  3761               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5152  001286  3762               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5153  001288                     l2486:
  5154                           
  5155                           ; BSR set to: 0
  5156  001288  0100               	movlb	0	; () banked
  5157  00128A  BF61               	btfsc	(___ftpack@arg+1)& (0+255),7,b
  5158  00128C  D004               	goto	l571
  5159                           
  5160                           ; BSR set to: 0
  5161  00128E  0E02               	movlw	2
  5162  001290  0100               	movlb	0	; () banked
  5163  001292  6163               	cpfslt	___ftpack@exp& (0+255),b
  5164  001294  D7F2               	goto	l2484
  5165  001296                     l571:
  5166                           
  5167                           ; BSR set to: 0
  5168  001296  0100               	movlb	0	; () banked
  5169  001298  B163               	btfsc	___ftpack@exp& (0+255),0,b
  5170  00129A  D002               	goto	l2492
  5171                           
  5172                           ; BSR set to: 0
  5173  00129C  0100               	movlb	0	; () banked
  5174  00129E  9F61               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5175  0012A0                     l2492:
  5176                           
  5177                           ; BSR set to: 0
  5178  0012A0  0100               	movlb	0	; () banked
  5179  0012A2  90D8               	bcf	status,0,c
  5180  0012A4  3363               	rrcf	___ftpack@exp& (0+255),f,b
  5181  0012A6  0100               	movlb	0	; () banked
  5182  0012A8  5163               	movf	___ftpack@exp& (0+255),w,b
  5183  0012AA  0100               	movlb	0	; () banked
  5184  0012AC  1362               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  5185                           
  5186                           ; BSR set to: 0
  5187  0012AE  0100               	movlb	0	; () banked
  5188  0012B0  5164               	movf	___ftpack@sign& (0+255),w,b
  5189  0012B2  0100               	movlb	0	; () banked
  5190  0012B4  B4D8               	btfsc	status,2,c
  5191  0012B6  D002               	goto	l2498
  5192                           
  5193                           ; BSR set to: 0
  5194  0012B8  0100               	movlb	0	; () banked
  5195  0012BA  8F62               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5196  0012BC                     l2498:
  5197                           
  5198                           ; BSR set to: 0
  5199  0012BC  C060  F060         	movff	___ftpack@arg,?___ftpack
  5200  0012C0  C061  F061         	movff	___ftpack@arg+1,?___ftpack+1
  5201  0012C4  C062  F062         	movff	___ftpack@arg+2,?___ftpack+2
  5202  0012C8  0012               	return	
  5203  0012CA                     __end_of___ftpack:
  5204                           	opt stack 0
  5205                           tblptru	equ	0xFF8
  5206                           tblptrh	equ	0xFF7
  5207                           tblptrl	equ	0xFF6
  5208                           tablat	equ	0xFF5
  5209                           intcon	equ	0xFF2
  5210                           intcon2	equ	0xFF1
  5211                           intcon3	equ	0xFF0
  5212                           postinc0	equ	0xFEE
  5213                           wreg	equ	0xFE8
  5214                           status	equ	0xFD8
  5215                           
  5216 ;; *************** function _sensor *****************
  5217 ;; Defined at:
  5218 ;;		line 213 in file "newmain.c"
  5219 ;; Parameters:    Size  Location     Type
  5220 ;;		None
  5221 ;; Auto vars:     Size  Location     Type
  5222 ;;		None
  5223 ;; Return value:  Size  Location     Type
  5224 ;;                  1    wreg      void 
  5225 ;; Registers used:
  5226 ;;		cstack
  5227 ;; Tracked objects:
  5228 ;;		On entry : 0/0
  5229 ;;		On exit  : 0/0
  5230 ;;		Unchanged: 0/0
  5231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5232 ;;      Params:         0       0       0       0       0       0       0       0       0
  5233 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5234 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5235 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5236 ;;Total ram usage:       17 bytes
  5237 ;; Hardware stack levels used:    1
  5238 ;; Hardware stack levels required when called:    2
  5239 ;; This function calls:
  5240 ;;		i1_sensorOFF
  5241 ;; This function is called by:
  5242 ;;		Interrupt level 1
  5243 ;; This function uses a non-reentrant model
  5244 ;;
  5245                           
  5246                           	psect	intcodelo
  5247  000018                     __pintcodelo:
  5248                           	opt stack 0
  5249  000018                     _sensor:
  5250                           	opt stack 23
  5251                           
  5252                           ; BSR set to: 0
  5253                           ;incstack = 0
  5254  000018  8040               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5255  00001A  CFD8 F00F          	movff	status,??_sensor
  5256  00001E  CFE8 F010          	movff	wreg,??_sensor+1
  5257  000022  CFE0 F011          	movff	bsr,??_sensor+2
  5258  000026  CFFA F012          	movff	pclath,??_sensor+3
  5259  00002A  CFFB F013          	movff	pclatu,??_sensor+4
  5260  00002E  CFE9 F014          	movff	fsr0l,??_sensor+5
  5261  000032  CFEA F015          	movff	fsr0h,??_sensor+6
  5262  000036  CFE1 F016          	movff	fsr1l,??_sensor+7
  5263  00003A  CFE2 F017          	movff	fsr1h,??_sensor+8
  5264  00003E  CFD9 F018          	movff	fsr2l,??_sensor+9
  5265  000042  CFDA F019          	movff	fsr2h,??_sensor+10
  5266  000046  CFF3 F01A          	movff	prodl,??_sensor+11
  5267  00004A  CFF4 F01B          	movff	prodh,??_sensor+12
  5268  00004E  CFF6 F01C          	movff	tblptrl,??_sensor+13
  5269  000052  CFF7 F01D          	movff	tblptrh,??_sensor+14
  5270  000056  CFF8 F01E          	movff	tblptru,??_sensor+15
  5271  00005A  CFF5 F01F          	movff	tablat,??_sensor+16
  5272                           
  5273                           ;newmain.c: 214: if (INT1IF) {
  5274  00005E  A0F0               	btfss	intcon3,0,c	;volatile
  5275  000060  D003               	goto	i1l1698
  5276                           
  5277                           ;newmain.c: 215: sensorOFF();
  5278  000062  EC15  F00C         	call	i1_sensorOFF	;wreg free
  5279                           
  5280                           ;newmain.c: 216: INT1IF = 0;
  5281  000066  90F0               	bcf	intcon3,0,c	;volatile
  5282  000068                     i1l1698:
  5283                           
  5284                           ;newmain.c: 217: }
  5285                           ;newmain.c: 218: if (INT2IF) {
  5286  000068  A2F0               	btfss	intcon3,1,c	;volatile
  5287  00006A  D003               	goto	i1l245
  5288                           
  5289                           ;newmain.c: 219: sensorOFF();
  5290  00006C  EC15  F00C         	call	i1_sensorOFF	;wreg free
  5291                           
  5292                           ;newmain.c: 220: INT2IF = 0;
  5293  000070  92F0               	bcf	intcon3,1,c	;volatile
  5294  000072                     i1l245:
  5295  000072  C01F  FFF5         	movff	??_sensor+16,tablat
  5296  000076  C01E  FFF8         	movff	??_sensor+15,tblptru
  5297  00007A  C01D  FFF7         	movff	??_sensor+14,tblptrh
  5298  00007E  C01C  FFF6         	movff	??_sensor+13,tblptrl
  5299  000082  C01B  FFF4         	movff	??_sensor+12,prodh
  5300  000086  C01A  FFF3         	movff	??_sensor+11,prodl
  5301  00008A  C019  FFDA         	movff	??_sensor+10,fsr2h
  5302  00008E  C018  FFD9         	movff	??_sensor+9,fsr2l
  5303  000092  C017  FFE2         	movff	??_sensor+8,fsr1h
  5304  000096  C016  FFE1         	movff	??_sensor+7,fsr1l
  5305  00009A  C015  FFEA         	movff	??_sensor+6,fsr0h
  5306  00009E  C014  FFE9         	movff	??_sensor+5,fsr0l
  5307  0000A2  C013  FFFB         	movff	??_sensor+4,pclatu
  5308  0000A6  C012  FFFA         	movff	??_sensor+3,pclath
  5309  0000AA  C011  FFE0         	movff	??_sensor+2,bsr
  5310  0000AE  C010  FFE8         	movff	??_sensor+1,wreg
  5311  0000B2  C00F  FFD8         	movff	??_sensor,status
  5312  0000B6  9040               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5313  0000B8  0010               	retfie	
  5314  0000BA                     __end_of_sensor:
  5315                           	opt stack 0
  5316                           pclatu	equ	0xFFB
  5317                           pclath	equ	0xFFA
  5318                           tblptru	equ	0xFF8
  5319                           tblptrh	equ	0xFF7
  5320                           tblptrl	equ	0xFF6
  5321                           tablat	equ	0xFF5
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           intcon2	equ	0xFF1
  5326                           intcon3	equ	0xFF0
  5327                           postinc0	equ	0xFEE
  5328                           fsr0h	equ	0xFEA
  5329                           fsr0l	equ	0xFE9
  5330                           wreg	equ	0xFE8
  5331                           fsr1h	equ	0xFE2
  5332                           fsr1l	equ	0xFE1
  5333                           bsr	equ	0xFE0
  5334                           fsr2h	equ	0xFDA
  5335                           fsr2l	equ	0xFD9
  5336                           status	equ	0xFD8
  5337                           
  5338 ;; *************** function i1_sensorOFF *****************
  5339 ;; Defined at:
  5340 ;;		line 466 in file "newmain.c"
  5341 ;; Parameters:    Size  Location     Type
  5342 ;;		None
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		None
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5354 ;;      Params:         0       0       0       0       0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5357 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5358 ;;Total ram usage:        0 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    1
  5361 ;; This function calls:
  5362 ;;		Nothing
  5363 ;; This function is called by:
  5364 ;;		_sensor
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text27
  5369  00182A                     __ptext27:
  5370                           	opt stack 0
  5371  00182A                     i1_sensorOFF:
  5372                           	opt stack 23
  5373                           
  5374                           ;newmain.c: 467: LATB0 = 0;
  5375                           
  5376                           ;incstack = 0
  5377  00182A  908A               	bcf	3978,0,c	;volatile
  5378                           
  5379                           ;newmain.c: 468: LATB1 = 0;
  5380  00182C  928A               	bcf	3978,1,c	;volatile
  5381                           
  5382                           ;newmain.c: 469: LATB2 = 0;
  5383  00182E  948A               	bcf	3978,2,c	;volatile
  5384                           
  5385                           ;newmain.c: 470: LATB3 = 0;
  5386  001830  968A               	bcf	3978,3,c	;volatile
  5387  001832  0012               	return		;funcret
  5388  001834                     __end_ofi1_sensorOFF:
  5389                           	opt stack 0
  5390                           pclatu	equ	0xFFB
  5391                           pclath	equ	0xFFA
  5392                           tblptru	equ	0xFF8
  5393                           tblptrh	equ	0xFF7
  5394                           tblptrl	equ	0xFF6
  5395                           tablat	equ	0xFF5
  5396                           prodh	equ	0xFF4
  5397                           prodl	equ	0xFF3
  5398                           intcon	equ	0xFF2
  5399                           intcon2	equ	0xFF1
  5400                           intcon3	equ	0xFF0
  5401                           postinc0	equ	0xFEE
  5402                           fsr0h	equ	0xFEA
  5403                           fsr0l	equ	0xFE9
  5404                           wreg	equ	0xFE8
  5405                           fsr1h	equ	0xFE2
  5406                           fsr1l	equ	0xFE1
  5407                           bsr	equ	0xFE0
  5408                           fsr2h	equ	0xFDA
  5409                           fsr2l	equ	0xFD9
  5410                           status	equ	0xFD8
  5411                           
  5412 ;; *************** function _UART_Rx *****************
  5413 ;; Defined at:
  5414 ;;		line 182 in file "newmain.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      void 
  5421 ;; Registers used:
  5422 ;;		wreg, status,2, status,0
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5428 ;;      Params:         0       0       0       0       0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5430 ;;      Temps:         14       0       0       0       0       0       0       0       0
  5431 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5432 ;;Total ram usage:       14 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		Interrupt level 2
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	intcode
  5442  000008                     __pintcode:
  5443                           	opt stack 0
  5444  000008                     _UART_Rx:
  5445                           	opt stack 23
  5446                           
  5447                           ;incstack = 0
  5448  000008  8240               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  5449  00000A  ED02  F004         	call	int_func,f	;refresh shadow registers
  5450                           pclatu	equ	0xFFB
  5451                           pclath	equ	0xFFA
  5452                           tblptru	equ	0xFF8
  5453                           tblptrh	equ	0xFF7
  5454                           tblptrl	equ	0xFF6
  5455                           tablat	equ	0xFF5
  5456                           prodh	equ	0xFF4
  5457                           prodl	equ	0xFF3
  5458                           intcon	equ	0xFF2
  5459                           intcon2	equ	0xFF1
  5460                           intcon3	equ	0xFF0
  5461                           postinc0	equ	0xFEE
  5462                           fsr0h	equ	0xFEA
  5463                           fsr0l	equ	0xFE9
  5464                           wreg	equ	0xFE8
  5465                           fsr1h	equ	0xFE2
  5466                           fsr1l	equ	0xFE1
  5467                           bsr	equ	0xFE0
  5468                           fsr2h	equ	0xFDA
  5469                           fsr2l	equ	0xFD9
  5470                           status	equ	0xFD8
  5471                           
  5472                           	psect	intcode_body
  5473  000804                     __pintcode_body:
  5474                           	opt stack 23
  5475  000804                     int_func:
  5476                           	opt stack 23
  5477  000804  0006               	pop		; remove dummy address from shadow register refresh
  5478  000806  CFFA F001          	movff	pclath,??_UART_Rx
  5479  00080A  CFFB F002          	movff	pclatu,??_UART_Rx+1
  5480  00080E  CFE9 F003          	movff	fsr0l,??_UART_Rx+2
  5481  000812  CFEA F004          	movff	fsr0h,??_UART_Rx+3
  5482  000816  CFE1 F005          	movff	fsr1l,??_UART_Rx+4
  5483  00081A  CFE2 F006          	movff	fsr1h,??_UART_Rx+5
  5484  00081E  CFD9 F007          	movff	fsr2l,??_UART_Rx+6
  5485  000822  CFDA F008          	movff	fsr2h,??_UART_Rx+7
  5486  000826  CFF3 F009          	movff	prodl,??_UART_Rx+8
  5487  00082A  CFF4 F00A          	movff	prodh,??_UART_Rx+9
  5488  00082E  CFF6 F00B          	movff	tblptrl,??_UART_Rx+10
  5489  000832  CFF7 F00C          	movff	tblptrh,??_UART_Rx+11
  5490  000836  CFF8 F00D          	movff	tblptru,??_UART_Rx+12
  5491  00083A  CFF5 F00E          	movff	tablat,??_UART_Rx+13
  5492                           
  5493                           ;newmain.c: 183: if (RCIF == 1) {
  5494  00083E  AA9E               	btfss	3998,5,c	;volatile
  5495  000840  D0AB               	goto	i2l240
  5496                           
  5497                           ;newmain.c: 184: a = RCREG;
  5498  000842  CFAE F099          	movff	4014,_a	;volatile
  5499  000846  0100               	movlb	0	; () banked
  5500  000848  6B9A               	clrf	(_a+1)& (0+255),b
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;newmain.c: 185: if (a == 'm' || a == 'M') {
  5504  00084A  0E6D               	movlw	109
  5505  00084C  0100               	movlb	0	; () banked
  5506  00084E  1999               	xorwf	_a& (0+255),w,b
  5507  000850  0100               	movlb	0	; () banked
  5508  000852  119A               	iorwf	(_a+1)& (0+255),w,b
  5509  000854  B4D8               	btfsc	status,2,c
  5510  000856  D007               	goto	i2l2382
  5511                           
  5512                           ; BSR set to: 0
  5513  000858  0E4D               	movlw	77
  5514  00085A  0100               	movlb	0	; () banked
  5515  00085C  1999               	xorwf	_a& (0+255),w,b
  5516  00085E  0100               	movlb	0	; () banked
  5517  000860  119A               	iorwf	(_a+1)& (0+255),w,b
  5518  000862  A4D8               	btfss	status,2,c
  5519  000864  D005               	goto	i2l2384
  5520  000866                     i2l2382:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;newmain.c: 186: mood = 1;
  5524  000866  0E00               	movlw	0
  5525  000868  0100               	movlb	0	; () banked
  5526  00086A  6F9C               	movwf	(_mood+1)& (0+255),b
  5527  00086C  0E01               	movlw	1
  5528  00086E  D025               	goto	L3
  5529  000870                     i2l2384:
  5530                           
  5531                           ; BSR set to: 0
  5532  000870  0E61               	movlw	97
  5533  000872  0100               	movlb	0	; () banked
  5534  000874  1999               	xorwf	_a& (0+255),w,b
  5535  000876  0100               	movlb	0	; () banked
  5536  000878  119A               	iorwf	(_a+1)& (0+255),w,b
  5537  00087A  B4D8               	btfsc	status,2,c
  5538  00087C  D007               	goto	i2l2388
  5539                           
  5540                           ; BSR set to: 0
  5541  00087E  0E41               	movlw	65
  5542  000880  0100               	movlb	0	; () banked
  5543  000882  1999               	xorwf	_a& (0+255),w,b
  5544  000884  0100               	movlb	0	; () banked
  5545  000886  119A               	iorwf	(_a+1)& (0+255),w,b
  5546  000888  A4D8               	btfss	status,2,c
  5547  00088A  D005               	goto	i2l2390
  5548  00088C                     i2l2388:
  5549                           
  5550                           ; BSR set to: 0
  5551                           ;newmain.c: 188: mood = 2;
  5552  00088C  0E00               	movlw	0
  5553  00088E  0100               	movlb	0	; () banked
  5554  000890  6F9C               	movwf	(_mood+1)& (0+255),b
  5555  000892  0E02               	movlw	2
  5556  000894  D012               	goto	L3
  5557  000896                     i2l2390:
  5558                           
  5559                           ; BSR set to: 0
  5560  000896  0E73               	movlw	115
  5561  000898  0100               	movlb	0	; () banked
  5562  00089A  1999               	xorwf	_a& (0+255),w,b
  5563  00089C  0100               	movlb	0	; () banked
  5564  00089E  119A               	iorwf	(_a+1)& (0+255),w,b
  5565  0008A0  B4D8               	btfsc	status,2,c
  5566  0008A2  D007               	goto	i2l2394
  5567                           
  5568                           ; BSR set to: 0
  5569  0008A4  0E53               	movlw	83
  5570  0008A6  0100               	movlb	0	; () banked
  5571  0008A8  1999               	xorwf	_a& (0+255),w,b
  5572  0008AA  0100               	movlb	0	; () banked
  5573  0008AC  119A               	iorwf	(_a+1)& (0+255),w,b
  5574  0008AE  A4D8               	btfss	status,2,c
  5575  0008B0  D006               	goto	i2l2396
  5576  0008B2                     i2l2394:
  5577                           
  5578                           ; BSR set to: 0
  5579                           ;newmain.c: 190: mood = 3;
  5580  0008B2  0E00               	movlw	0
  5581  0008B4  0100               	movlb	0	; () banked
  5582  0008B6  6F9C               	movwf	(_mood+1)& (0+255),b
  5583  0008B8  0E03               	movlw	3
  5584  0008BA                     L3:
  5585  0008BA  6F9B               	movwf	_mood& (0+255),b
  5586                           
  5587                           ;newmain.c: 191: } else if (a == '0') {
  5588  0008BC  D06D               	goto	i2l240
  5589  0008BE                     i2l2396:
  5590                           
  5591                           ; BSR set to: 0
  5592  0008BE  0E30               	movlw	48
  5593  0008C0  0100               	movlb	0	; () banked
  5594  0008C2  1999               	xorwf	_a& (0+255),w,b
  5595  0008C4  0100               	movlb	0	; () banked
  5596  0008C6  119A               	iorwf	(_a+1)& (0+255),w,b
  5597  0008C8  A4D8               	btfss	status,2,c
  5598  0008CA  D005               	goto	i2l2400
  5599                           
  5600                           ; BSR set to: 0
  5601                           ;newmain.c: 192: modo = 0;
  5602  0008CC  0E00               	movlw	0
  5603  0008CE  0100               	movlb	0	; () banked
  5604  0008D0  6FA0               	movwf	(_modo+1)& (0+255),b
  5605  0008D2  0E00               	movlw	0
  5606  0008D4  D02F               	goto	L7
  5607  0008D6                     i2l2400:
  5608                           
  5609                           ; BSR set to: 0
  5610  0008D6  0E31               	movlw	49
  5611  0008D8  0100               	movlb	0	; () banked
  5612  0008DA  1999               	xorwf	_a& (0+255),w,b
  5613  0008DC  0100               	movlb	0	; () banked
  5614  0008DE  119A               	iorwf	(_a+1)& (0+255),w,b
  5615  0008E0  A4D8               	btfss	status,2,c
  5616  0008E2  D005               	goto	i2l2404
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;newmain.c: 194: modo = 1;
  5620  0008E4  0E00               	movlw	0
  5621  0008E6  0100               	movlb	0	; () banked
  5622  0008E8  6FA0               	movwf	(_modo+1)& (0+255),b
  5623  0008EA  0E01               	movlw	1
  5624  0008EC  D023               	goto	L7
  5625  0008EE                     i2l2404:
  5626                           
  5627                           ; BSR set to: 0
  5628  0008EE  0E32               	movlw	50
  5629  0008F0  0100               	movlb	0	; () banked
  5630  0008F2  1999               	xorwf	_a& (0+255),w,b
  5631  0008F4  0100               	movlb	0	; () banked
  5632  0008F6  119A               	iorwf	(_a+1)& (0+255),w,b
  5633  0008F8  A4D8               	btfss	status,2,c
  5634  0008FA  D005               	goto	i2l2408
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;newmain.c: 196: modo = 2;
  5638  0008FC  0E00               	movlw	0
  5639  0008FE  0100               	movlb	0	; () banked
  5640  000900  6FA0               	movwf	(_modo+1)& (0+255),b
  5641  000902  0E02               	movlw	2
  5642  000904  D017               	goto	L7
  5643  000906                     i2l2408:
  5644                           
  5645                           ; BSR set to: 0
  5646  000906  0E33               	movlw	51
  5647  000908  0100               	movlb	0	; () banked
  5648  00090A  1999               	xorwf	_a& (0+255),w,b
  5649  00090C  0100               	movlb	0	; () banked
  5650  00090E  119A               	iorwf	(_a+1)& (0+255),w,b
  5651  000910  A4D8               	btfss	status,2,c
  5652  000912  D005               	goto	i2l2412
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;newmain.c: 198: modo = 3;
  5656  000914  0E00               	movlw	0
  5657  000916  0100               	movlb	0	; () banked
  5658  000918  6FA0               	movwf	(_modo+1)& (0+255),b
  5659  00091A  0E03               	movlw	3
  5660  00091C  D00B               	goto	L7
  5661  00091E                     i2l2412:
  5662                           
  5663                           ; BSR set to: 0
  5664  00091E  0E34               	movlw	52
  5665  000920  0100               	movlb	0	; () banked
  5666  000922  1999               	xorwf	_a& (0+255),w,b
  5667  000924  0100               	movlb	0	; () banked
  5668  000926  119A               	iorwf	(_a+1)& (0+255),w,b
  5669  000928  A4D8               	btfss	status,2,c
  5670  00092A  D006               	goto	i2l2416
  5671                           
  5672                           ; BSR set to: 0
  5673                           ;newmain.c: 200: modo = 4;
  5674  00092C  0E00               	movlw	0
  5675  00092E  0100               	movlb	0	; () banked
  5676  000930  6FA0               	movwf	(_modo+1)& (0+255),b
  5677  000932  0E04               	movlw	4
  5678  000934                     L7:
  5679  000934  6F9F               	movwf	_modo& (0+255),b
  5680                           
  5681                           ;newmain.c: 201: } else if (a == '5') {
  5682  000936  D030               	goto	i2l240
  5683  000938                     i2l2416:
  5684                           
  5685                           ; BSR set to: 0
  5686  000938  0E35               	movlw	53
  5687  00093A  0100               	movlb	0	; () banked
  5688  00093C  1999               	xorwf	_a& (0+255),w,b
  5689  00093E  0100               	movlb	0	; () banked
  5690  000940  119A               	iorwf	(_a+1)& (0+255),w,b
  5691  000942  A4D8               	btfss	status,2,c
  5692  000944  D005               	goto	i2l2420
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;newmain.c: 202: PWM = 1;
  5696  000946  0E00               	movlw	0
  5697  000948  0100               	movlb	0	; () banked
  5698  00094A  6F9E               	movwf	(_PWM+1)& (0+255),b
  5699  00094C  0E01               	movlw	1
  5700  00094E  D023               	goto	L10
  5701  000950                     i2l2420:
  5702                           
  5703                           ; BSR set to: 0
  5704  000950  0E36               	movlw	54
  5705  000952  0100               	movlb	0	; () banked
  5706  000954  1999               	xorwf	_a& (0+255),w,b
  5707  000956  0100               	movlb	0	; () banked
  5708  000958  119A               	iorwf	(_a+1)& (0+255),w,b
  5709  00095A  A4D8               	btfss	status,2,c
  5710  00095C  D005               	goto	i2l2424
  5711                           
  5712                           ; BSR set to: 0
  5713                           ;newmain.c: 204: PWM = 2;
  5714  00095E  0E00               	movlw	0
  5715  000960  0100               	movlb	0	; () banked
  5716  000962  6F9E               	movwf	(_PWM+1)& (0+255),b
  5717  000964  0E02               	movlw	2
  5718  000966  D017               	goto	L10
  5719  000968                     i2l2424:
  5720                           
  5721                           ; BSR set to: 0
  5722  000968  0E37               	movlw	55
  5723  00096A  0100               	movlb	0	; () banked
  5724  00096C  1999               	xorwf	_a& (0+255),w,b
  5725  00096E  0100               	movlb	0	; () banked
  5726  000970  119A               	iorwf	(_a+1)& (0+255),w,b
  5727  000972  A4D8               	btfss	status,2,c
  5728  000974  D005               	goto	i2l2428
  5729                           
  5730                           ; BSR set to: 0
  5731                           ;newmain.c: 206: PWM = 3;
  5732  000976  0E00               	movlw	0
  5733  000978  0100               	movlb	0	; () banked
  5734  00097A  6F9E               	movwf	(_PWM+1)& (0+255),b
  5735  00097C  0E03               	movlw	3
  5736  00097E  D00B               	goto	L10
  5737  000980                     i2l2428:
  5738                           
  5739                           ; BSR set to: 0
  5740  000980  0E38               	movlw	56
  5741  000982  0100               	movlb	0	; () banked
  5742  000984  1999               	xorwf	_a& (0+255),w,b
  5743  000986  0100               	movlb	0	; () banked
  5744  000988  119A               	iorwf	(_a+1)& (0+255),w,b
  5745  00098A  A4D8               	btfss	status,2,c
  5746  00098C  D005               	goto	i2l240
  5747                           
  5748                           ; BSR set to: 0
  5749                           ;newmain.c: 208: PWM = 4;
  5750  00098E  0E00               	movlw	0
  5751  000990  0100               	movlb	0	; () banked
  5752  000992  6F9E               	movwf	(_PWM+1)& (0+255),b
  5753  000994  0E04               	movlw	4
  5754  000996                     L10:
  5755  000996  6F9D               	movwf	_PWM& (0+255),b
  5756  000998                     i2l240:
  5757  000998  C00E  FFF5         	movff	??_UART_Rx+13,tablat
  5758  00099C  C00D  FFF8         	movff	??_UART_Rx+12,tblptru
  5759  0009A0  C00C  FFF7         	movff	??_UART_Rx+11,tblptrh
  5760  0009A4  C00B  FFF6         	movff	??_UART_Rx+10,tblptrl
  5761  0009A8  C00A  FFF4         	movff	??_UART_Rx+9,prodh
  5762  0009AC  C009  FFF3         	movff	??_UART_Rx+8,prodl
  5763  0009B0  C008  FFDA         	movff	??_UART_Rx+7,fsr2h
  5764  0009B4  C007  FFD9         	movff	??_UART_Rx+6,fsr2l
  5765  0009B8  C006  FFE2         	movff	??_UART_Rx+5,fsr1h
  5766  0009BC  C005  FFE1         	movff	??_UART_Rx+4,fsr1l
  5767  0009C0  C004  FFEA         	movff	??_UART_Rx+3,fsr0h
  5768  0009C4  C003  FFE9         	movff	??_UART_Rx+2,fsr0l
  5769  0009C8  C002  FFFB         	movff	??_UART_Rx+1,pclatu
  5770  0009CC  C001  FFFA         	movff	??_UART_Rx,pclath
  5771  0009D0  9240               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  5772  0009D2  0011               	retfie		f
  5773  0009D4                     __end_of_UART_Rx:
  5774                           	opt stack 0
  5775  0000                     pclatu	equ	0xFFB
  5776                           pclath	equ	0xFFA
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           intcon2	equ	0xFF1
  5785                           intcon3	equ	0xFF0
  5786                           postinc0	equ	0xFEE
  5787                           fsr0h	equ	0xFEA
  5788                           fsr0l	equ	0xFE9
  5789                           wreg	equ	0xFE8
  5790                           fsr1h	equ	0xFE2
  5791                           fsr1l	equ	0xFE1
  5792                           bsr	equ	0xFE0
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           pclatu	equ	0xFFB
  5797                           pclath	equ	0xFFA
  5798                           tblptru	equ	0xFF8
  5799                           tblptrh	equ	0xFF7
  5800                           tblptrl	equ	0xFF6
  5801                           tablat	equ	0xFF5
  5802                           prodh	equ	0xFF4
  5803                           prodl	equ	0xFF3
  5804                           intcon	equ	0xFF2
  5805                           intcon2	equ	0xFF1
  5806                           intcon3	equ	0xFF0
  5807                           postinc0	equ	0xFEE
  5808                           fsr0h	equ	0xFEA
  5809                           fsr0l	equ	0xFE9
  5810                           wreg	equ	0xFE8
  5811                           fsr1h	equ	0xFE2
  5812                           fsr1l	equ	0xFE1
  5813                           bsr	equ	0xFE0
  5814                           fsr2h	equ	0xFDA
  5815                           fsr2l	equ	0xFD9
  5816                           status	equ	0xFD8
  5817                           
  5818                           	psect	rparam
  5819  0000                     pclatu	equ	0xFFB
  5820                           pclath	equ	0xFFA
  5821                           tblptru	equ	0xFF8
  5822                           tblptrh	equ	0xFF7
  5823                           tblptrl	equ	0xFF6
  5824                           tablat	equ	0xFF5
  5825                           prodh	equ	0xFF4
  5826                           prodl	equ	0xFF3
  5827                           intcon	equ	0xFF2
  5828                           intcon2	equ	0xFF1
  5829                           intcon3	equ	0xFF0
  5830                           postinc0	equ	0xFEE
  5831                           fsr0h	equ	0xFEA
  5832                           fsr0l	equ	0xFE9
  5833                           wreg	equ	0xFE8
  5834                           fsr1h	equ	0xFE2
  5835                           fsr1l	equ	0xFE1
  5836                           bsr	equ	0xFE0
  5837                           fsr2h	equ	0xFDA
  5838                           fsr2l	equ	0xFD9
  5839                           status	equ	0xFD8
  5840                           
  5841                           	psect	temp
  5842  000040                     btemp:
  5843                           	opt stack 0
  5844  000040                     	ds	1
  5845  0000                     int$flags	set	btemp
  5846                           pclatu	equ	0xFFB
  5847                           pclath	equ	0xFFA
  5848                           tblptru	equ	0xFF8
  5849                           tblptrh	equ	0xFF7
  5850                           tblptrl	equ	0xFF6
  5851                           tablat	equ	0xFF5
  5852                           prodh	equ	0xFF4
  5853                           prodl	equ	0xFF3
  5854                           intcon	equ	0xFF2
  5855                           intcon2	equ	0xFF1
  5856                           intcon3	equ	0xFF0
  5857                           postinc0	equ	0xFEE
  5858                           fsr0h	equ	0xFEA
  5859                           fsr0l	equ	0xFE9
  5860                           wreg	equ	0xFE8
  5861                           fsr1h	equ	0xFE2
  5862                           fsr1l	equ	0xFE1
  5863                           bsr	equ	0xFE0
  5864                           fsr2h	equ	0xFDA
  5865                           fsr2l	equ	0xFD9
  5866                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         51
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     32      63
    BANK0           160     48      70
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _start1->___awtoft
    _start->___awtoft
    _start2->___awtoft
    ___ftmul->___awtoft

Critical Paths under _sensor in COMRAM

    None.

Critical Paths under _UART_Rx in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_start
    _main->_start1
    _start1->___ftadd
    _start->___ftadd
    _pwmB2->___ftadd
    _pwmB1->___ftadd
    _pwmA2->___ftadd
    _pwmA1->___ftadd
    ___ftadd->___ftmul
    _pwmD->___ftmul
    _automatico->_adelante
    _automatico->_start2
    _start2->___ftmul
    ___awtoft->___ftpack
    _pwmI->___ftmul
    _pwm->___ftmul
    ___ftmul->___awtoft

Critical Paths under _sensor in BANK0

    None.

Critical Paths under _UART_Rx in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _sensor in BANK1

    None.

Critical Paths under _UART_Rx in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _sensor in BANK2

    None.

Critical Paths under _UART_Rx in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _sensor in BANK3

    None.

Critical Paths under _UART_Rx in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _sensor in BANK4

    None.

Critical Paths under _UART_Rx in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _sensor in BANK5

    None.

Critical Paths under _UART_Rx in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _sensor in BANK6

    None.

Critical Paths under _UART_Rx in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _sensor in BANK7

    None.

Critical Paths under _UART_Rx in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   99934
                                             46 BANK0      2     2      0
                         _automatico
                             _manual
                           _settings
                              _start
                             _start1
 ---------------------------------------------------------------------------------
 (1) _start1                                               8     8      0   13087
                                             38 BANK0      8     8      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _start                                                8     8      0   13087
                                             38 BANK0      8     8      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
 ---------------------------------------------------------------------------------
 (1) _settings                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _manual                                               0     0      0   50672
                           _adelante
                              _atras
                            _derecha
                              _freno
                          _izquierda
                              _pwmA1
                              _pwmA2
                              _pwmB1
                              _pwmB2
                          _sensorOFF
 ---------------------------------------------------------------------------------
 (2) _sensorOFF                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwmB2                                                0     0      0    5089
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _pwmB1                                                0     0      0    6211
                            ___ftadd
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) _pwmA2                                                0     0      0    5089
                            ___ftadd
 ---------------------------------------------------------------------------------
 (2) _pwmA1                                                0     0      0    6211
                            ___ftadd
                             ___ftge
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             12     6      6    5089
                                             26 BANK0     12     6      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _derecha                                              0     0      0    7579
                               _pwmD
 ---------------------------------------------------------------------------------
 (3) _pwmD                                                 0     0      0    7579
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (2) _atras                                                2     2      0    6457
                                             26 BANK0      2     2      0
                                _pwm
 ---------------------------------------------------------------------------------
 (1) _automatico                                           2     2      0   23088
                                             28 BANK0      2     2      0
                             ___ftge
                           _adelante
                              _freno
                          _izquierda
                             _start2
 ---------------------------------------------------------------------------------
 (2) _start2                                               2     2      0    7930
                                             26 BANK0      2     2      0
                           ___awtoft
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             4     1      3    2768
                                             31 COMRAM     1     1      0
                                              8 BANK0      3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _izquierda                                            0     0      0    7579
                               _pwmI
 ---------------------------------------------------------------------------------
 (3) _pwmI                                                 0     0      0    7579
                             ___ftge
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    1122
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) _freno                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adelante                                             2     2      0    6457
                                             26 BANK0      2     2      0
                                _pwm
 ---------------------------------------------------------------------------------
 (3) _pwm                                                  0     0      0    6457
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4    1295
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    5162
                                             11 BANK0     15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2404
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _sensor                                              17    17      0       0
                                             14 COMRAM    17    17      0
                        i1_sensorOFF
 ---------------------------------------------------------------------------------
 (7) i1_sensorOFF                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _UART_Rx                                             14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _automatico
     ___ftge
     _adelante
       _pwm
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _freno
     _izquierda
       _pwmI
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _start2
       ___awtoft
         ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
   _manual
     _adelante
       _pwm
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _atras
       _pwm
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _derecha
       _pwmD
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _freno
     _izquierda
       _pwmI
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___fttol
     _pwmA1
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
     _pwmA2
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
     _pwmB1
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___ftge
     _pwmB2
       ___ftadd
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
     _sensorOFF
   _settings
   _start
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _start1
     ___awtoft
       ___ftpack
     ___ftadd
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftpack (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)

 _sensor (ROOT)
   i1_sensorOFF

 _UART_Rx (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     30      46       5       43.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     20      3F       1       67.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      85      20        0.0%
DATA                 0      0      85       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon Mar 14 13:24:33 2022

    __end_ofi1_sensorOFF 1834                        _a 0099                        _b 0021  
                      _c 00A3                        _i 0036                        _n 0030  
                      _s 0032                        _x 00A1                        _y 003E  
                      _z 0034                       _GO 007E11                       _d1 0093  
                     _d2 0090                       bsr 000FE0             ___ftadd@exp1 0085  
           ___ftadd@exp2 0084             ___ftadd@sign 0083                      l203 1488  
                    l250 00E4                      l253 01D6                      l600 0428  
                    l177 165A                      l179 1664                      l196 0B34  
                    l189 0C8C                      l609 04FE                      l618 0528  
                    l571 1296                      l594 03C6                      l598 0400  
                    _GIE 007F97                      _PR2 000FCB                      _PWM 009D  
                    _pwm 12CA                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     l3022 034A                     l3080 169E  
                   l2514 0A48                     l2610 11AC                     l2602 1176  
                   l2532 0AB4                     l2508 0A0E                     l2604 1186  
                   l2700 048E                     l3076 166E                     l2470 11D8  
                   l2542 0AF2                     l2606 1190                     l2702 049C  
                   l3078 167A                     l2528 0A96                     l2632 0F60  
                   l2720 0552                     l2712 04E4                     l2704 04AA  
                   l2482 124A                     l2474 11EC                     l2538 0AD4  
                   l2618 12EE                     l2554 13FE                     l2650 0E14  
                   l2730 05A0                     l2714 04F2                     l2706 04B6  
                   l2492 12A0                     l2484 127A                     l2476 11FA  
                   l2564 1482                     l2486 1288                     l2478 122A  
                   l2574 10B4                     l2558 143E                     l2742 1740  
                   l2902 0738                     l2830 05DE                     l2592 1146  
                   l2672 03D4                     l2840 060A                     l2498 12BC  
                   l2930 07C0                     l2914 0774                     l2596 115A  
                   l2684 041E                     l2924 07A2                     l2908 0756  
                   l2852 0646                     l2694 0460                     l2678 040E  
                   l2846 0628                     l2942 07FC                     l2952 00DA  
                   l2936 07DE                     l2880 06CE                     l2954 00E0  
                   l2874 06B0                     l2858 0664                     l2980 01D2  
                   l2868 0692                     l2886 06EC                     l2896 071A  
                   ?_pwm 0001                     _LATA 000F89                     _LATB 000F8A  
                   u2151 09EA                     u3007 019E                     _LATC 000F8B  
                   u2241 1090                     u3017 01BE                     _LATE 000F8D  
                   u2171 0A24                     u3107 030E                     u3027 0210  
                   u2260 10DA                     u3117 032E                     u3037 0230  
                   u3127 14A2                     u3047 0250                     u2351 0374  
                   u2265 10D0                     u3137 17DE                     u3057 026E  
                   u2361 0392                     u3067 028E                     u3077 02AE  
                   u3087 02CE                     u3097 02EE                     u2850 00D8  
                   _PEIE 007F96                     u2937 0B4C                     u2947 0CA4  
                   _RCIE 007CED                     _RCIF 007CF5                     u2957 17B4  
                   u2967 011E                     u2977 013E                     u2987 015E  
                   u2997 017E                     _RCIP 007CFD                     _TMR2 000FCC  
        __end_of_UART_Rx 09D4                     _main 1654             ___ftpack@arg 0060  
                   _modo 009F                     _mood 009B             ___ftpack@exp 0063  
                   _pwmD 0DE2                     _pwmI 0F2E                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0040  
                   prodh 000FF4                     prodl 000FF3                     start 00BA  
           ___ftmul@cntr 0078             ___param_bank 000000             ___ftmul@sign 0079  
           ___fttol@exp1 006E             ___fttol@lval 006A                    ??_pwm 0021  
                  ?_main 0001          __end_of___ftadd 05C6                    ?_pwmD 0001  
                  ?_pwmI 0001          __end_of___ftmul 0B32          __end_of___fttol 11BE  
                  _T2CON 000FCA                    _LATB0 007C50                    _LATB1 007C51  
                  _LATB2 007C52                    _LATB3 007C53                    i1l245 0072  
                  i2l240 0998                    _RCREG 000FAE                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISE 000F96                    _TXSTA 000FAC  
        __end_of_derecha 1808            ___awtoft@sign 0020                    _atras 17A6  
                  _freno 1820                    _pwmA1 15F0                    _pwmA2 16E8  
                  _pwmB1 158C                    _pwmB2 16A8            ___ftpack@sign 0064  
                  _start 0C8A                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8              i1_sensorOFF 182A          __initialization 1768  
           __end_of_main 16A8             __end_of_pwmD 0F2E             __end_of_pwmI 107A  
                 ??_main 008E            ___fttol@sign1 0069                   ??_pwmD 0021  
                 ??_pwmI 0021            __activetblptr 000002                ??_UART_Rx 0001  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_atras 0001                   ?_freno 0001                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   ?_pwmA1 0001                   ?_pwmA2 0001  
                 ?_pwmB1 0001                   ?_pwmB2 0001                   _CCPR1L 000FBE  
                 _CCPR2L 000FBB         __end_of___awtoft 1768         __end_of___ftpack 12CA  
                 ?_start 0001                   _INT1IE 007F83                   _INT1IF 007F80  
                 _INT2IE 007F84                   _INT2IF 007F81                   _INT1IP 007F86  
                 _INT2IP 007F87                   i1l1698 0068                   i2l2400 08D6  
                 i2l2420 0950                   i2l2412 091E                   i2l2404 08EE  
                 i2l2424 0968                   i2l2416 0938                   i2l2408 0906  
                 i2l2428 0980                   i2l2390 0896                   i2l2382 0866  
                 i2l2384 0870                   i2l2394 08B2                   i2l2396 08BE  
                 i2l2388 088C         __end_of_adelante 17FA                   _OSCCON 000FD3  
                 ___ftge 13BE                ??___ftadd 0080                ??___ftmul 0071  
              ??___fttol 0064                   _manual 05C6                   clear_0 1786  
                 clear_1 1792                ??_derecha 0021                   _sensor 0018  
                 _start1 0B32                   _start2 1486    ___ftmul@f3_as_product 0075  
           __pdataCOMRAM 003E         __end_of_settings 158C                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 1798               ___ftadd@f1 007A               ___ftadd@f2 007D  
             ___ftge@ff1 0060               ___ftge@ff2 0063            ___rparam_used 000001  
             ___awtoft@c 0068               ___ftmul@f1 006B               ___ftmul@f2 006E  
             ___fttol@f1 0060           __pcstackCOMRAM 0001            __end_of_atras 17D0  
          __end_of_freno 182A            __end_of_pwmA1 1654            __end_of_pwmA2 1728  
          __end_of_pwmB1 15F0            __end_of_pwmB2 16E8            __end_of_start 0DE2  
                ??_atras 007A                  ??_freno 0020                  ??_pwmA1 0021  
                ??_pwmA2 0021                  ??_pwmB1 0021                  ??_pwmB2 0021  
                ??_start 0086               __pbssBANK0 0090                  ?___ftge 0060  
                _CCP1CON 000FBD                  _CCP2CON 000FBA                  ?_manual 0001  
              ?___awtoft 0068                ?___ftpack 0060                  ?_sensor 0001  
                ?_start1 0001                  ?_start2 0001       __size_of_sensorOFF 000A  
              ?_adelante 0001                  _INTEDG1 007F8D                  _INTEDG2 007F8C  
     __size_of_izquierda 000E                  _UART_Rx 0008             ?i1_sensorOFF 0001  
                __Hparam 0000                  __Lparam 0000               _automatico 00BE  
              ?_settings 0001          __size_of___ftge 00C8                  ___ftadd 035E  
                ___ftmul 09D4                  ___fttol 107A          __size_of_manual 023E  
                __pcinit 1768               ??___awtoft 0020               ??___ftpack 0065  
                __ramtop 0800                  _derecha 17FA                  __ptext0 1654  
                __ptext1 0B32                  __ptext2 0C8A                  __ptext3 1510  
                __ptext4 05C6                  __ptext5 1816                  __ptext6 16A8  
                __ptext7 158C                  __ptext8 16E8                  __ptext9 15F0  
        __size_of_sensor 00A2          __size_of_start1 0158          __size_of_start2 008A  
             ??_adelante 007A                _T2CONbits 000FCA             __size_of_pwm 00F4  
         __pintcode_body 0804     end_of_initialization 1798            __Lmediumconst 0000  
                int_func 0804        __end_of_sensorOFF 1820        __end_of_izquierda 1816  
             ??_settings 0020                  postinc0 000FEE               _start1$985 0088  
             _start1$986 008B                _PORTBbits 000F81                _TRISCbits 000F94  
            ?_automatico 0001              ___ftmul@exp 0074           __end_of___ftge 1486  
          __pidataCOMRAM 1834           __end_of_manual 0804           __end_of_sensor 00BA  
         __end_of_start1 0C8A           __end_of_start2 1510      start_initialization 1768  
            __end_of_pwm 13BE     __size_ofi1_sensorOFF 000A                 ??___ftge 0066  
               ??_manual 0021                 ??_sensor 000F                 ??_start1 0086  
               ??_start2 007A        __size_of___awtoft 0040        __size_of___ftpack 010C  
            __pbssCOMRAM 0021        __size_of_adelante 002A            __pcstackBANK0 0060  
    __size_of_automatico 02A0                 ?_UART_Rx 0001              _ciclo_util1 0024  
            _ciclo_util2 0096                __pintcode 0008                 ?___ftadd 007A  
               ?___ftmul 006B                 ?___fttol 0060              __pintcodelo 0018  
      __size_of_settings 007C                 ?_derecha 0001           __size_of_atras 002A  
         __size_of_freno 000A           __size_of_pwmA1 0064           __size_of_pwmA2 0040  
         __size_of_pwmB1 0064           __size_of_pwmB2 0040           __size_of_start 0158  
               _LATAbits 000F89                 _LATEbits 000F8D                _sensorOFF 1816  
              _start$983 0088                _start$984 008B                _izquierda 1808  
             _ADCON0bits 000FC2              _conversion1 002D              _conversion2 002A  
            _conversion3 0027         __size_of_UART_Rx 09CC                 __Hrparam 0000  
           ??_automatico 007C                 __Lrparam 0000               ?_sensorOFF 0001  
             ?_izquierda 0001         __size_of___ftadd 0268         __size_of___ftmul 015E  
       __size_of___fttol 0144                 ___awtoft 1728                 ___ftpack 11BE  
       __size_of_derecha 000E                 _adelante 17D0                 __ptext10 035E  
               __ptext11 17FA                 __ptext20 1820                 __ptext12 0DE2  
               __ptext21 17D0                 __ptext13 17A6                 __ptext22 12CA  
               __ptext14 00BE                 __ptext23 107A                 __ptext15 1486  
               __ptext24 09D4                 __ptext16 1728                 __ptext25 11BE  
               __ptext17 1808                 __ptext18 0F2E                 __ptext27 182A  
               __ptext19 13BE       __end_of_automatico 035E              _duty_cicle1 003B  
            _duty_cicle2 0038            __size_of_main 0054            __size_of_pwmD 014C  
          __size_of_pwmI 014C                 _settings 1510                 int$flags 0040  
               intlevel1 0000                 intlevel2 0000            ??i1_sensorOFF 000F  
            ??_sensorOFF 0020              ??_izquierda 0021      __CFG_FOSC$INTOSC_HS 000000  
